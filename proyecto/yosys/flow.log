
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2018  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.8+369 (git sha1 ea0e0722, gcc 7.3.0-27ubuntu1~18.04 -fPIC -Os)


-- Executing script file `flow.ys' --

1. Executing Verilog-2005 frontend.
Parsing Verilog input from `./rtl/adder.v' to AST representation.
Generating RTLIL representation for module `\adder'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend.
Parsing Verilog input from `./rtl/asr8.v' to AST representation.
Generating RTLIL representation for module `\asr8'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend.
Parsing Verilog input from `./rtl/counter_down.v' to AST representation.
Generating RTLIL representation for module `\counter_down'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend.
Parsing Verilog input from `./rtl/counter_up.v' to AST representation.
Generating RTLIL representation for module `\counter_up'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend.
Parsing Verilog input from `./rtl/divisor_clock.v' to AST representation.
Generating RTLIL representation for module `\divisor_clock'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend.
Parsing Verilog input from `./rtl/FIR.v' to AST representation.
Generating RTLIL representation for module `\FIR'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend.
Parsing Verilog input from `./rtl/MAC.v' to AST representation.
Generating RTLIL representation for module `\MAC'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend.
Parsing Verilog input from `./rtl/register.v' to AST representation.
Generating RTLIL representation for module `\register'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend.
Parsing Verilog input from `./rtl/register_asr.v' to AST representation.
Generating RTLIL representation for module `\register_asr'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend.
Parsing Verilog input from `./rtl/retardo_N.v' to AST representation.
Generating RTLIL representation for module `\retardo_N'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend.
Parsing Verilog input from `./rtl/rom8.v' to AST representation.
Generating RTLIL representation for module `\rom8'.
Successfully finished Verilog frontend.

12. Executing Liberty frontend.
Imported 39 cell types from liberty file.

13. Executing SYNTH pass.

13.1. Executing HIERARCHY pass (managing design hierarchy).

13.1.1. Analyzing design hierarchy..
Top module:  \FIR
Used module:     \register
Used module:     \retardo_N
Used module:     \MAC
Used module:     \rom8
Used module:     \adder
Used module:     \divisor_clock
Used module:     \counter_down
Used module:     \counter_up
Used module:     \asr8

13.1.2. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 8
Generating RTLIL representation for module `$paramod\register\N=8'.

13.1.3. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 8
Found cached RTLIL representation for module `$paramod\register\N=8'.

13.1.4. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 8
Found cached RTLIL representation for module `$paramod\register\N=8'.

13.1.5. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 8
Found cached RTLIL representation for module `$paramod\register\N=8'.

13.1.6. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 8
Found cached RTLIL representation for module `$paramod\register\N=8'.

13.1.7. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 8
Found cached RTLIL representation for module `$paramod\register\N=8'.

13.1.8. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 8
Found cached RTLIL representation for module `$paramod\register\N=8'.

13.1.9. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 8
Found cached RTLIL representation for module `$paramod\register\N=8'.

13.1.10. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 8
Found cached RTLIL representation for module `$paramod\register\N=8'.

13.1.11. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 8
Found cached RTLIL representation for module `$paramod\register\N=8'.

13.1.12. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 8
Found cached RTLIL representation for module `$paramod\register\N=8'.

13.1.13. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 8
Found cached RTLIL representation for module `$paramod\register\N=8'.

13.1.14. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 8
Found cached RTLIL representation for module `$paramod\register\N=8'.

13.1.15. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 8
Found cached RTLIL representation for module `$paramod\register\N=8'.

13.1.16. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 8
Found cached RTLIL representation for module `$paramod\register\N=8'.

13.1.17. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 8
Found cached RTLIL representation for module `$paramod\register\N=8'.

13.1.18. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 8
Found cached RTLIL representation for module `$paramod\register\N=8'.

13.1.19. Executing AST frontend in derive mode using pre-parsed AST for module `\retardo_N'.
Parameter \WIDTH_DELAY = 1
Parameter \WIDTH_DATA = 8
Generating RTLIL representation for module `$paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8'.

13.1.20. Executing AST frontend in derive mode using pre-parsed AST for module `\MAC'.
Parameter \WIDTH_DATA = 8
Parameter \WIDTH_COEF0 = 8
Parameter \WIDTH_MAC_OUT = 8
Generating RTLIL representation for module `$paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8'.

13.1.21. Executing AST frontend in derive mode using pre-parsed AST for module `\retardo_N'.
Parameter \WIDTH_DELAY = 1
Parameter \WIDTH_DATA = 8
Found cached RTLIL representation for module `$paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8'.

13.1.22. Executing AST frontend in derive mode using pre-parsed AST for module `\rom8'.
Parameter \WIDTH_COEF0 = 8
Parameter \N_TAPS = 16
Generating RTLIL representation for module `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16'.

13.1.23. Executing AST frontend in derive mode using pre-parsed AST for module `\adder'.
Parameter \N = 8
Generating RTLIL representation for module `$paramod\adder\N=8'.

13.1.24. Executing AST frontend in derive mode using pre-parsed AST for module `\retardo_N'.
Parameter \WIDTH_DELAY = 1
Parameter \WIDTH_DATA = 8
Found cached RTLIL representation for module `$paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8'.

13.1.25. Executing AST frontend in derive mode using pre-parsed AST for module `\retardo_N'.
Parameter \WIDTH_DELAY = 1
Parameter \WIDTH_DATA = 8
Found cached RTLIL representation for module `$paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8'.

13.1.26. Executing AST frontend in derive mode using pre-parsed AST for module `\retardo_N'.
Parameter \WIDTH_DELAY = 10
Parameter \WIDTH_DATA = 1
Generating RTLIL representation for module `$paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1'.

13.1.27. Executing AST frontend in derive mode using pre-parsed AST for module `\retardo_N'.
Parameter \WIDTH_DELAY = 7
Parameter \WIDTH_DATA = 1
Generating RTLIL representation for module `$paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1'.

13.1.28. Executing AST frontend in derive mode using pre-parsed AST for module `\divisor_clock'.
Parameter \N_TAPS = 16
Generating RTLIL representation for module `$paramod\divisor_clock\N_TAPS=16'.

13.1.29. Executing AST frontend in derive mode using pre-parsed AST for module `\counter_down'.
Parameter \N = 3
Generating RTLIL representation for module `$paramod\counter_down\N=3'.

13.1.30. Executing AST frontend in derive mode using pre-parsed AST for module `\counter_up'.
Parameter \N = 3
Generating RTLIL representation for module `$paramod\counter_up\N=3'.

13.1.31. Executing AST frontend in derive mode using pre-parsed AST for module `\asr8'.
Parameter \WIDTH_DATA = 8
Parameter \N_TAPS = 8
Generating RTLIL representation for module `$paramod\asr8\WIDTH_DATA=8\N_TAPS=8'.

13.1.32. Executing AST frontend in derive mode using pre-parsed AST for module `\asr8'.
Parameter \WIDTH_DATA = 8
Parameter \N_TAPS = 8
Found cached RTLIL representation for module `$paramod\asr8\WIDTH_DATA=8\N_TAPS=8'.

13.1.33. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 8
Found cached RTLIL representation for module `$paramod\register\N=8'.

13.1.34. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 8
Found cached RTLIL representation for module `$paramod\register\N=8'.

13.1.35. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 8
Found cached RTLIL representation for module `$paramod\register\N=8'.

13.1.36. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 8
Found cached RTLIL representation for module `$paramod\register\N=8'.

13.1.37. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 8
Found cached RTLIL representation for module `$paramod\register\N=8'.

13.1.38. Analyzing design hierarchy..
Top module:  \FIR
Used module:     $paramod\register\N=8
Used module:     $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8
Used module:         \register
Used module:     $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8
Used module:     $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16
Used module:     $paramod\adder\N=8
Used module:     $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1
Used module:     $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1
Used module:     $paramod\divisor_clock\N_TAPS=16
Used module:     $paramod\counter_down\N=3
Used module:     $paramod\counter_up\N=3
Used module:     $paramod\asr8\WIDTH_DATA=8\N_TAPS=8

13.1.39. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 8
Found cached RTLIL representation for module `$paramod\register\N=8'.

13.1.40. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 1
Generating RTLIL representation for module `$paramod\register\N=1'.

13.1.41. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 1
Found cached RTLIL representation for module `$paramod\register\N=1'.

13.1.42. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 1
Found cached RTLIL representation for module `$paramod\register\N=1'.

13.1.43. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 1
Found cached RTLIL representation for module `$paramod\register\N=1'.

13.1.44. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 1
Found cached RTLIL representation for module `$paramod\register\N=1'.

13.1.45. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 1
Found cached RTLIL representation for module `$paramod\register\N=1'.

13.1.46. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 1
Found cached RTLIL representation for module `$paramod\register\N=1'.

13.1.47. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 1
Found cached RTLIL representation for module `$paramod\register\N=1'.

13.1.48. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 1
Found cached RTLIL representation for module `$paramod\register\N=1'.

13.1.49. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 1
Found cached RTLIL representation for module `$paramod\register\N=1'.

13.1.50. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 1
Found cached RTLIL representation for module `$paramod\register\N=1'.

13.1.51. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 1
Found cached RTLIL representation for module `$paramod\register\N=1'.

13.1.52. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 1
Found cached RTLIL representation for module `$paramod\register\N=1'.

13.1.53. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 1
Found cached RTLIL representation for module `$paramod\register\N=1'.

13.1.54. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 1
Found cached RTLIL representation for module `$paramod\register\N=1'.

13.1.55. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 1
Found cached RTLIL representation for module `$paramod\register\N=1'.

13.1.56. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 1
Found cached RTLIL representation for module `$paramod\register\N=1'.

13.1.57. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 8
Found cached RTLIL representation for module `$paramod\register\N=8'.

13.1.58. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 8
Found cached RTLIL representation for module `$paramod\register\N=8'.

13.1.59. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 8
Found cached RTLIL representation for module `$paramod\register\N=8'.

13.1.60. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 8
Found cached RTLIL representation for module `$paramod\register\N=8'.

13.1.61. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 8
Found cached RTLIL representation for module `$paramod\register\N=8'.

13.1.62. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 8
Found cached RTLIL representation for module `$paramod\register\N=8'.

13.1.63. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 8
Found cached RTLIL representation for module `$paramod\register\N=8'.

13.1.64. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter \N = 8
Found cached RTLIL representation for module `$paramod\register\N=8'.

13.1.65. Analyzing design hierarchy..
Top module:  \FIR
Used module:     $paramod\register\N=8
Used module:     $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8
Used module:     $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8
Used module:     $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16
Used module:     $paramod\adder\N=8
Used module:     $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1
Used module:         $paramod\register\N=1
Used module:     $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1
Used module:     $paramod\divisor_clock\N_TAPS=16
Used module:     $paramod\counter_down\N=3
Used module:     $paramod\counter_up\N=3
Used module:     $paramod\asr8\WIDTH_DATA=8\N_TAPS=8

13.1.66. Analyzing design hierarchy..
Top module:  \FIR
Used module:     $paramod\register\N=8
Used module:     $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8
Used module:     $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8
Used module:     $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16
Used module:     $paramod\adder\N=8
Used module:     $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1
Used module:         $paramod\register\N=1
Used module:     $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1
Used module:     $paramod\divisor_clock\N_TAPS=16
Used module:     $paramod\counter_down\N=3
Used module:     $paramod\counter_up\N=3
Used module:     $paramod\asr8\WIDTH_DATA=8\N_TAPS=8
Removing unused module `\rom8'.
Removing unused module `\retardo_N'.
Removing unused module `\register_asr'.
Removing unused module `\register'.
Removing unused module `\MAC'.
Removing unused module `\divisor_clock'.
Removing unused module `\counter_up'.
Removing unused module `\counter_down'.
Removing unused module `\asr8'.
Removing unused module `\adder'.
Removed 10 unused modules.

13.2. Executing PROC pass (convert processes to netlists).

13.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

13.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 2 switch rules as full_case in process $proc$./rtl/register.v:8$88 in module $paramod\register\N=8.
Marked 2 switch rules as full_case in process $proc$./rtl/register.v:8$177 in module $paramod\register\N=1.
Marked 1 switch rules as full_case in process $proc$./rtl/asr8.v:3$172 in module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8.
Marked 1 switch rules as full_case in process $proc$./rtl/counter_up.v:7$160 in module $paramod\counter_up\N=3.
Marked 1 switch rules as full_case in process $proc$./rtl/counter_down.v:9$157 in module $paramod\counter_down\N=3.
Marked 1 switch rules as full_case in process $proc$./rtl/divisor_clock.v:29$151 in module $paramod\divisor_clock\N_TAPS=16.
Marked 2 switch rules as full_case in process $proc$./rtl/FIR.v:66$38 in module FIR.
Marked 1 switch rules as full_case in process $proc$./rtl/MAC.v:39$93 in module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8.
Removed a total of 0 dead cases.

13.2.3. Executing PROC_INIT pass (extract init attributes).
Found init rule in `$paramod\counter_up\N=3.$proc$./rtl/counter_up.v:4$162'.
  Set init value: \contador = 3'000
Found init rule in `$paramod\counter_down\N=3.$proc$./rtl/counter_down.v:4$159'.
  Set init value: \contador = 3'111
Found init rule in `$paramod\divisor_clock\N_TAPS=16.$proc$./rtl/divisor_clock.v:27$156'.
  Set init value: \counter = 4'0000
Found init rule in `\FIR.$proc$./rtl/FIR.v:43$40'.
  Set init value: \enable_asr = 1'0
Found init rule in `$paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8.$proc$./rtl/MAC.v:35$94'.
  Set init value: \salida_correcta = 18'000000000000000000

13.2.4. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \clr in `$paramod\register\N=8.$proc$./rtl/register.v:8$88'.
Found async reset \clr in `$paramod\register\N=1.$proc$./rtl/register.v:8$177'.

13.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8.$proc$./rtl/retardo_N.v:5$90'.
     1/1: $0\connect_wire[0][7:0]
Creating decoders for process `$paramod\register\N=8.$proc$./rtl/register.v:8$88'.
     1/1: $0\q[7:0]
Creating decoders for process `$paramod\register\N=1.$proc$./rtl/register.v:8$177'.
     1/1: $0\q[0:0]
Creating decoders for process `$paramod\asr8\WIDTH_DATA=8\N_TAPS=8.$proc$./rtl/asr8.v:3$176'.
     1/1: $0\cables[0][7:0]
Creating decoders for process `$paramod\asr8\WIDTH_DATA=8\N_TAPS=8.$proc$./rtl/asr8.v:3$172'.
     1/2: $1$mem2reg_rd$\cables$./rtl/asr8.v:13$171_DATA[7:0]$174
     2/2: $0$mem2reg_rd$\cables$./rtl/asr8.v:13$171_DATA[7:0]$173
Creating decoders for process `$paramod\counter_up\N=3.$proc$./rtl/counter_up.v:4$162'.
     1/1: $1\contador[2:0]
Creating decoders for process `$paramod\counter_up\N=3.$proc$./rtl/counter_up.v:7$160'.
     1/1: $0\contador[2:0]
Creating decoders for process `$paramod\counter_down\N=3.$proc$./rtl/counter_down.v:4$159'.
     1/1: $1\contador[2:0]
Creating decoders for process `$paramod\counter_down\N=3.$proc$./rtl/counter_down.v:9$157'.
     1/1: $0\contador[2:0]
Creating decoders for process `$paramod\divisor_clock\N_TAPS=16.$proc$./rtl/divisor_clock.v:27$156'.
     1/1: $1\counter[3:0]
Creating decoders for process `$paramod\divisor_clock\N_TAPS=16.$proc$./rtl/divisor_clock.v:29$151'.
     1/1: $0\counter[3:0]
Creating decoders for process `\FIR.$proc$./rtl/FIR.v:43$40'.
     1/1: $1\enable_asr[0:0]
Creating decoders for process `\FIR.$proc$./rtl/FIR.v:66$38'.
     1/1: $0\enable_asr[0:0]
Creating decoders for process `$paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1.$proc$./rtl/retardo_N.v:5$150'.
     1/1: $0\connect_wire[0][0:0]
Creating decoders for process `$paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1.$proc$./rtl/retardo_N.v:5$142'.
     1/1: $0\connect_wire[0][0:0]
Creating decoders for process `$paramod\adder\N=8.$proc$./rtl/adder.v:12$131'.
     1/1: $0\suma[8:0]
Creating decoders for process `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$proc$./rtl/rom8.v:35$113'.
     1/16: $0$memwr$\rom$./rtl/rom8.v:45$102_DATA[7:0]$129
     2/16: $0$memwr$\rom$./rtl/rom8.v:45$102_ADDR[31:0]$128
     3/16: $0$memwr$\rom$./rtl/rom8.v:44$101_DATA[7:0]$127
     4/16: $0$memwr$\rom$./rtl/rom8.v:44$101_ADDR[31:0]$126
     5/16: $0$memwr$\rom$./rtl/rom8.v:43$100_DATA[7:0]$125
     6/16: $0$memwr$\rom$./rtl/rom8.v:43$100_ADDR[31:0]$124
     7/16: $0$memwr$\rom$./rtl/rom8.v:42$99_DATA[7:0]$123
     8/16: $0$memwr$\rom$./rtl/rom8.v:42$99_ADDR[31:0]$115
     9/16: $0$memwr$\rom$./rtl/rom8.v:41$98_DATA[7:0]$117
    10/16: $0$memwr$\rom$./rtl/rom8.v:41$98_ADDR[31:0]$116
    11/16: $0$memwr$\rom$./rtl/rom8.v:40$97_DATA[7:0]$114
    12/16: $0$memwr$\rom$./rtl/rom8.v:40$97_ADDR[31:0]$120
    13/16: $0$memwr$\rom$./rtl/rom8.v:39$96_DATA[7:0]$122
    14/16: $0$memwr$\rom$./rtl/rom8.v:39$96_ADDR[31:0]$119
    15/16: $0$memwr$\rom$./rtl/rom8.v:38$95_DATA[7:0]$121
    16/16: $0$memwr$\rom$./rtl/rom8.v:38$95_ADDR[31:0]$118
Creating decoders for process `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$proc$./rtl/rom8.v:13$103'.
     1/1: $0\q[7:0]
Creating decoders for process `$paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8.$proc$./rtl/MAC.v:35$94'.
     1/1: $1\salida_correcta[17:0]
Creating decoders for process `$paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8.$proc$./rtl/MAC.v:39$93'.
     1/1: $0\salida_correcta[17:0]

13.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8.\connect_wire[0]' from process `$paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8.$proc$./rtl/retardo_N.v:5$90'.
No latch inferred for signal `$paramod\asr8\WIDTH_DATA=8\N_TAPS=8.\cables[0]' from process `$paramod\asr8\WIDTH_DATA=8\N_TAPS=8.$proc$./rtl/asr8.v:3$176'.
No latch inferred for signal `$paramod\asr8\WIDTH_DATA=8\N_TAPS=8.$mem2reg_rd$\cables$./rtl/asr8.v:13$171_DATA' from process `$paramod\asr8\WIDTH_DATA=8\N_TAPS=8.$proc$./rtl/asr8.v:3$172'.
No latch inferred for signal `$paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1.\connect_wire[0]' from process `$paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1.$proc$./rtl/retardo_N.v:5$150'.
No latch inferred for signal `$paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1.\connect_wire[0]' from process `$paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1.$proc$./rtl/retardo_N.v:5$142'.
No latch inferred for signal `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$memwr$\rom$./rtl/rom8.v:40$97_DATA' from process `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$proc$./rtl/rom8.v:35$113'.
No latch inferred for signal `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$memwr$\rom$./rtl/rom8.v:42$99_ADDR' from process `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$proc$./rtl/rom8.v:35$113'.
No latch inferred for signal `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$memwr$\rom$./rtl/rom8.v:41$98_ADDR' from process `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$proc$./rtl/rom8.v:35$113'.
No latch inferred for signal `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$memwr$\rom$./rtl/rom8.v:41$98_DATA' from process `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$proc$./rtl/rom8.v:35$113'.
No latch inferred for signal `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$memwr$\rom$./rtl/rom8.v:38$95_ADDR' from process `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$proc$./rtl/rom8.v:35$113'.
No latch inferred for signal `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$memwr$\rom$./rtl/rom8.v:39$96_ADDR' from process `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$proc$./rtl/rom8.v:35$113'.
No latch inferred for signal `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$memwr$\rom$./rtl/rom8.v:40$97_ADDR' from process `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$proc$./rtl/rom8.v:35$113'.
No latch inferred for signal `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$memwr$\rom$./rtl/rom8.v:38$95_DATA' from process `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$proc$./rtl/rom8.v:35$113'.
No latch inferred for signal `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$memwr$\rom$./rtl/rom8.v:39$96_DATA' from process `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$proc$./rtl/rom8.v:35$113'.
No latch inferred for signal `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$memwr$\rom$./rtl/rom8.v:42$99_DATA' from process `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$proc$./rtl/rom8.v:35$113'.
No latch inferred for signal `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$memwr$\rom$./rtl/rom8.v:43$100_ADDR' from process `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$proc$./rtl/rom8.v:35$113'.
No latch inferred for signal `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$memwr$\rom$./rtl/rom8.v:43$100_DATA' from process `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$proc$./rtl/rom8.v:35$113'.
No latch inferred for signal `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$memwr$\rom$./rtl/rom8.v:44$101_ADDR' from process `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$proc$./rtl/rom8.v:35$113'.
No latch inferred for signal `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$memwr$\rom$./rtl/rom8.v:44$101_DATA' from process `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$proc$./rtl/rom8.v:35$113'.
No latch inferred for signal `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$memwr$\rom$./rtl/rom8.v:45$102_ADDR' from process `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$proc$./rtl/rom8.v:35$113'.
No latch inferred for signal `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$memwr$\rom$./rtl/rom8.v:45$102_DATA' from process `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$proc$./rtl/rom8.v:35$113'.

13.2.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod\register\N=8.\q' using process `$paramod\register\N=8.$proc$./rtl/register.v:8$88'.
  created $adff cell `$procdff$215' with positive edge clock and positive level reset.
Creating register for signal `$paramod\register\N=1.\q' using process `$paramod\register\N=1.$proc$./rtl/register.v:8$177'.
  created $adff cell `$procdff$216' with positive edge clock and positive level reset.
Creating register for signal `$paramod\counter_up\N=3.\contador' using process `$paramod\counter_up\N=3.$proc$./rtl/counter_up.v:7$160'.
  created $dff cell `$procdff$217' with positive edge clock.
Creating register for signal `$paramod\counter_down\N=3.\contador' using process `$paramod\counter_down\N=3.$proc$./rtl/counter_down.v:9$157'.
  created $dff cell `$procdff$218' with positive edge clock.
Creating register for signal `$paramod\divisor_clock\N_TAPS=16.\counter' using process `$paramod\divisor_clock\N_TAPS=16.$proc$./rtl/divisor_clock.v:29$151'.
  created $dff cell `$procdff$219' with positive edge clock.
Creating register for signal `\FIR.\enable_asr' using process `\FIR.$proc$./rtl/FIR.v:66$38'.
  created $dff cell `$procdff$220' with positive edge clock.
Creating register for signal `$paramod\adder\N=8.\suma' using process `$paramod\adder\N=8.$proc$./rtl/adder.v:12$131'.
  created $dff cell `$procdff$221' with positive edge clock.
Creating register for signal `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.\q' using process `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$proc$./rtl/rom8.v:13$103'.
  created $dff cell `$procdff$222' with positive edge clock.
Creating register for signal `$paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8.\salida_correcta' using process `$paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8.$proc$./rtl/MAC.v:39$93'.
  created $dff cell `$procdff$223' with positive edge clock.

13.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8.$proc$./rtl/retardo_N.v:5$90'.
Found and cleaned up 1 empty switch in `$paramod\register\N=8.$proc$./rtl/register.v:8$88'.
Removing empty process `$paramod\register\N=8.$proc$./rtl/register.v:8$88'.
Found and cleaned up 1 empty switch in `$paramod\register\N=1.$proc$./rtl/register.v:8$177'.
Removing empty process `$paramod\register\N=1.$proc$./rtl/register.v:8$177'.
Removing empty process `$paramod\asr8\WIDTH_DATA=8\N_TAPS=8.$proc$./rtl/asr8.v:3$176'.
Found and cleaned up 1 empty switch in `$paramod\asr8\WIDTH_DATA=8\N_TAPS=8.$proc$./rtl/asr8.v:3$172'.
Removing empty process `$paramod\asr8\WIDTH_DATA=8\N_TAPS=8.$proc$./rtl/asr8.v:3$172'.
Removing empty process `$paramod\counter_up\N=3.$proc$./rtl/counter_up.v:4$162'.
Found and cleaned up 1 empty switch in `$paramod\counter_up\N=3.$proc$./rtl/counter_up.v:7$160'.
Removing empty process `$paramod\counter_up\N=3.$proc$./rtl/counter_up.v:7$160'.
Removing empty process `$paramod\counter_down\N=3.$proc$./rtl/counter_down.v:4$159'.
Found and cleaned up 1 empty switch in `$paramod\counter_down\N=3.$proc$./rtl/counter_down.v:9$157'.
Removing empty process `$paramod\counter_down\N=3.$proc$./rtl/counter_down.v:9$157'.
Removing empty process `$paramod\divisor_clock\N_TAPS=16.$proc$./rtl/divisor_clock.v:27$156'.
Found and cleaned up 2 empty switches in `$paramod\divisor_clock\N_TAPS=16.$proc$./rtl/divisor_clock.v:29$151'.
Removing empty process `$paramod\divisor_clock\N_TAPS=16.$proc$./rtl/divisor_clock.v:29$151'.
Removing empty process `FIR.$proc$./rtl/FIR.v:43$40'.
Found and cleaned up 2 empty switches in `\FIR.$proc$./rtl/FIR.v:66$38'.
Removing empty process `FIR.$proc$./rtl/FIR.v:66$38'.
Removing empty process `$paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1.$proc$./rtl/retardo_N.v:5$150'.
Removing empty process `$paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1.$proc$./rtl/retardo_N.v:5$142'.
Removing empty process `$paramod\adder\N=8.$proc$./rtl/adder.v:12$131'.
Removing empty process `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$proc$./rtl/rom8.v:35$113'.
Removing empty process `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$proc$./rtl/rom8.v:13$103'.
Removing empty process `$paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8.$proc$./rtl/MAC.v:35$94'.
Found and cleaned up 1 empty switch in `$paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8.$proc$./rtl/MAC.v:39$93'.
Removing empty process `$paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8.$proc$./rtl/MAC.v:39$93'.
Cleaned up 10 empty switches.

13.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8.
Optimizing module $paramod\register\N=8.
Optimizing module $paramod\register\N=1.
Optimizing module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8.
<suppressed ~1 debug messages>
Optimizing module $paramod\counter_up\N=3.
Optimizing module $paramod\counter_down\N=3.
Optimizing module $paramod\divisor_clock\N_TAPS=16.
Optimizing module FIR.
<suppressed ~1 debug messages>
Optimizing module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1.
Optimizing module $paramod\adder\N=8.
Optimizing module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
Optimizing module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8.

13.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8..
Finding unused cells or wires in module $paramod\register\N=8..
Finding unused cells or wires in module $paramod\register\N=1..
Finding unused cells or wires in module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8..
Finding unused cells or wires in module $paramod\counter_up\N=3..
Finding unused cells or wires in module $paramod\counter_down\N=3..
Finding unused cells or wires in module $paramod\divisor_clock\N_TAPS=16..
Finding unused cells or wires in module \FIR..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\adder\N=8..
Finding unused cells or wires in module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16..
Finding unused cells or wires in module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8..
Removed 0 unused cells and 69 unused wires.
<suppressed ~13 debug messages>

13.5. Executing CHECK pass (checking for obvious problems).
checking module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8..
checking module $paramod\adder\N=8..
checking module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8..
checking module $paramod\counter_down\N=3..
checking module $paramod\counter_up\N=3..
checking module $paramod\divisor_clock\N_TAPS=16..
checking module $paramod\register\N=1..
checking module $paramod\register\N=8..
checking module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1..
checking module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8..
checking module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1..
checking module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16..
checking module FIR..
found and reported 0 problems.

13.6. Executing OPT pass (performing simple optimizations).

13.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8.
Optimizing module $paramod\adder\N=8.
Optimizing module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8.
Optimizing module $paramod\counter_down\N=3.
Optimizing module $paramod\counter_up\N=3.
Optimizing module $paramod\divisor_clock\N_TAPS=16.
Optimizing module $paramod\register\N=1.
Optimizing module $paramod\register\N=8.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1.
Optimizing module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
Optimizing module FIR.

13.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8'.
Finding identical cells in module `$paramod\adder\N=8'.
Finding identical cells in module `$paramod\asr8\WIDTH_DATA=8\N_TAPS=8'.
Finding identical cells in module `$paramod\counter_down\N=3'.
Finding identical cells in module `$paramod\counter_up\N=3'.
Finding identical cells in module `$paramod\divisor_clock\N_TAPS=16'.
Finding identical cells in module `$paramod\register\N=1'.
Finding identical cells in module `$paramod\register\N=8'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1'.
Finding identical cells in module `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16'.
Finding identical cells in module `\FIR'.
Removed a total of 0 cells.

13.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\adder\N=8..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\counter_down\N=3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\counter_up\N=3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\divisor_clock\N_TAPS=16..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\register\N=1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\register\N=8..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \FIR..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

13.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8.
  Optimizing cells in module $paramod\adder\N=8.
  Optimizing cells in module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8.
  Optimizing cells in module $paramod\counter_down\N=3.
  Optimizing cells in module $paramod\counter_up\N=3.
  Optimizing cells in module $paramod\divisor_clock\N_TAPS=16.
  Optimizing cells in module $paramod\register\N=1.
  Optimizing cells in module $paramod\register\N=8.
  Optimizing cells in module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1.
  Optimizing cells in module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8.
  Optimizing cells in module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1.
  Optimizing cells in module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
  Optimizing cells in module \FIR.
Performed a total of 0 changes.

13.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8'.
Finding identical cells in module `$paramod\adder\N=8'.
Finding identical cells in module `$paramod\asr8\WIDTH_DATA=8\N_TAPS=8'.
Finding identical cells in module `$paramod\counter_down\N=3'.
Finding identical cells in module `$paramod\counter_up\N=3'.
Finding identical cells in module `$paramod\divisor_clock\N_TAPS=16'.
Finding identical cells in module `$paramod\register\N=1'.
Finding identical cells in module `$paramod\register\N=8'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1'.
Finding identical cells in module `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16'.
Finding identical cells in module `\FIR'.
Removed a total of 0 cells.

13.6.6. Executing OPT_RMDFF pass (remove dff with constant values).

13.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8..
Finding unused cells or wires in module $paramod\adder\N=8..
Finding unused cells or wires in module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8..
Finding unused cells or wires in module $paramod\counter_down\N=3..
Finding unused cells or wires in module $paramod\counter_up\N=3..
Finding unused cells or wires in module $paramod\divisor_clock\N_TAPS=16..
Finding unused cells or wires in module $paramod\register\N=1..
Finding unused cells or wires in module $paramod\register\N=8..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16..
Finding unused cells or wires in module \FIR..
Removed 0 unused cells and 69 unused wires.

13.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8.
Optimizing module $paramod\adder\N=8.
Optimizing module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8.
Optimizing module $paramod\counter_down\N=3.
Optimizing module $paramod\counter_up\N=3.
Optimizing module $paramod\divisor_clock\N_TAPS=16.
Optimizing module $paramod\register\N=1.
Optimizing module $paramod\register\N=8.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1.
Optimizing module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
Optimizing module FIR.

13.6.9. Finished OPT passes. (There is nothing left to do.)

13.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 4) from port B of cell $paramod\asr8\WIDTH_DATA=8\N_TAPS=8.$procmux$192_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell $paramod\asr8\WIDTH_DATA=8\N_TAPS=8.$procmux$191_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell $paramod\asr8\WIDTH_DATA=8\N_TAPS=8.$procmux$190_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell $paramod\asr8\WIDTH_DATA=8\N_TAPS=8.$procmux$189_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell $paramod\asr8\WIDTH_DATA=8\N_TAPS=8.$procmux$188_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell $paramod\asr8\WIDTH_DATA=8\N_TAPS=8.$procmux$193_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell $paramod\asr8\WIDTH_DATA=8\N_TAPS=8.$procmux$187_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell $paramod\asr8\WIDTH_DATA=8\N_TAPS=8.$add$./rtl/asr8.v:13$175 ($add).
Removed top 28 bits (of 32) from port Y of cell $paramod\asr8\WIDTH_DATA=8\N_TAPS=8.$add$./rtl/asr8.v:13$175 ($add).
Removed top 28 bits (of 32) from wire $paramod\asr8\WIDTH_DATA=8\N_TAPS=8.$add$./rtl/asr8.v:13$175_Y.
Removed top 31 bits (of 32) from port B of cell $paramod\counter_down\N=3.$sub$./rtl/counter_down.v:15$158 ($sub).
Removed top 29 bits (of 32) from port Y of cell $paramod\counter_down\N=3.$sub$./rtl/counter_down.v:15$158 ($sub).
Removed top 29 bits (of 32) from wire $paramod\counter_down\N=3.$sub$./rtl/counter_down.v:15$158_Y.
Removed top 31 bits (of 32) from port B of cell $paramod\counter_up\N=3.$add$./rtl/counter_up.v:13$161 ($add).
Removed top 29 bits (of 32) from port Y of cell $paramod\counter_up\N=3.$add$./rtl/counter_up.v:13$161 ($add).
Removed top 29 bits (of 32) from wire $paramod\counter_up\N=3.$add$./rtl/counter_up.v:13$161_Y.
Removed top 28 bits (of 32) from port B of cell $paramod\divisor_clock\N_TAPS=16.$lt$./rtl/divisor_clock.v:37$154 ($lt).
Removed top 31 bits (of 32) from port B of cell $paramod\divisor_clock\N_TAPS=16.$add$./rtl/divisor_clock.v:31$152 ($add).
Removed top 28 bits (of 32) from port Y of cell $paramod\divisor_clock\N_TAPS=16.$add$./rtl/divisor_clock.v:31$152 ($add).
Removed top 28 bits (of 32) from port B of cell $paramod\divisor_clock\N_TAPS=16.$ge$./rtl/divisor_clock.v:34$153 ($ge).
Removed top 28 bits (of 32) from wire $paramod\divisor_clock\N_TAPS=16.$add$./rtl/divisor_clock.v:31$152_Y.
Removed top 29 address bits (of 32) from memory init port $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$meminit$\rom$./rtl/rom8.v:38$105 (rom).
Removed top 29 address bits (of 32) from memory init port $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$meminit$\rom$./rtl/rom8.v:39$106 (rom).
Removed top 29 address bits (of 32) from memory init port $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$meminit$\rom$./rtl/rom8.v:40$107 (rom).
Removed top 29 address bits (of 32) from memory init port $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$meminit$\rom$./rtl/rom8.v:41$108 (rom).
Removed top 29 address bits (of 32) from memory init port $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$meminit$\rom$./rtl/rom8.v:42$109 (rom).
Removed top 29 address bits (of 32) from memory init port $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$meminit$\rom$./rtl/rom8.v:43$110 (rom).
Removed top 29 address bits (of 32) from memory init port $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$meminit$\rom$./rtl/rom8.v:44$111 (rom).
Removed top 29 address bits (of 32) from memory init port $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.$meminit$\rom$./rtl/rom8.v:45$112 (rom).

13.8. Executing TECHMAP pass (map to technology primitives).

13.8.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

13.8.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~168 debug messages>

13.9. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8:
  creating $macc model for $add$./rtl/MAC.v:37$92 ($add).
  creating $macc model for $mul$./rtl/MAC.v:32$91 ($mul).
  creating $alu model for $macc $add$./rtl/MAC.v:37$92.
  creating $macc cell for $mul$./rtl/MAC.v:32$91: $auto$alumacc.cc:354:replace_macc$228
  creating $alu cell for $add$./rtl/MAC.v:37$92: $auto$alumacc.cc:474:replace_alu$229
  created 1 $alu and 1 $macc cells.
Extracting $alu and $macc cells in module $paramod\adder\N=8:
  creating $macc model for $add$./rtl/adder.v:10$130 ($add).
  creating $alu model for $macc $add$./rtl/adder.v:10$130.
  creating $alu cell for $add$./rtl/adder.v:10$130: $auto$alumacc.cc:474:replace_alu$232
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8:
  creating $macc model for $add$./rtl/asr8.v:13$175 ($add).
  creating $alu model for $macc $add$./rtl/asr8.v:13$175.
  creating $alu cell for $add$./rtl/asr8.v:13$175: $auto$alumacc.cc:474:replace_alu$235
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\counter_down\N=3:
  creating $macc model for $sub$./rtl/counter_down.v:15$158 ($sub).
  creating $alu model for $macc $sub$./rtl/counter_down.v:15$158.
  creating $alu cell for $sub$./rtl/counter_down.v:15$158: $auto$alumacc.cc:474:replace_alu$238
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\counter_up\N=3:
  creating $macc model for $add$./rtl/counter_up.v:13$161 ($add).
  creating $alu model for $macc $add$./rtl/counter_up.v:13$161.
  creating $alu cell for $add$./rtl/counter_up.v:13$161: $auto$alumacc.cc:474:replace_alu$241
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\divisor_clock\N_TAPS=16:
  creating $macc model for $add$./rtl/divisor_clock.v:31$152 ($add).
  creating $alu model for $macc $add$./rtl/divisor_clock.v:31$152.
  creating $alu model for $ge$./rtl/divisor_clock.v:34$153 ($ge): new $alu
  creating $alu model for $lt$./rtl/divisor_clock.v:37$154 ($lt): new $alu
  creating $alu cell for $lt$./rtl/divisor_clock.v:37$154: $auto$alumacc.cc:474:replace_alu$246
  creating $alu cell for $ge$./rtl/divisor_clock.v:34$153: $auto$alumacc.cc:474:replace_alu$251
  creating $alu cell for $add$./rtl/divisor_clock.v:31$152: $auto$alumacc.cc:474:replace_alu$264
  created 3 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\register\N=1:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\register\N=8:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module FIR:
  created 0 $alu and 0 $macc cells.

13.10. Executing SHARE pass (SAT-based resource sharing).

13.11. Executing OPT pass (performing simple optimizations).

13.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8.
Optimizing module $paramod\adder\N=8.
Optimizing module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8.
Optimizing module $paramod\counter_down\N=3.
Optimizing module $paramod\counter_up\N=3.
Optimizing module $paramod\divisor_clock\N_TAPS=16.
<suppressed ~1 debug messages>
Optimizing module $paramod\register\N=1.
Optimizing module $paramod\register\N=8.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1.
Optimizing module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
Optimizing module FIR.

13.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8'.
Finding identical cells in module `$paramod\adder\N=8'.
Finding identical cells in module `$paramod\asr8\WIDTH_DATA=8\N_TAPS=8'.
Finding identical cells in module `$paramod\counter_down\N=3'.
Finding identical cells in module `$paramod\counter_up\N=3'.
Finding identical cells in module `$paramod\divisor_clock\N_TAPS=16'.
Finding identical cells in module `$paramod\register\N=1'.
Finding identical cells in module `$paramod\register\N=8'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1'.
Finding identical cells in module `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16'.
Finding identical cells in module `\FIR'.
Removed a total of 0 cells.

13.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\adder\N=8..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\counter_down\N=3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\counter_up\N=3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\divisor_clock\N_TAPS=16..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\register\N=1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\register\N=8..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \FIR..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

13.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8.
  Optimizing cells in module $paramod\adder\N=8.
  Optimizing cells in module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8.
  Optimizing cells in module $paramod\counter_down\N=3.
  Optimizing cells in module $paramod\counter_up\N=3.
  Optimizing cells in module $paramod\divisor_clock\N_TAPS=16.
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$254: { $auto$alumacc.cc:490:replace_alu$252 [0] $auto$alumacc.cc:490:replace_alu$252 [1] $auto$alumacc.cc:490:replace_alu$252 [2] $auto$alumacc.cc:490:replace_alu$252 [3] }
  Optimizing cells in module $paramod\divisor_clock\N_TAPS=16.
  Optimizing cells in module $paramod\register\N=1.
  Optimizing cells in module $paramod\register\N=8.
  Optimizing cells in module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1.
  Optimizing cells in module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8.
  Optimizing cells in module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1.
  Optimizing cells in module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
  Optimizing cells in module \FIR.
Performed a total of 1 changes.

13.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8'.
Finding identical cells in module `$paramod\adder\N=8'.
Finding identical cells in module `$paramod\asr8\WIDTH_DATA=8\N_TAPS=8'.
Finding identical cells in module `$paramod\counter_down\N=3'.
Finding identical cells in module `$paramod\counter_up\N=3'.
Finding identical cells in module `$paramod\divisor_clock\N_TAPS=16'.
Finding identical cells in module `$paramod\register\N=1'.
Finding identical cells in module `$paramod\register\N=8'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1'.
Finding identical cells in module `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16'.
Finding identical cells in module `\FIR'.
Removed a total of 0 cells.

13.11.6. Executing OPT_RMDFF pass (remove dff with constant values).

13.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8..
Finding unused cells or wires in module $paramod\adder\N=8..
Finding unused cells or wires in module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8..
Finding unused cells or wires in module $paramod\counter_down\N=3..
Finding unused cells or wires in module $paramod\counter_up\N=3..
Finding unused cells or wires in module $paramod\divisor_clock\N_TAPS=16..
Finding unused cells or wires in module $paramod\register\N=1..
Finding unused cells or wires in module $paramod\register\N=8..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16..
Finding unused cells or wires in module \FIR..
Removed 1 unused cells and 76 unused wires.
<suppressed ~5 debug messages>

13.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8.
Optimizing module $paramod\adder\N=8.
Optimizing module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8.
Optimizing module $paramod\counter_down\N=3.
Optimizing module $paramod\counter_up\N=3.
Optimizing module $paramod\divisor_clock\N_TAPS=16.
Optimizing module $paramod\register\N=1.
Optimizing module $paramod\register\N=8.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1.
Optimizing module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
Optimizing module FIR.

13.11.9. Rerunning OPT passes. (Maybe there is more to do..)

13.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\adder\N=8..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\counter_down\N=3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\counter_up\N=3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\divisor_clock\N_TAPS=16..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\register\N=1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\register\N=8..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \FIR..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

13.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8.
  Optimizing cells in module $paramod\adder\N=8.
  Optimizing cells in module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8.
  Optimizing cells in module $paramod\counter_down\N=3.
  Optimizing cells in module $paramod\counter_up\N=3.
  Optimizing cells in module $paramod\divisor_clock\N_TAPS=16.
  Optimizing cells in module $paramod\register\N=1.
  Optimizing cells in module $paramod\register\N=8.
  Optimizing cells in module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1.
  Optimizing cells in module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8.
  Optimizing cells in module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1.
  Optimizing cells in module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
  Optimizing cells in module \FIR.
Performed a total of 0 changes.

13.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8'.
Finding identical cells in module `$paramod\adder\N=8'.
Finding identical cells in module `$paramod\asr8\WIDTH_DATA=8\N_TAPS=8'.
Finding identical cells in module `$paramod\counter_down\N=3'.
Finding identical cells in module `$paramod\counter_up\N=3'.
Finding identical cells in module `$paramod\divisor_clock\N_TAPS=16'.
Finding identical cells in module `$paramod\register\N=1'.
Finding identical cells in module `$paramod\register\N=8'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1'.
Finding identical cells in module `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16'.
Finding identical cells in module `\FIR'.
Removed a total of 0 cells.

13.11.13. Executing OPT_RMDFF pass (remove dff with constant values).

13.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8..
Finding unused cells or wires in module $paramod\adder\N=8..
Finding unused cells or wires in module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8..
Finding unused cells or wires in module $paramod\counter_down\N=3..
Finding unused cells or wires in module $paramod\counter_up\N=3..
Finding unused cells or wires in module $paramod\divisor_clock\N_TAPS=16..
Finding unused cells or wires in module $paramod\register\N=1..
Finding unused cells or wires in module $paramod\register\N=8..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16..
Finding unused cells or wires in module \FIR..
Removed 1 unused cells and 76 unused wires.

13.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8.
Optimizing module $paramod\adder\N=8.
Optimizing module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8.
Optimizing module $paramod\counter_down\N=3.
Optimizing module $paramod\counter_up\N=3.
Optimizing module $paramod\divisor_clock\N_TAPS=16.
Optimizing module $paramod\register\N=1.
Optimizing module $paramod\register\N=8.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1.
Optimizing module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
Optimizing module FIR.

13.11.16. Finished OPT passes. (There is nothing left to do.)

13.12. Executing FSM pass (extract and optimize FSM).

13.12.1. Executing FSM_DETECT pass (finding FSMs in design).

13.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

13.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

13.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8..
Finding unused cells or wires in module $paramod\adder\N=8..
Finding unused cells or wires in module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8..
Finding unused cells or wires in module $paramod\counter_down\N=3..
Finding unused cells or wires in module $paramod\counter_up\N=3..
Finding unused cells or wires in module $paramod\divisor_clock\N_TAPS=16..
Finding unused cells or wires in module $paramod\register\N=1..
Finding unused cells or wires in module $paramod\register\N=8..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16..
Finding unused cells or wires in module \FIR..
Removed 1 unused cells and 76 unused wires.

13.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

13.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

13.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

13.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

13.13. Executing OPT pass (performing simple optimizations).

13.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8.
Optimizing module $paramod\adder\N=8.
Optimizing module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8.
Optimizing module $paramod\counter_down\N=3.
Optimizing module $paramod\counter_up\N=3.
Optimizing module $paramod\divisor_clock\N_TAPS=16.
Optimizing module $paramod\register\N=1.
Optimizing module $paramod\register\N=8.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1.
Optimizing module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
Optimizing module FIR.

13.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8'.
Finding identical cells in module `$paramod\adder\N=8'.
Finding identical cells in module `$paramod\asr8\WIDTH_DATA=8\N_TAPS=8'.
Finding identical cells in module `$paramod\counter_down\N=3'.
Finding identical cells in module `$paramod\counter_up\N=3'.
Finding identical cells in module `$paramod\divisor_clock\N_TAPS=16'.
Finding identical cells in module `$paramod\register\N=1'.
Finding identical cells in module `$paramod\register\N=8'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1'.
Finding identical cells in module `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16'.
Finding identical cells in module `\FIR'.
Removed a total of 0 cells.

13.13.3. Executing OPT_RMDFF pass (remove dff with constant values).

13.13.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8..
Finding unused cells or wires in module $paramod\adder\N=8..
Finding unused cells or wires in module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8..
Finding unused cells or wires in module $paramod\counter_down\N=3..
Finding unused cells or wires in module $paramod\counter_up\N=3..
Finding unused cells or wires in module $paramod\divisor_clock\N_TAPS=16..
Finding unused cells or wires in module $paramod\register\N=1..
Finding unused cells or wires in module $paramod\register\N=8..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16..
Finding unused cells or wires in module \FIR..
Removed 1 unused cells and 76 unused wires.

13.13.5. Finished fast OPT passes.

13.14. Executing MEMORY pass.

13.14.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$memrd$\rom$./rtl/rom8.v:15$104' in module `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16': merged data $dff to cell.

13.14.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8..
Finding unused cells or wires in module $paramod\adder\N=8..
Finding unused cells or wires in module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8..
Finding unused cells or wires in module $paramod\counter_down\N=3..
Finding unused cells or wires in module $paramod\counter_up\N=3..
Finding unused cells or wires in module $paramod\divisor_clock\N_TAPS=16..
Finding unused cells or wires in module $paramod\register\N=1..
Finding unused cells or wires in module $paramod\register\N=8..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16..
Finding unused cells or wires in module \FIR..
Removed 2 unused cells and 78 unused wires.
<suppressed ~2 debug messages>

13.14.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

13.14.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8..
Finding unused cells or wires in module $paramod\adder\N=8..
Finding unused cells or wires in module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8..
Finding unused cells or wires in module $paramod\counter_down\N=3..
Finding unused cells or wires in module $paramod\counter_up\N=3..
Finding unused cells or wires in module $paramod\divisor_clock\N_TAPS=16..
Finding unused cells or wires in module $paramod\register\N=1..
Finding unused cells or wires in module $paramod\register\N=8..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16..
Finding unused cells or wires in module \FIR..
Removed 2 unused cells and 78 unused wires.

13.14.5. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\rom' in module `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16':
  $meminit$\rom$./rtl/rom8.v:38$105 ($meminit)
  $meminit$\rom$./rtl/rom8.v:39$106 ($meminit)
  $meminit$\rom$./rtl/rom8.v:40$107 ($meminit)
  $meminit$\rom$./rtl/rom8.v:41$108 ($meminit)
  $meminit$\rom$./rtl/rom8.v:42$109 ($meminit)
  $meminit$\rom$./rtl/rom8.v:43$110 ($meminit)
  $meminit$\rom$./rtl/rom8.v:44$111 ($meminit)
  $meminit$\rom$./rtl/rom8.v:45$112 ($meminit)
  $memrd$\rom$./rtl/rom8.v:15$104 ($memrd)

13.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8..
Finding unused cells or wires in module $paramod\adder\N=8..
Finding unused cells or wires in module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8..
Finding unused cells or wires in module $paramod\counter_down\N=3..
Finding unused cells or wires in module $paramod\counter_up\N=3..
Finding unused cells or wires in module $paramod\divisor_clock\N_TAPS=16..
Finding unused cells or wires in module $paramod\register\N=1..
Finding unused cells or wires in module $paramod\register\N=8..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16..
Finding unused cells or wires in module \FIR..
Removed 2 unused cells and 78 unused wires.

13.16. Executing OPT pass (performing simple optimizations).

13.16.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8.
Optimizing module $paramod\adder\N=8.
Optimizing module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8.
<suppressed ~1 debug messages>
Optimizing module $paramod\counter_down\N=3.
Optimizing module $paramod\counter_up\N=3.
Optimizing module $paramod\divisor_clock\N_TAPS=16.
<suppressed ~1 debug messages>
Optimizing module $paramod\register\N=1.
Optimizing module $paramod\register\N=8.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1.
Optimizing module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
Optimizing module FIR.
<suppressed ~1 debug messages>

13.16.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8'.
Finding identical cells in module `$paramod\adder\N=8'.
Finding identical cells in module `$paramod\asr8\WIDTH_DATA=8\N_TAPS=8'.
Finding identical cells in module `$paramod\counter_down\N=3'.
Finding identical cells in module `$paramod\counter_up\N=3'.
Finding identical cells in module `$paramod\divisor_clock\N_TAPS=16'.
Finding identical cells in module `$paramod\register\N=1'.
Finding identical cells in module `$paramod\register\N=8'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1'.
Finding identical cells in module `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16'.
Finding identical cells in module `\FIR'.
Removed a total of 0 cells.

13.16.3. Executing OPT_RMDFF pass (remove dff with constant values).

13.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8..
Finding unused cells or wires in module $paramod\adder\N=8..
Finding unused cells or wires in module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8..
Finding unused cells or wires in module $paramod\counter_down\N=3..
Finding unused cells or wires in module $paramod\counter_up\N=3..
Finding unused cells or wires in module $paramod\divisor_clock\N_TAPS=16..
Finding unused cells or wires in module $paramod\register\N=1..
Finding unused cells or wires in module $paramod\register\N=8..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16..
Finding unused cells or wires in module \FIR..
Removed 3 unused cells and 80 unused wires.
<suppressed ~3 debug messages>

13.16.5. Finished fast OPT passes.

13.17. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).
Mapping memory cell \rom in module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16:
  created 8 $dff cells and 0 static cells of width 8.
  read interface: 1 $dff and 7 $mux cells.
  write interface: 0 write mux blocks.

13.18. Executing OPT pass (performing simple optimizations).

13.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8.
Optimizing module $paramod\adder\N=8.
Optimizing module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8.
Optimizing module $paramod\counter_down\N=3.
Optimizing module $paramod\counter_up\N=3.
Optimizing module $paramod\divisor_clock\N_TAPS=16.
Optimizing module $paramod\register\N=1.
Optimizing module $paramod\register\N=8.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1.
Optimizing module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
Optimizing module FIR.

13.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8'.
Finding identical cells in module `$paramod\adder\N=8'.
Finding identical cells in module `$paramod\asr8\WIDTH_DATA=8\N_TAPS=8'.
Finding identical cells in module `$paramod\counter_down\N=3'.
Finding identical cells in module `$paramod\counter_up\N=3'.
Finding identical cells in module `$paramod\divisor_clock\N_TAPS=16'.
Finding identical cells in module `$paramod\register\N=1'.
Finding identical cells in module `$paramod\register\N=8'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1'.
Finding identical cells in module `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16'.
Finding identical cells in module `\FIR'.
Removed a total of 0 cells.

13.18.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\adder\N=8..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\counter_down\N=3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\counter_up\N=3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\divisor_clock\N_TAPS=16..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\register\N=1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\register\N=8..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIR..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

13.18.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8.
  Optimizing cells in module $paramod\adder\N=8.
  Optimizing cells in module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8.
  Optimizing cells in module $paramod\counter_down\N=3.
  Optimizing cells in module $paramod\counter_up\N=3.
  Optimizing cells in module $paramod\divisor_clock\N_TAPS=16.
  Optimizing cells in module $paramod\register\N=1.
  Optimizing cells in module $paramod\register\N=8.
  Optimizing cells in module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1.
  Optimizing cells in module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8.
  Optimizing cells in module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1.
  Optimizing cells in module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
  Optimizing cells in module \FIR.
Performed a total of 0 changes.

13.18.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8'.
Finding identical cells in module `$paramod\adder\N=8'.
Finding identical cells in module `$paramod\asr8\WIDTH_DATA=8\N_TAPS=8'.
Finding identical cells in module `$paramod\counter_down\N=3'.
Finding identical cells in module `$paramod\counter_up\N=3'.
Finding identical cells in module `$paramod\divisor_clock\N_TAPS=16'.
Finding identical cells in module `$paramod\register\N=1'.
Finding identical cells in module `$paramod\register\N=8'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1'.
Finding identical cells in module `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16'.
Finding identical cells in module `\FIR'.
Removed a total of 0 cells.

13.18.6. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $memory\rom[7]$283 ($dff) from module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
Removing $memory\rom[6]$281 ($dff) from module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
Removing $memory\rom[5]$279 ($dff) from module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
Removing $memory\rom[4]$277 ($dff) from module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
Removing $memory\rom[3]$275 ($dff) from module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
Removing $memory\rom[2]$273 ($dff) from module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
Removing $memory\rom[1]$271 ($dff) from module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
Removing $memory\rom[0]$269 ($dff) from module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
Replaced 8 DFF cells.

13.18.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8..
Finding unused cells or wires in module $paramod\adder\N=8..
Finding unused cells or wires in module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8..
Finding unused cells or wires in module $paramod\counter_down\N=3..
Finding unused cells or wires in module $paramod\counter_up\N=3..
Finding unused cells or wires in module $paramod\divisor_clock\N_TAPS=16..
Finding unused cells or wires in module $paramod\register\N=1..
Finding unused cells or wires in module $paramod\register\N=8..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16..
Finding unused cells or wires in module \FIR..
Removed 3 unused cells and 104 unused wires.
<suppressed ~9 debug messages>

13.18.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8.
Optimizing module $paramod\adder\N=8.
Optimizing module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8.
Optimizing module $paramod\counter_down\N=3.
Optimizing module $paramod\counter_up\N=3.
Optimizing module $paramod\divisor_clock\N_TAPS=16.
Optimizing module $paramod\register\N=1.
Optimizing module $paramod\register\N=8.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1.
Optimizing module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
Optimizing module FIR.

13.18.9. Rerunning OPT passes. (Maybe there is more to do..)

13.18.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\adder\N=8..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\counter_down\N=3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\counter_up\N=3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\divisor_clock\N_TAPS=16..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\register\N=1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\register\N=8..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIR..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

13.18.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8.
  Optimizing cells in module $paramod\adder\N=8.
  Optimizing cells in module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8.
  Optimizing cells in module $paramod\counter_down\N=3.
  Optimizing cells in module $paramod\counter_up\N=3.
  Optimizing cells in module $paramod\divisor_clock\N_TAPS=16.
  Optimizing cells in module $paramod\register\N=1.
  Optimizing cells in module $paramod\register\N=8.
  Optimizing cells in module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1.
  Optimizing cells in module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8.
  Optimizing cells in module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1.
  Optimizing cells in module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
    Consolidated identical input bits for $mux cell $memory\rom$rdmux[0][2][0]$296:
      Old ports: A=8'00000001, B=8'00000010, Y=$memory\rom$rdmux[0][1][0]$a$291
      New ports: A=2'01, B=2'10, Y=$memory\rom$rdmux[0][1][0]$a$291 [1:0]
      New connections: $memory\rom$rdmux[0][1][0]$a$291 [7:2] = 6'000000
    Consolidated identical input bits for $mux cell $memory\rom$rdmux[0][2][1]$299:
      Old ports: A=8'00000011, B=8'00000100, Y=$memory\rom$rdmux[0][1][0]$b$292
      New ports: A=2'01, B=2'10, Y={ $memory\rom$rdmux[0][1][0]$b$292 [2] $memory\rom$rdmux[0][1][0]$b$292 [0] }
      New connections: { $memory\rom$rdmux[0][1][0]$b$292 [7:3] $memory\rom$rdmux[0][1][0]$b$292 [1] } = { 5'00000 $memory\rom$rdmux[0][1][0]$b$292 [0] }
    Consolidated identical input bits for $mux cell $memory\rom$rdmux[0][2][2]$302:
      Old ports: A=8'00000101, B=8'00000110, Y=$memory\rom$rdmux[0][1][1]$a$294
      New ports: A=2'01, B=2'10, Y=$memory\rom$rdmux[0][1][1]$a$294 [1:0]
      New connections: $memory\rom$rdmux[0][1][1]$a$294 [7:2] = 6'000001
    Consolidated identical input bits for $mux cell $memory\rom$rdmux[0][2][3]$305:
      Old ports: A=8'00000111, B=8'00001000, Y=$memory\rom$rdmux[0][1][1]$b$295
      New ports: A=2'01, B=2'10, Y={ $memory\rom$rdmux[0][1][1]$b$295 [3] $memory\rom$rdmux[0][1][1]$b$295 [0] }
      New connections: { $memory\rom$rdmux[0][1][1]$b$295 [7:4] $memory\rom$rdmux[0][1][1]$b$295 [2:1] } = { 4'0000 $memory\rom$rdmux[0][1][1]$b$295 [0] $memory\rom$rdmux[0][1][1]$b$295 [0] }
  Optimizing cells in module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
    Consolidated identical input bits for $mux cell $memory\rom$rdmux[0][1][0]$290:
      Old ports: A=$memory\rom$rdmux[0][1][0]$a$291, B=$memory\rom$rdmux[0][1][0]$b$292, Y=$memory\rom$rdmux[0][0][0]$a$288
      New ports: A={ 1'0 $memory\rom$rdmux[0][1][0]$a$291 [1:0] }, B={ $memory\rom$rdmux[0][1][0]$b$292 [2] $memory\rom$rdmux[0][1][0]$b$292 [0] $memory\rom$rdmux[0][1][0]$b$292 [0] }, Y=$memory\rom$rdmux[0][0][0]$a$288 [2:0]
      New connections: $memory\rom$rdmux[0][0][0]$a$288 [7:3] = 5'00000
    Consolidated identical input bits for $mux cell $memory\rom$rdmux[0][1][1]$293:
      Old ports: A=$memory\rom$rdmux[0][1][1]$a$294, B=$memory\rom$rdmux[0][1][1]$b$295, Y=$memory\rom$rdmux[0][0][0]$b$289
      New ports: A={ 2'01 $memory\rom$rdmux[0][1][1]$a$294 [1:0] }, B={ $memory\rom$rdmux[0][1][1]$b$295 [3] $memory\rom$rdmux[0][1][1]$b$295 [0] $memory\rom$rdmux[0][1][1]$b$295 [0] $memory\rom$rdmux[0][1][1]$b$295 [0] }, Y=$memory\rom$rdmux[0][0][0]$b$289 [3:0]
      New connections: $memory\rom$rdmux[0][0][0]$b$289 [7:4] = 4'0000
  Optimizing cells in module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
    Consolidated identical input bits for $mux cell $memory\rom$rdmux[0][0][0]$287:
      Old ports: A=$memory\rom$rdmux[0][0][0]$a$288, B=$memory\rom$rdmux[0][0][0]$b$289, Y=$memory\rom$rdreg[0]$d$286
      New ports: A={ 1'0 $memory\rom$rdmux[0][0][0]$a$288 [2:0] }, B=$memory\rom$rdmux[0][0][0]$b$289 [3:0], Y=$memory\rom$rdreg[0]$d$286 [3:0]
      New connections: $memory\rom$rdreg[0]$d$286 [7:4] = 4'0000
  Optimizing cells in module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
  Optimizing cells in module \FIR.
Performed a total of 7 changes.

13.18.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8'.
Finding identical cells in module `$paramod\adder\N=8'.
Finding identical cells in module `$paramod\asr8\WIDTH_DATA=8\N_TAPS=8'.
Finding identical cells in module `$paramod\counter_down\N=3'.
Finding identical cells in module `$paramod\counter_up\N=3'.
Finding identical cells in module `$paramod\divisor_clock\N_TAPS=16'.
Finding identical cells in module `$paramod\register\N=1'.
Finding identical cells in module `$paramod\register\N=8'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1'.
Finding identical cells in module `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16'.
<suppressed ~9 debug messages>
Finding identical cells in module `\FIR'.
Removed a total of 3 cells.

13.18.13. Executing OPT_RMDFF pass (remove dff with constant values).

13.18.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8..
Finding unused cells or wires in module $paramod\adder\N=8..
Finding unused cells or wires in module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8..
Finding unused cells or wires in module $paramod\counter_down\N=3..
Finding unused cells or wires in module $paramod\counter_up\N=3..
Finding unused cells or wires in module $paramod\divisor_clock\N_TAPS=16..
Finding unused cells or wires in module $paramod\register\N=1..
Finding unused cells or wires in module $paramod\register\N=8..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16..
Finding unused cells or wires in module \FIR..
Removed 3 unused cells and 107 unused wires.
<suppressed ~1 debug messages>

13.18.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8.
Optimizing module $paramod\adder\N=8.
Optimizing module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8.
Optimizing module $paramod\counter_down\N=3.
Optimizing module $paramod\counter_up\N=3.
Optimizing module $paramod\divisor_clock\N_TAPS=16.
Optimizing module $paramod\register\N=1.
Optimizing module $paramod\register\N=8.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1.
Optimizing module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
Optimizing module FIR.

13.18.16. Rerunning OPT passes. (Maybe there is more to do..)

13.18.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\adder\N=8..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\counter_down\N=3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\counter_up\N=3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\divisor_clock\N_TAPS=16..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\register\N=1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\register\N=8..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIR..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

13.18.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8.
  Optimizing cells in module $paramod\adder\N=8.
  Optimizing cells in module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8.
  Optimizing cells in module $paramod\counter_down\N=3.
  Optimizing cells in module $paramod\counter_up\N=3.
  Optimizing cells in module $paramod\divisor_clock\N_TAPS=16.
  Optimizing cells in module $paramod\register\N=1.
  Optimizing cells in module $paramod\register\N=8.
  Optimizing cells in module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1.
  Optimizing cells in module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8.
  Optimizing cells in module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1.
  Optimizing cells in module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
    Consolidated identical input bits for $mux cell $memory\rom$rdmux[0][1][0]$290:
      Old ports: A={ 1'0 $memory\rom$rdmux[0][1][0]$a$291 [1:0] }, B={ $memory\rom$rdmux[0][1][0]$a$291 [1:0] $memory\rom$rdmux[0][1][0]$a$291 [0] }, Y=$memory\rom$rdmux[0][0][0]$a$288 [2:0]
      New ports: A={ 1'0 $memory\rom$rdmux[0][1][0]$a$291 [1] }, B=$memory\rom$rdmux[0][1][0]$a$291 [1:0], Y=$memory\rom$rdmux[0][0][0]$a$288 [2:1]
      New connections: $memory\rom$rdmux[0][0][0]$a$288 [0] = $memory\rom$rdmux[0][1][0]$a$291 [0]
    Consolidated identical input bits for $mux cell $memory\rom$rdmux[0][1][1]$293:
      Old ports: A={ 2'01 $memory\rom$rdmux[0][1][0]$a$291 [1:0] }, B={ $memory\rom$rdmux[0][1][0]$a$291 [1:0] $memory\rom$rdmux[0][1][0]$a$291 [0] $memory\rom$rdmux[0][1][0]$a$291 [0] }, Y=$memory\rom$rdmux[0][0][0]$b$289 [3:0]
      New ports: A={ 2'01 $memory\rom$rdmux[0][1][0]$a$291 [1] }, B={ $memory\rom$rdmux[0][1][0]$a$291 [1:0] $memory\rom$rdmux[0][1][0]$a$291 [0] }, Y=$memory\rom$rdmux[0][0][0]$b$289 [3:1]
      New connections: $memory\rom$rdmux[0][0][0]$b$289 [0] = $memory\rom$rdmux[0][1][0]$a$291 [0]
  Optimizing cells in module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
    Consolidated identical input bits for $mux cell $memory\rom$rdmux[0][0][0]$287:
      Old ports: A={ 1'0 $memory\rom$rdmux[0][0][0]$a$288 [2:0] }, B=$memory\rom$rdmux[0][0][0]$b$289 [3:0], Y=$memory\rom$rdreg[0]$d$286 [3:0]
      New ports: A={ 1'0 $memory\rom$rdmux[0][0][0]$a$288 [2:1] }, B=$memory\rom$rdmux[0][0][0]$b$289 [3:1], Y=$memory\rom$rdreg[0]$d$286 [3:1]
      New connections: $memory\rom$rdreg[0]$d$286 [0] = $memory\rom$rdmux[0][1][0]$a$291 [0]
  Optimizing cells in module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
  Optimizing cells in module \FIR.
Performed a total of 3 changes.

13.18.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8'.
Finding identical cells in module `$paramod\adder\N=8'.
Finding identical cells in module `$paramod\asr8\WIDTH_DATA=8\N_TAPS=8'.
Finding identical cells in module `$paramod\counter_down\N=3'.
Finding identical cells in module `$paramod\counter_up\N=3'.
Finding identical cells in module `$paramod\divisor_clock\N_TAPS=16'.
Finding identical cells in module `$paramod\register\N=1'.
Finding identical cells in module `$paramod\register\N=8'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1'.
Finding identical cells in module `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16'.
Finding identical cells in module `\FIR'.
Removed a total of 0 cells.

13.18.20. Executing OPT_RMDFF pass (remove dff with constant values).

13.18.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8..
Finding unused cells or wires in module $paramod\adder\N=8..
Finding unused cells or wires in module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8..
Finding unused cells or wires in module $paramod\counter_down\N=3..
Finding unused cells or wires in module $paramod\counter_up\N=3..
Finding unused cells or wires in module $paramod\divisor_clock\N_TAPS=16..
Finding unused cells or wires in module $paramod\register\N=1..
Finding unused cells or wires in module $paramod\register\N=8..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16..
Finding unused cells or wires in module \FIR..
Removed 3 unused cells and 107 unused wires.

13.18.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8.
Optimizing module $paramod\adder\N=8.
Optimizing module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8.
Optimizing module $paramod\counter_down\N=3.
Optimizing module $paramod\counter_up\N=3.
Optimizing module $paramod\divisor_clock\N_TAPS=16.
Optimizing module $paramod\register\N=1.
Optimizing module $paramod\register\N=8.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1.
Optimizing module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
Optimizing module FIR.

13.18.23. Rerunning OPT passes. (Maybe there is more to do..)

13.18.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\adder\N=8..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\counter_down\N=3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\counter_up\N=3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\divisor_clock\N_TAPS=16..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\register\N=1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\register\N=8..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIR..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

13.18.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8.
  Optimizing cells in module $paramod\adder\N=8.
  Optimizing cells in module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8.
  Optimizing cells in module $paramod\counter_down\N=3.
  Optimizing cells in module $paramod\counter_up\N=3.
  Optimizing cells in module $paramod\divisor_clock\N_TAPS=16.
  Optimizing cells in module $paramod\register\N=1.
  Optimizing cells in module $paramod\register\N=8.
  Optimizing cells in module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1.
  Optimizing cells in module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8.
  Optimizing cells in module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1.
  Optimizing cells in module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
  Optimizing cells in module \FIR.
Performed a total of 0 changes.

13.18.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8'.
Finding identical cells in module `$paramod\adder\N=8'.
Finding identical cells in module `$paramod\asr8\WIDTH_DATA=8\N_TAPS=8'.
Finding identical cells in module `$paramod\counter_down\N=3'.
Finding identical cells in module `$paramod\counter_up\N=3'.
Finding identical cells in module `$paramod\divisor_clock\N_TAPS=16'.
Finding identical cells in module `$paramod\register\N=1'.
Finding identical cells in module `$paramod\register\N=8'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1'.
Finding identical cells in module `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16'.
Finding identical cells in module `\FIR'.
Removed a total of 0 cells.

13.18.27. Executing OPT_RMDFF pass (remove dff with constant values).

13.18.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8..
Finding unused cells or wires in module $paramod\adder\N=8..
Finding unused cells or wires in module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8..
Finding unused cells or wires in module $paramod\counter_down\N=3..
Finding unused cells or wires in module $paramod\counter_up\N=3..
Finding unused cells or wires in module $paramod\divisor_clock\N_TAPS=16..
Finding unused cells or wires in module $paramod\register\N=1..
Finding unused cells or wires in module $paramod\register\N=8..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16..
Finding unused cells or wires in module \FIR..
Removed 3 unused cells and 107 unused wires.

13.18.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8.
Optimizing module $paramod\adder\N=8.
Optimizing module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8.
Optimizing module $paramod\counter_down\N=3.
Optimizing module $paramod\counter_up\N=3.
Optimizing module $paramod\divisor_clock\N_TAPS=16.
Optimizing module $paramod\register\N=1.
Optimizing module $paramod\register\N=8.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1.
Optimizing module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
Optimizing module FIR.

13.18.30. Finished OPT passes. (There is nothing left to do.)

13.19. Executing TECHMAP pass (map to technology primitives).

13.19.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

13.19.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $adff.
Using extmapper maccmap for cells of type $macc.
  add \Adder * \ROM (9x8 bits, unsigned)
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=17\B_WIDTH=18\Y_WIDTH=18 for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_fa\WIDTH=17 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=17\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=18 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_90_lcu\WIDTH=17 for cells of type $lcu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=8\Y_WIDTH=9 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=9 for cells of type $lcu.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=4 for cells of type $lcu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=1\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=3 for cells of type $lcu.
Using extmapper simplemap for cells of type $eq.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=8 for cells of type $pmux.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
No more expansions possible.
<suppressed ~1113 debug messages>

13.20. Executing OPT pass (performing simple optimizations).

13.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8.
<suppressed ~409 debug messages>
Optimizing module $paramod\adder\N=8.
<suppressed ~19 debug messages>
Optimizing module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8.
<suppressed ~43 debug messages>
Optimizing module $paramod\counter_down\N=3.
<suppressed ~13 debug messages>
Optimizing module $paramod\counter_up\N=3.
<suppressed ~14 debug messages>
Optimizing module $paramod\divisor_clock\N_TAPS=16.
<suppressed ~60 debug messages>
Optimizing module $paramod\register\N=1.
Optimizing module $paramod\register\N=8.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1.
Optimizing module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
<suppressed ~1 debug messages>
Optimizing module FIR.

13.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8'.
Finding identical cells in module `$paramod\adder\N=8'.
Finding identical cells in module `$paramod\asr8\WIDTH_DATA=8\N_TAPS=8'.
<suppressed ~54 debug messages>
Finding identical cells in module `$paramod\counter_down\N=3'.
Finding identical cells in module `$paramod\counter_up\N=3'.
Finding identical cells in module `$paramod\divisor_clock\N_TAPS=16'.
<suppressed ~39 debug messages>
Finding identical cells in module `$paramod\register\N=1'.
Finding identical cells in module `$paramod\register\N=8'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1'.
Finding identical cells in module `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16'.
<suppressed ~15 debug messages>
Finding identical cells in module `\FIR'.
Removed a total of 36 cells.

13.20.3. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$1688 ($_DFF_P_) from module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
Replaced 1 DFF cells.

13.20.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8..
Finding unused cells or wires in module $paramod\adder\N=8..
Finding unused cells or wires in module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8..
Finding unused cells or wires in module $paramod\counter_down\N=3..
Finding unused cells or wires in module $paramod\counter_up\N=3..
Finding unused cells or wires in module $paramod\divisor_clock\N_TAPS=16..
Finding unused cells or wires in module $paramod\register\N=1..
Finding unused cells or wires in module $paramod\register\N=8..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16..
Finding unused cells or wires in module \FIR..
Removed 469 unused cells and 680 unused wires.
<suppressed ~427 debug messages>

13.20.5. Rerunning OPT passes. (Removed registers in this run.)

13.20.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8.
Optimizing module $paramod\adder\N=8.
Optimizing module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8.
Optimizing module $paramod\counter_down\N=3.
Optimizing module $paramod\counter_up\N=3.
Optimizing module $paramod\divisor_clock\N_TAPS=16.
<suppressed ~3 debug messages>
Optimizing module $paramod\register\N=1.
Optimizing module $paramod\register\N=8.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1.
Optimizing module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
<suppressed ~1 debug messages>
Optimizing module FIR.

13.20.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8'.
Finding identical cells in module `$paramod\adder\N=8'.
Finding identical cells in module `$paramod\asr8\WIDTH_DATA=8\N_TAPS=8'.
Finding identical cells in module `$paramod\counter_down\N=3'.
Finding identical cells in module `$paramod\counter_up\N=3'.
Finding identical cells in module `$paramod\divisor_clock\N_TAPS=16'.
Finding identical cells in module `$paramod\register\N=1'.
Finding identical cells in module `$paramod\register\N=8'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1'.
Finding identical cells in module `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16'.
Finding identical cells in module `\FIR'.
Removed a total of 0 cells.

13.20.8. Executing OPT_RMDFF pass (remove dff with constant values).
Promoting init spec \salida_correcta [17:8] = 10'0000000000 to constant driver in module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8.
Promoted 1 init specs to constant drivers.

13.20.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8..
Finding unused cells or wires in module $paramod\adder\N=8..
Finding unused cells or wires in module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8..
Finding unused cells or wires in module $paramod\counter_down\N=3..
Finding unused cells or wires in module $paramod\counter_up\N=3..
Finding unused cells or wires in module $paramod\divisor_clock\N_TAPS=16..
Finding unused cells or wires in module $paramod\register\N=1..
Finding unused cells or wires in module $paramod\register\N=8..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16..
Finding unused cells or wires in module \FIR..
Removed 470 unused cells and 684 unused wires.
<suppressed ~2 debug messages>

13.20.10. Rerunning OPT passes. (Removed registers in this run.)

13.20.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8.
Optimizing module $paramod\adder\N=8.
Optimizing module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8.
Optimizing module $paramod\counter_down\N=3.
Optimizing module $paramod\counter_up\N=3.
Optimizing module $paramod\divisor_clock\N_TAPS=16.
Optimizing module $paramod\register\N=1.
Optimizing module $paramod\register\N=8.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1.
Optimizing module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
Optimizing module FIR.

13.20.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8'.
Finding identical cells in module `$paramod\adder\N=8'.
Finding identical cells in module `$paramod\asr8\WIDTH_DATA=8\N_TAPS=8'.
Finding identical cells in module `$paramod\counter_down\N=3'.
Finding identical cells in module `$paramod\counter_up\N=3'.
Finding identical cells in module `$paramod\divisor_clock\N_TAPS=16'.
Finding identical cells in module `$paramod\register\N=1'.
Finding identical cells in module `$paramod\register\N=8'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1'.
Finding identical cells in module `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16'.
Finding identical cells in module `\FIR'.
Removed a total of 0 cells.

13.20.13. Executing OPT_RMDFF pass (remove dff with constant values).

13.20.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8..
Finding unused cells or wires in module $paramod\adder\N=8..
Finding unused cells or wires in module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8..
Finding unused cells or wires in module $paramod\counter_down\N=3..
Finding unused cells or wires in module $paramod\counter_up\N=3..
Finding unused cells or wires in module $paramod\divisor_clock\N_TAPS=16..
Finding unused cells or wires in module $paramod\register\N=1..
Finding unused cells or wires in module $paramod\register\N=8..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16..
Finding unused cells or wires in module \FIR..
Removed 470 unused cells and 684 unused wires.

13.20.15. Finished fast OPT passes.

13.21. Executing ABC pass (technology mapping using ABC).

13.21.1. Extracting gate netlist of module `$paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8' to `<abc-temp-dir>/input.blif'..
Extracted 188 gates and 213 wires to a netlist network with 25 inputs and 8 outputs.

13.21.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

13.21.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       47
ABC RESULTS:            ANDNOT cells:       19
ABC RESULTS:              AOI3 cells:       16
ABC RESULTS:               MUX cells:        8
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        9
ABC RESULTS:              OAI3 cells:        1
ABC RESULTS:                OR cells:        6
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:              XNOR cells:       24
ABC RESULTS:               XOR cells:       44
ABC RESULTS:        internal signals:      180
ABC RESULTS:           input signals:       25
ABC RESULTS:          output signals:        8
Removing temp directory.

13.21.2. Extracting gate netlist of module `$paramod\adder\N=8' to `<abc-temp-dir>/input.blif'..
Extracted 49 gates and 65 wires to a netlist network with 16 inputs and 9 outputs.

13.21.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

13.21.2.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:              AOI3 cells:        4
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               NOT cells:        1
ABC RESULTS:              OAI3 cells:        5
ABC RESULTS:                OR cells:        3
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:              XNOR cells:        4
ABC RESULTS:               XOR cells:       11
ABC RESULTS:        internal signals:       40
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:        9
Removing temp directory.

13.21.3. Extracting gate netlist of module `$paramod\asr8\WIDTH_DATA=8\N_TAPS=8' to `<abc-temp-dir>/input.blif'..
Extracted 167 gates and 243 wires to a netlist network with 75 inputs and 8 outputs.

13.21.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

13.21.3.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               MUX cells:        8
ABC RESULTS:              NAND cells:        6
ABC RESULTS:               NOT cells:       65
ABC RESULTS:              OAI4 cells:       32
ABC RESULTS:                OR cells:       30
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:      160
ABC RESULTS:           input signals:       75
ABC RESULTS:          output signals:        8
Removing temp directory.

13.21.4. Extracting gate netlist of module `$paramod\counter_down\N=3' to `<abc-temp-dir>/input.blif'..
Extracted 10 gates and 15 wires to a netlist network with 4 inputs and 3 outputs.

13.21.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

13.21.4.2. Re-integrating ABC results.
ABC RESULTS:               NOR cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        3
Removing temp directory.

13.21.5. Extracting gate netlist of module `$paramod\counter_up\N=3' to `<abc-temp-dir>/input.blif'..
Extracted 7 gates and 13 wires to a netlist network with 4 inputs and 3 outputs.

13.21.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

13.21.5.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        3
Removing temp directory.

13.21.6. Extracting gate netlist of module `$paramod\divisor_clock\N_TAPS=16' to `<abc-temp-dir>/input.blif'..
Extracted 25 gates and 32 wires to a netlist network with 5 inputs and 5 outputs.

13.21.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

13.21.6.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        6
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:       22
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        5
Removing temp directory.

13.21.7. Extracting gate netlist of module `$paramod\register\N=1' to `<abc-temp-dir>/input.blif'..
Extracted 1 gates and 4 wires to a netlist network with 3 inputs and 1 outputs.

13.21.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

13.21.7.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:        1
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        1
Removing temp directory.

13.21.8. Extracting gate netlist of module `$paramod\register\N=8' to `<abc-temp-dir>/input.blif'..
Extracted 8 gates and 25 wires to a netlist network with 17 inputs and 8 outputs.

13.21.8.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

13.21.8.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:        8
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       17
ABC RESULTS:          output signals:        8
Removing temp directory.

13.21.9. Extracting gate netlist of module `$paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

13.21.10. Extracting gate netlist of module `$paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

13.21.11. Extracting gate netlist of module `$paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

13.21.12. Extracting gate netlist of module `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16' to `<abc-temp-dir>/input.blif'..
Extracted 6 gates and 11 wires to a netlist network with 3 inputs and 4 outputs.

13.21.12.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

13.21.12.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        4
Removing temp directory.

13.21.13. Extracting gate netlist of module `\FIR' to `<abc-temp-dir>/input.blif'..
Extracted 5 gates and 11 wires to a netlist network with 5 inputs and 2 outputs.

13.21.13.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

13.21.13.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        2
Removing temp directory.

13.22. Executing OPT pass (performing simple optimizations).

13.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8.
Optimizing module $paramod\adder\N=8.
Optimizing module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8.
Optimizing module $paramod\counter_down\N=3.
Optimizing module $paramod\counter_up\N=3.
Optimizing module $paramod\divisor_clock\N_TAPS=16.
Optimizing module $paramod\register\N=1.
Optimizing module $paramod\register\N=8.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8.
Optimizing module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1.
Optimizing module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16.
Optimizing module FIR.

13.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8'.
Finding identical cells in module `$paramod\adder\N=8'.
Finding identical cells in module `$paramod\asr8\WIDTH_DATA=8\N_TAPS=8'.
Finding identical cells in module `$paramod\counter_down\N=3'.
Finding identical cells in module `$paramod\counter_up\N=3'.
Finding identical cells in module `$paramod\divisor_clock\N_TAPS=16'.
Finding identical cells in module `$paramod\register\N=1'.
Finding identical cells in module `$paramod\register\N=8'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8'.
Finding identical cells in module `$paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1'.
Finding identical cells in module `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16'.
Finding identical cells in module `\FIR'.
Removed a total of 0 cells.

13.22.3. Executing OPT_RMDFF pass (remove dff with constant values).

13.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8..
Finding unused cells or wires in module $paramod\adder\N=8..
Finding unused cells or wires in module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8..
Finding unused cells or wires in module $paramod\counter_down\N=3..
Finding unused cells or wires in module $paramod\counter_up\N=3..
Finding unused cells or wires in module $paramod\divisor_clock\N_TAPS=16..
Finding unused cells or wires in module $paramod\register\N=1..
Finding unused cells or wires in module $paramod\register\N=8..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16..
Finding unused cells or wires in module \FIR..
Removed 470 unused cells and 1034 unused wires.
<suppressed ~12 debug messages>

13.22.5. Finished fast OPT passes.

13.23. Executing HIERARCHY pass (managing design hierarchy).

13.23.1. Analyzing design hierarchy..
Top module:  \FIR
Used module:     $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8
Used module:     $paramod\asr8\WIDTH_DATA=8\N_TAPS=8
Used module:         $paramod\register\N=8
Used module:     $paramod\counter_down\N=3
Used module:     $paramod\divisor_clock\N_TAPS=16
Used module:     $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16
Used module:     $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8
Used module:     $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1
Used module:         $paramod\register\N=1
Used module:     $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1
Used module:     $paramod\adder\N=8
Used module:     $paramod\counter_up\N=3

13.23.2. Analyzing design hierarchy..
Top module:  \FIR
Used module:     $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8
Used module:     $paramod\asr8\WIDTH_DATA=8\N_TAPS=8
Used module:         $paramod\register\N=8
Used module:     $paramod\counter_down\N=3
Used module:     $paramod\divisor_clock\N_TAPS=16
Used module:     $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16
Used module:     $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8
Used module:     $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1
Used module:         $paramod\register\N=1
Used module:     $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1
Used module:     $paramod\adder\N=8
Used module:     $paramod\counter_up\N=3
Removed 0 unused modules.

13.24. Printing statistics.

=== $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8 ===

   Number of wires:                180
   Number of wire bits:            236
   Number of public wires:           6
   Number of public wire bits:      45
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                189
     $_ANDNOT_                      19
     $_AND_                         47
     $_AOI3_                        16
     $_DFF_P_                        8
     $_MUX_                          8
     $_NAND_                         4
     $_NOR_                          2
     $_NOT_                          9
     $_OAI3_                         1
     $_ORNOT_                        1
     $_OR_                           6
     $_XNOR_                        24
     $_XOR_                         44

=== $paramod\adder\N=8 ===

   Number of wires:                 37
   Number of wire bits:             67
   Number of public wires:           5
   Number of public wire bits:      35
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 50
     $_ANDNOT_                       4
     $_AND_                          2
     $_AOI3_                         4
     $_DFF_P_                        9
     $_NAND_                         5
     $_NOT_                          1
     $_OAI3_                         5
     $_ORNOT_                        2
     $_OR_                           3
     $_XNOR_                         4
     $_XOR_                         11

=== $paramod\asr8\WIDTH_DATA=8\N_TAPS=8 ===

   Number of wires:                159
   Number of wire bits:            238
   Number of public wires:          15
   Number of public wire bits:      94
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                160
     $_ANDNOT_                       4
     $_AND_                          2
     $_MUX_                          8
     $_NAND_                         6
     $_NOT_                         65
     $_OAI4_                        32
     $_ORNOT_                        4
     $_OR_                          30
     $_XOR_                          1
     $paramod\register\N=8           8

=== $paramod\counter_down\N=3 ===

   Number of wires:                  8
   Number of wire bits:             14
   Number of public wires:           4
   Number of public wire bits:       8
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  9
     $_DFF_P_                        3
     $_NOR_                          1
     $_ORNOT_                        1
     $_OR_                           2
     $_XNOR_                         1
     $_XOR_                          1

=== $paramod\counter_up\N=3 ===

   Number of wires:                  9
   Number of wire bits:             15
   Number of public wires:           4
   Number of public wire bits:       8
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 10
     $_ANDNOT_                       2
     $_DFF_P_                        3
     $_NAND_                         1
     $_NOR_                          1
     $_NOT_                          1
     $_XNOR_                         1
     $_XOR_                          1

=== $paramod\divisor_clock\N_TAPS=16 ===

   Number of wires:                 16
   Number of wire bits:             22
   Number of public wires:           4
   Number of public wire bits:       7
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 20
     $_ANDNOT_                       6
     $_AND_                          1
     $_DFF_P_                        4
     $_NAND_                         2
     $_NOR_                          1
     $_NOT_                          1
     $_OR_                           2
     $_XNOR_                         2
     $_XOR_                          1

=== $paramod\register\N=1 ===

   Number of wires:                  6
   Number of wire bits:              6
   Number of public wires:           5
   Number of public wire bits:       5
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $_DFF_PP0_                      1
     $_MUX_                          1

=== $paramod\register\N=8 ===

   Number of wires:                  6
   Number of wire bits:             27
   Number of public wires:           5
   Number of public wire bits:      19
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 16
     $_DFF_PP0_                      8
     $_MUX_                          8

=== $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1 ===

   Number of wires:                 16
   Number of wire bits:             16
   Number of public wires:          16
   Number of public wire bits:      16
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 10
     $paramod\register\N=1          10

=== $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8 ===

   Number of wires:                  7
   Number of wire bits:             35
   Number of public wires:           7
   Number of public wire bits:      35
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $paramod\register\N=8           1

=== $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1 ===

   Number of wires:                 13
   Number of wire bits:             13
   Number of public wires:          13
   Number of public wire bits:      13
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  7
     $paramod\register\N=1           7

=== $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16 ===

   Number of wires:                 10
   Number of wire bits:             19
   Number of public wires:           4
   Number of public wire bits:      13
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 10
     $_AND_                          2
     $_DFF_P_                        4
     $_MUX_                          1
     $_NAND_                         1
     $_NOT_                          1
     $_XOR_                          1

=== FIR ===

   Number of wires:                 24
   Number of wire bits:            113
   Number of public wires:          21
   Number of public wire bits:     110
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 21
     $_ANDNOT_                       1
     $_DFF_P_                        1
     $_NOR_                          1
     $_NOT_                          1
     $_OR_                           1
     $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8      1
     $paramod\adder\N=8              1
     $paramod\asr8\WIDTH_DATA=8\N_TAPS=8      2
     $paramod\counter_down\N=3       1
     $paramod\counter_up\N=3         1
     $paramod\divisor_clock\N_TAPS=16      1
     $paramod\register\N=8           2
     $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1      1
     $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8      4
     $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1      1
     $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16      1

=== design hierarchy ===

   FIR                               1
     $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8      1
     $paramod\adder\N=8              1
     $paramod\asr8\WIDTH_DATA=8\N_TAPS=8      2
       $paramod\register\N=8         8
     $paramod\counter_down\N=3       1
     $paramod\counter_up\N=3         1
     $paramod\divisor_clock\N_TAPS=16      1
     $paramod\register\N=8           2
     $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1      1
       $paramod\register\N=1        10
     $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8      4
       $paramod\register\N=8         1
     $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1      1
       $paramod\register\N=1         7
     $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16      1

   Number of wires:                893
   Number of wire bits:           1827
   Number of public wires:         330
   Number of public wire bits:    1086
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                983
     $_ANDNOT_                      40
     $_AND_                         56
     $_AOI3_                        20
     $_DFF_PP0_                    193
     $_DFF_P_                       32
     $_MUX_                        218
     $_NAND_                        25
     $_NOR_                          6
     $_NOT_                        144
     $_OAI3_                         6
     $_OAI4_                        64
     $_ORNOT_                       12
     $_OR_                          74
     $_XNOR_                        32
     $_XOR_                         61

13.25. Executing CHECK pass (checking for obvious problems).
checking module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8..
checking module $paramod\adder\N=8..
checking module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8..
checking module $paramod\counter_down\N=3..
checking module $paramod\counter_up\N=3..
checking module $paramod\divisor_clock\N_TAPS=16..
checking module $paramod\register\N=1..
checking module $paramod\register\N=8..
checking module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1..
checking module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8..
checking module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1..
checking module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16..
checking module FIR..
found and reported 0 problems.

14. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell DFFNEGX1 (noninv, pins=3, area=864.00) is a direct match for cell type $_DFF_N_.
  cell DFFPOSX1 (noninv, pins=3, area=864.00) is a direct match for cell type $_DFF_P_.
  cell DFFSR (noninv, pins=5, area=1584.00) is a direct match for cell type $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PNP_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPP_ from mapping for $_DFFSR_PNP_.
  create mapping for $_DFFSR_NNN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_NPN_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NNP_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NPP_ from mapping for $_DFFSR_NNP_.
  create mapping for $_DFF_NN0_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NN1_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NP0_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_NP1_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_PN0_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PN1_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PP0_ from mapping for $_DFFSR_PPP_.
  create mapping for $_DFF_PP1_ from mapping for $_DFFSR_PPP_.
  final dff cell mappings:
    DFFNEGX1 _DFF_N_ (.CLK( C), .D( D), .Q( Q));
    DFFPOSX1 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    DFFSR _DFF_NN0_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( 1));
    DFFSR _DFF_NN1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S( R));
    DFFSR _DFF_NP0_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( 1));
    DFFSR _DFF_NP1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S(~R));
    DFFSR _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( 1));
    DFFSR _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S( R));
    DFFSR _DFF_PP0_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( 1));
    DFFSR _DFF_PP1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S(~R));
    DFFSR _DFFSR_NNN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_NNP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_NPN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_NPP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S(~S));
    DFFSR _DFFSR_PNN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_PNP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_PPN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_PPP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S(~S));
Mapping DFF cells in module `$paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8':
  mapped 8 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `$paramod\adder\N=8':
  mapped 9 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `$paramod\asr8\WIDTH_DATA=8\N_TAPS=8':
Mapping DFF cells in module `$paramod\counter_down\N=3':
  mapped 3 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `$paramod\counter_up\N=3':
  mapped 3 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `$paramod\divisor_clock\N_TAPS=16':
  mapped 4 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `$paramod\register\N=1':
  mapped 1 $_DFF_PP0_ cells to \DFFSR cells.
Mapping DFF cells in module `$paramod\register\N=8':
  mapped 8 $_DFF_PP0_ cells to \DFFSR cells.
Mapping DFF cells in module `$paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1':
Mapping DFF cells in module `$paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8':
Mapping DFF cells in module `$paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1':
Mapping DFF cells in module `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16':
  mapped 4 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `\FIR':
  mapped 1 $_DFF_P_ cells to \DFFPOSX1 cells.

15. Executing ABC pass (technology mapping using ABC).

15.1. Extracting gate netlist of module `$paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8' to `<abc-temp-dir>/input.blif'..
Extracted 181 gates and 206 wires to a netlist network with 25 inputs and 8 outputs.

15.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/openvlsi/proyecto/IEE2753-2019-eaanais/proyecto/yosys_original_05/osu05_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "PADINOUT".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Scl_LibertyReadGenlib() skipped cell "PADFC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADNC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADVDD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADGND" without logic function.
ABC: Library "osu05_stdcells" from "/home/openvlsi/proyecto/IEE2753-2019-eaanais/proyecto/yosys_original_05/osu05_stdcells.lib" has 28 cells (11 skipped: 4 seq; 3 tri-state; 4 no func; 0 dont_use).  Time =     0.01 sec
ABC: Memory =    0.38 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/openvlsi/proyecto/IEE2753-2019-eaanais/proyecto/yosys_original_05/example.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -D 10000 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10000 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10000 
ABC: Current delay (4423.69 ps) does not exceed the target delay (10000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 10000 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =    195 (  9.7 %)   Cap = 66.2 ff (  0.1 %)   Area =    61092.00 ( 99.5 %)   Delay =  4503.61 ps  ( 13.8 %)               
ABC: Path  0 --       3 : 0    1 pi      A =   0.00  Df =  36.2   -8.3 ps  S =  48.3 ps  Cin =  0.0 ff  Cout =  16.1 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --      34 : 1    8 BUFX2   A = 216.00  Df = 351.4  -20.9 ps  S = 252.2 ps  Cin = 16.1 ff  Cout = 182.1 ff  Cmax = 924.8 ff  G = 1129  
ABC: Path  2 --     125 : 2    3 NAND2X1 A = 216.00  Df = 682.0 -138.5 ps  S = 361.1 ps  Cin = 21.5 ff  Cout = 117.4 ff  Cmax = 437.2 ff  G =  544  
ABC: Path  3 --     126 : 2    1 XOR2X1  A = 504.00  Df = 970.9  -18.9 ps  S = 223.1 ps  Cin = 58.5 ff  Cout =  63.7 ff  Cmax = 467.1 ff  G =  108  
ABC: Path  4 --     127 : 2    2 XNOR2X1 A = 504.00  Df =1269.7   -6.0 ps  S = 274.1 ps  Cin = 58.5 ff  Cout =  85.4 ff  Cmax = 466.9 ff  G =  145  
ABC: Path  5 --     128 : 2    2 XNOR2X1 A = 504.00  Df =1591.3   -1.0 ps  S = 302.1 ps  Cin = 58.5 ff  Cout =  96.6 ff  Cmax = 466.9 ff  G =  164  
ABC: Path  6 --     129 : 2    2 XOR2X1  A = 504.00  Df =1903.7  -12.7 ps  S = 274.4 ps  Cin = 58.5 ff  Cout =  85.4 ff  Cmax = 467.1 ff  G =  145  
ABC: Path  7 --     130 : 2    2 XNOR2X1 A = 504.00  Df =2223.5   -3.2 ps  S = 302.1 ps  Cin = 58.5 ff  Cout =  96.6 ff  Cmax = 466.9 ff  G =  164  
ABC: Path  8 --     131 : 2    3 XNOR2X1 A = 504.00  Df =2565.7   -0.1 ps  S = 330.6 ps  Cin = 58.5 ff  Cout = 108.1 ff  Cmax = 466.9 ff  G =  184  
ABC: Path  9 --     148 : 2    2 NOR2X1  A = 216.00  Df =2856.7  -73.0 ps  S = 288.3 ps  Cin = 27.3 ff  Cout =  75.0 ff  Cmax = 393.2 ff  G =  274  
ABC: Path 10 --     175 : 2    2 XOR2X1  A = 504.00  Df =3161.6  -13.0 ps  S = 301.5 ps  Cin = 58.5 ff  Cout =  96.6 ff  Cmax = 467.1 ff  G =  164  
ABC: Path 11 --     176 : 2    5 XOR2X1  A = 504.00  Df =3629.8   -2.3 ps  S = 533.8 ps  Cin = 58.5 ff  Cout = 192.1 ff  Cmax = 467.1 ff  G =  327  
ABC: Path 12 --     177 : 2    1 XNOR2X1 A = 504.00  Df =3885.3  -27.0 ps  S = 144.8 ps  Cin = 58.5 ff  Cout =  27.7 ff  Cmax = 466.9 ff  G =   47  
ABC: Path 13 --     178 : 3    2 AOI21X1 A = 288.00  Df =4090.3  -43.0 ps  S = 223.7 ps  Cin = 30.7 ff  Cout =  65.2 ff  Cmax = 375.7 ff  G =  211  
ABC: Path 14 --     185 : 3    1 OAI21X1 A = 207.00  Df =4247.3 -106.0 ps  S = 158.3 ps  Cin = 28.9 ff  Cout =  26.9 ff  Cmax = 433.6 ff  G =   92  
ABC: Path 15 --     191 : 3    1 NAND3X1 A = 324.00  Df =4360.3  -19.5 ps  S = 254.5 ps  Cin = 26.9 ff  Cout =  53.5 ff  Cmax = 416.0 ff  G =  198  
ABC: Path 16 --     228 : 2    1 XNOR2X1 A = 504.00  Df =4503.6  -14.5 ps  S =  79.7 ps  Cin = 58.5 ff  Cout =   0.0 ff  Cmax = 466.9 ff  G =    0  
ABC: Start-point = pi2 (\ROM [0]).  End-point = po7 ($0\salida_correcta[17:0] [7]).
ABC: + write_blif <abc-temp-dir>/output.blif 

15.1.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:        8
ABC RESULTS:           AOI21X1 cells:        2
ABC RESULTS:           AOI22X1 cells:        3
ABC RESULTS:             BUFX2 cells:        6
ABC RESULTS:             INVX1 cells:       12
ABC RESULTS:             INVX2 cells:        1
ABC RESULTS:           NAND2X1 cells:       53
ABC RESULTS:           NAND3X1 cells:        5
ABC RESULTS:            NOR2X1 cells:       10
ABC RESULTS:           OAI21X1 cells:       24
ABC RESULTS:           OAI22X1 cells:        5
ABC RESULTS:             OR2X2 cells:        6
ABC RESULTS:           XNOR2X1 cells:       43
ABC RESULTS:            XOR2X1 cells:       17
ABC RESULTS:        internal signals:      173
ABC RESULTS:           input signals:       25
ABC RESULTS:          output signals:        8
Removing temp directory.

15.2. Extracting gate netlist of module `$paramod\adder\N=8' to `<abc-temp-dir>/input.blif'..
Extracted 41 gates and 57 wires to a netlist network with 16 inputs and 9 outputs.

15.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/openvlsi/proyecto/IEE2753-2019-eaanais/proyecto/yosys_original_05/osu05_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "PADINOUT".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Scl_LibertyReadGenlib() skipped cell "PADFC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADNC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADVDD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADGND" without logic function.
ABC: Library "osu05_stdcells" from "/home/openvlsi/proyecto/IEE2753-2019-eaanais/proyecto/yosys_original_05/osu05_stdcells.lib" has 28 cells (11 skipped: 4 seq; 3 tri-state; 4 no func; 0 dont_use).  Time =     0.01 sec
ABC: Memory =    0.38 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/openvlsi/proyecto/IEE2753-2019-eaanais/proyecto/yosys_original_05/example.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -D 10000 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10000 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10000 
ABC: Current delay (2003.92 ps) does not exceed the target delay (10000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 10000 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =     40 (  0.0 %)   Cap = 53.9 ff (  0.0 %)   Area =    12789.00 (100.0 %)   Delay =  2003.92 ps  ( 27.5 %)               
ABC: Path  0 --       2 : 0    2 pi      A =   0.00  Df = 191.0  -42.1 ps  S = 255.7 ps  Cin =  0.0 ff  Cout =  85.4 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --      26 : 2    2 NAND2X1 A = 216.00  Df = 454.1 -116.5 ps  S = 279.0 ps  Cin = 21.5 ff  Cout =  85.8 ff  Cmax = 437.2 ff  G =  398  
ABC: Path  2 --      31 : 3    2 OAI21X1 A = 207.00  Df = 667.4  -24.8 ps  S = 280.7 ps  Cin = 28.9 ff  Cout =  85.8 ff  Cmax = 433.6 ff  G =  296  
ABC: Path  3 --      37 : 3    2 AOI21X1 A = 288.00  Df = 914.0  -56.8 ps  S = 283.5 ps  Cin = 30.7 ff  Cout =  85.8 ff  Cmax = 375.7 ff  G =  278  
ABC: Path  4 --      42 : 3    2 OAI21X1 A = 207.00  Df =1127.6  -21.3 ps  S = 290.1 ps  Cin = 28.9 ff  Cout =  85.8 ff  Cmax = 433.6 ff  G =  296  
ABC: Path  5 --      48 : 3    2 AOI21X1 A = 288.00  Df =1374.4  -52.7 ps  S = 283.6 ps  Cin = 30.7 ff  Cout =  85.8 ff  Cmax = 375.7 ff  G =  278  
ABC: Path  6 --      53 : 3    2 OAI21X1 A = 207.00  Df =1588.0  -17.3 ps  S = 290.1 ps  Cin = 28.9 ff  Cout =  85.8 ff  Cmax = 433.6 ff  G =  296  
ABC: Path  7 --      59 : 3    2 AOI21X1 A = 288.00  Df =1834.7  -48.7 ps  S = 283.5 ps  Cin = 30.7 ff  Cout =  85.8 ff  Cmax = 375.7 ff  G =  278  
ABC: Path  8 --      61 : 2    1 XNOR2X1 A = 504.00  Df =2003.9  -27.0 ps  S =  79.7 ps  Cin = 58.5 ff  Cout =   0.0 ff  Cmax = 466.9 ff  G =    0  
ABC: Start-point = pi1 (\a [0]).  End-point = po6 (\suma_previa [7]).
ABC: + write_blif <abc-temp-dir>/output.blif 

15.2.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:        3
ABC RESULTS:           AOI21X1 cells:        4
ABC RESULTS:           NAND2X1 cells:       11
ABC RESULTS:            NOR2X1 cells:        4
ABC RESULTS:           OAI21X1 cells:        3
ABC RESULTS:             OR2X2 cells:        3
ABC RESULTS:           XNOR2X1 cells:        7
ABC RESULTS:            XOR2X1 cells:        5
ABC RESULTS:        internal signals:       32
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:        9
Removing temp directory.

15.3. Extracting gate netlist of module `$paramod\asr8\WIDTH_DATA=8\N_TAPS=8' to `<abc-temp-dir>/input.blif'..
Extracted 152 gates and 227 wires to a netlist network with 75 inputs and 8 outputs.

15.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/openvlsi/proyecto/IEE2753-2019-eaanais/proyecto/yosys_original_05/osu05_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "PADINOUT".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Scl_LibertyReadGenlib() skipped cell "PADFC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADNC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADVDD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADGND" without logic function.
ABC: Library "osu05_stdcells" from "/home/openvlsi/proyecto/IEE2753-2019-eaanais/proyecto/yosys_original_05/osu05_stdcells.lib" has 28 cells (11 skipped: 4 seq; 3 tri-state; 4 no func; 0 dont_use).  Time =     0.01 sec
ABC: Memory =    0.38 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/openvlsi/proyecto/IEE2753-2019-eaanais/proyecto/yosys_original_05/example.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -D 10000 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10000 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10000 
ABC: Current delay (1612.93 ps) does not exceed the target delay (10000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 10000 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =    103 ( 32.0 %)   Cap = 37.5 ff (  0.0 %)   Area =    25488.00 (100.0 %)   Delay =  1642.32 ps  ( 19.4 %)               
ABC: Path  0 --       2 : 0    4 pi      A =   0.00  Df = 228.4  -49.4 ps  S = 305.0 ps  Cin =  0.0 ff  Cout = 102.2 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --      86 : 1    5 INVX1   A = 144.00  Df = 568.6  -17.8 ps  S = 397.0 ps  Cin = 16.1 ff  Cout = 129.8 ff  Cmax = 413.3 ff  G =  805  
ABC: Path  2 --      95 : 2    2 NOR2X1  A = 216.00  Df = 794.0  -70.0 ps  S = 208.5 ps  Cin = 27.3 ff  Cout =  42.8 ff  Cmax = 393.2 ff  G =  157  
ABC: Path  3 --      96 : 2    1 AND2X2  A = 288.00  Df =1023.0 -165.0 ps  S =  63.2 ps  Cin = 21.5 ff  Cout =  16.1 ff  Cmax = 924.9 ff  G =   74  
ABC: Path  4 --      97 : 1    8 BUFX2   A = 216.00  Df =1421.5 -187.6 ps  S = 354.1 ps  Cin = 16.1 ff  Cout = 262.8 ff  Cmax = 924.8 ff  G = 1630  
ABC: Path  5 --     126 : 4    1 AOI22X1 A = 360.00  Df =1607.0 -272.4 ps  S = 189.0 ps  Cin = 32.7 ff  Cout =  26.9 ff  Cmax = 479.0 ff  G =   82  
ABC: Path  6 --     134 : 3    1 NAND3X1 A = 324.00  Df =1642.3 -144.0 ps  S = 132.1 ps  Cin = 26.9 ff  Cout =   0.0 ff  Cmax = 416.0 ff  G =    0  
ABC: Start-point = pi1 (\add [1]).  End-point = po2 (\q [2]).
ABC: + write_blif <abc-temp-dir>/output.blif 

15.3.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:        2
ABC RESULTS:           AOI21X1 cells:        6
ABC RESULTS:           AOI22X1 cells:       13
ABC RESULTS:             BUFX2 cells:        5
ABC RESULTS:             INVX1 cells:       28
ABC RESULTS:           NAND2X1 cells:       10
ABC RESULTS:           NAND3X1 cells:       12
ABC RESULTS:            NOR2X1 cells:        9
ABC RESULTS:            NOR3X1 cells:        1
ABC RESULTS:           OAI21X1 cells:        8
ABC RESULTS:           OAI22X1 cells:        8
ABC RESULTS:             OR2X2 cells:        1
ABC RESULTS:        internal signals:      144
ABC RESULTS:           input signals:       75
ABC RESULTS:          output signals:        8
Removing temp directory.

15.4. Extracting gate netlist of module `$paramod\counter_down\N=3' to `<abc-temp-dir>/input.blif'..
Extracted 6 gates and 10 wires to a netlist network with 4 inputs and 3 outputs.

15.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/openvlsi/proyecto/IEE2753-2019-eaanais/proyecto/yosys_original_05/osu05_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.01 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "PADINOUT".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Scl_LibertyReadGenlib() skipped cell "PADFC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADNC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADVDD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADGND" without logic function.
ABC: Library "osu05_stdcells" from "/home/openvlsi/proyecto/IEE2753-2019-eaanais/proyecto/yosys_original_05/osu05_stdcells.lib" has 28 cells (11 skipped: 4 seq; 3 tri-state; 4 no func; 0 dont_use).  Time =     0.01 sec
ABC: Memory =    0.38 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/openvlsi/proyecto/IEE2753-2019-eaanais/proyecto/yosys_original_05/example.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -D 10000 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10000 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10000 
ABC: Current delay (733.91 ps) does not exceed the target delay (10000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 10000 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =      7 ( 14.3 %)   Cap = 42.9 ff (  0.0 %)   Area =     1638.00 (100.0 %)   Delay =   733.91 ps  ( 42.9 %)               
ABC: Path  0 --       2 : 0    4 pi      A =   0.00  Df = 254.5  -54.6 ps  S = 339.0 ps  Cin =  0.0 ff  Cout = 113.9 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --      10 : 2    2 OR2X2   A = 288.00  Df = 542.6  -48.1 ps  S = 124.5 ps  Cin = 27.3 ff  Cout =  65.5 ff  Cmax = 924.5 ff  G =  239  
ABC: Path  2 --      11 : 3    1 AOI21X1 A = 288.00  Df = 660.1  -58.7 ps  S = 133.7 ps  Cin = 30.7 ff  Cout =  21.6 ff  Cmax = 375.7 ff  G =   70  
ABC: Path  3 --      12 : 3    1 OAI21X1 A = 207.00  Df = 733.9  -79.6 ps  S =  99.1 ps  Cin = 28.9 ff  Cout =   0.0 ff  Cmax = 433.6 ff  G =    0  
ABC: Start-point = pi1 (\contador [0]).  End-point = po1 ($0\contador[2:0] [2]).
ABC: + write_blif <abc-temp-dir>/output.blif 

15.4.2. Re-integrating ABC results.
ABC RESULTS:           AOI21X1 cells:        2
ABC RESULTS:             INVX1 cells:        1
ABC RESULTS:           NAND2X1 cells:        1
ABC RESULTS:           OAI21X1 cells:        2
ABC RESULTS:             OR2X2 cells:        1
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        3
Removing temp directory.

15.5. Extracting gate netlist of module `$paramod\counter_up\N=3' to `<abc-temp-dir>/input.blif'..
Extracted 7 gates and 11 wires to a netlist network with 4 inputs and 3 outputs.

15.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/openvlsi/proyecto/IEE2753-2019-eaanais/proyecto/yosys_original_05/osu05_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "PADINOUT".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Scl_LibertyReadGenlib() skipped cell "PADFC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADNC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADVDD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADGND" without logic function.
ABC: Library "osu05_stdcells" from "/home/openvlsi/proyecto/IEE2753-2019-eaanais/proyecto/yosys_original_05/osu05_stdcells.lib" has 28 cells (11 skipped: 4 seq; 3 tri-state; 4 no func; 0 dont_use).  Time =     0.01 sec
ABC: Memory =    0.38 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/openvlsi/proyecto/IEE2753-2019-eaanais/proyecto/yosys_original_05/example.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -D 10000 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10000 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10000 
ABC: Current delay (798.70 ps) does not exceed the target delay (10000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 10000 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =      7 ( 14.3 %)   Cap = 42.2 ff (  0.0 %)   Area =     1791.00 (100.0 %)   Delay =   798.70 ps  ( 42.9 %)               
ABC: Path  0 --       2 : 0    4 pi      A =   0.00  Df = 253.9  -54.3 ps  S = 338.2 ps  Cin =  0.0 ff  Cout = 113.6 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --      11 : 2    1 NAND2X1 A = 216.00  Df = 522.6 -192.1 ps  S = 243.6 ps  Cin = 21.5 ff  Cout =  63.7 ff  Cmax = 437.2 ff  G =  295  
ABC: Path  2 --      12 : 2    1 XOR2X1  A = 504.00  Df = 737.8  -13.8 ps  S = 138.3 ps  Cin = 58.5 ff  Cout =  27.7 ff  Cmax = 467.1 ff  G =   47  
ABC: Path  3 --      13 : 2    1 NOR2X1  A = 216.00  Df = 798.7   -7.4 ps  S =  90.6 ps  Cin = 27.3 ff  Cout =   0.0 ff  Cmax = 393.2 ff  G =    0  
ABC: Start-point = pi1 (\contador [0]).  End-point = po1 ($0\contador[2:0] [2]).
ABC: + write_blif <abc-temp-dir>/output.blif 

15.5.2. Re-integrating ABC results.
ABC RESULTS:           AOI21X1 cells:        1
ABC RESULTS:             INVX1 cells:        1
ABC RESULTS:           NAND2X1 cells:        1
ABC RESULTS:            NOR2X1 cells:        2
ABC RESULTS:           OAI21X1 cells:        1
ABC RESULTS:            XOR2X1 cells:        1
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        3
Removing temp directory.

15.6. Extracting gate netlist of module `$paramod\divisor_clock\N_TAPS=16' to `<abc-temp-dir>/input.blif'..
Extracted 16 gates and 21 wires to a netlist network with 5 inputs and 5 outputs.

15.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/openvlsi/proyecto/IEE2753-2019-eaanais/proyecto/yosys_original_05/osu05_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "PADINOUT".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Scl_LibertyReadGenlib() skipped cell "PADFC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADNC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADVDD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADGND" without logic function.
ABC: Library "osu05_stdcells" from "/home/openvlsi/proyecto/IEE2753-2019-eaanais/proyecto/yosys_original_05/osu05_stdcells.lib" has 28 cells (11 skipped: 4 seq; 3 tri-state; 4 no func; 0 dont_use).  Time =     0.01 sec
ABC: Memory =    0.38 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/openvlsi/proyecto/IEE2753-2019-eaanais/proyecto/yosys_original_05/example.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -D 10000 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10000 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10000 
ABC: Current delay (798.72 ps) does not exceed the target delay (10000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 10000 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =     12 ( 25.0 %)   Cap = 43.0 ff (  0.0 %)   Area =     2754.00 (100.0 %)   Delay =   798.72 ps  ( 50.0 %)               
ABC: Path  0 --       2 : 0    4 pi      A =   0.00  Df = 276.4  -58.8 ps  S = 367.4 ps  Cin =  0.0 ff  Cout = 123.7 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --      16 : 3    3 NAND3X1 A = 324.00  Df = 644.5 -182.0 ps  S = 349.5 ps  Cin = 26.9 ff  Cout =  87.1 ff  Cmax = 416.0 ff  G =  322  
ABC: Path  2 --      21 : 3    1 AOI21X1 A = 288.00  Df = 798.7  -41.6 ps  S = 142.0 ps  Cin = 30.7 ff  Cout =   0.0 ff  Cmax = 375.7 ff  G =    0  
ABC: Start-point = pi1 (\counter [1]).  End-point = po2 ($0\counter[3:0] [3]).
ABC: + write_blif <abc-temp-dir>/output.blif 

15.6.2. Re-integrating ABC results.
ABC RESULTS:           AOI21X1 cells:        3
ABC RESULTS:             BUFX2 cells:        1
ABC RESULTS:             INVX1 cells:        2
ABC RESULTS:           NAND2X1 cells:        1
ABC RESULTS:           NAND3X1 cells:        1
ABC RESULTS:            NOR2X1 cells:        2
ABC RESULTS:           OAI21X1 cells:        2
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        5
Removing temp directory.

15.7. Extracting gate netlist of module `$paramod\register\N=1' to `<abc-temp-dir>/input.blif'..
Extracted 2 gates and 6 wires to a netlist network with 4 inputs and 2 outputs.

15.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/openvlsi/proyecto/IEE2753-2019-eaanais/proyecto/yosys_original_05/osu05_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "PADINOUT".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Scl_LibertyReadGenlib() skipped cell "PADFC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADNC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADVDD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADGND" without logic function.
ABC: Library "osu05_stdcells" from "/home/openvlsi/proyecto/IEE2753-2019-eaanais/proyecto/yosys_original_05/osu05_stdcells.lib" has 28 cells (11 skipped: 4 seq; 3 tri-state; 4 no func; 0 dont_use).  Time =     0.01 sec
ABC: Memory =    0.38 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/openvlsi/proyecto/IEE2753-2019-eaanais/proyecto/yosys_original_05/example.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -D 10000 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10000 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10000 
ABC: Current delay (290.74 ps) does not exceed the target delay (10000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 10000 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =      4 ( 50.0 %)   Cap = 20.3 ff (  0.0 %)   Area =      711.00 (100.0 %)   Delay =   290.74 ps  ( 50.0 %)               
ABC: Path  0 --       4 : 0    2 pi      A =   0.00  Df = 122.5  -27.4 ps  S = 165.0 ps  Cin =  0.0 ff  Cout =  54.6 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --       9 : 2    1 NAND2X1 A = 216.00  Df = 240.6  -71.5 ps  S = 101.0 ps  Cin = 21.5 ff  Cout =  21.6 ff  Cmax = 437.2 ff  G =  100  
ABC: Path  2 --      10 : 3    1 OAI21X1 A = 207.00  Df = 290.7  -60.7 ps  S =  94.1 ps  Cin = 28.9 ff  Cout =   0.0 ff  Cmax = 433.6 ff  G =    0  
ABC: Start-point = pi3 (\en).  End-point = po1 ($0\q[0:0]).
ABC: + write_blif <abc-temp-dir>/output.blif 

15.7.2. Re-integrating ABC results.
ABC RESULTS:             INVX1 cells:        2
ABC RESULTS:           NAND2X1 cells:        1
ABC RESULTS:           OAI21X1 cells:        1
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        2
Removing temp directory.

15.8. Extracting gate netlist of module `$paramod\register\N=8' to `<abc-temp-dir>/input.blif'..
Extracted 16 gates and 34 wires to a netlist network with 18 inputs and 16 outputs.

15.8.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/openvlsi/proyecto/IEE2753-2019-eaanais/proyecto/yosys_original_05/osu05_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "PADINOUT".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Scl_LibertyReadGenlib() skipped cell "PADFC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADNC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADVDD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADGND" without logic function.
ABC: Library "osu05_stdcells" from "/home/openvlsi/proyecto/IEE2753-2019-eaanais/proyecto/yosys_original_05/osu05_stdcells.lib" has 28 cells (11 skipped: 4 seq; 3 tri-state; 4 no func; 0 dont_use).  Time =     0.01 sec
ABC: Memory =    0.38 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/openvlsi/proyecto/IEE2753-2019-eaanais/proyecto/yosys_original_05/example.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -D 10000 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10000 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10000 
ABC: Current delay (903.12 ps) does not exceed the target delay (10000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 10000 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =     34 ( 52.9 %)   Cap = 25.5 ff (  0.0 %)   Area =     6120.00 (100.0 %)   Delay =  1054.73 ps  ( 17.6 %)               
ABC: Path  0 --       4 : 0    1 pi      A =   0.00  Df =  36.2   -8.3 ps  S =  48.3 ps  Cin =  0.0 ff  Cout =  16.1 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --      37 : 1    7 BUFX2   A = 216.00  Df = 313.7  -15.8 ps  S = 206.3 ps  Cin = 16.1 ff  Cout = 144.6 ff  Cmax = 924.8 ff  G =  897  
ABC: Path  2 --      38 : 1   10 BUFX2   A = 216.00  Df = 787.9  -51.2 ps  S = 403.9 ps  Cin = 16.1 ff  Cout = 302.1 ff  Cmax = 924.8 ff  G = 1870  
ABC: Path  3 --      43 : 3    1 OAI21X1 A = 207.00  Df =1054.7 -143.0 ps  S = 160.3 ps  Cin = 28.9 ff  Cout =   0.0 ff  Cmax = 433.6 ff  G =    0  
ABC: Start-point = pi3 (\en).  End-point = po2 ($0\q[7:0] [2]).
ABC: + write_blif <abc-temp-dir>/output.blif 

15.8.2. Re-integrating ABC results.
ABC RESULTS:             BUFX2 cells:        2
ABC RESULTS:             INVX1 cells:       16
ABC RESULTS:           NAND2X1 cells:        8
ABC RESULTS:           OAI21X1 cells:        8
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:       16
Removing temp directory.

15.9. Extracting gate netlist of module `$paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

15.10. Extracting gate netlist of module `$paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

15.11. Extracting gate netlist of module `$paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

15.12. Extracting gate netlist of module `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16' to `<abc-temp-dir>/input.blif'..
Extracted 6 gates and 9 wires to a netlist network with 3 inputs and 4 outputs.

15.12.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/openvlsi/proyecto/IEE2753-2019-eaanais/proyecto/yosys_original_05/osu05_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "PADINOUT".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Scl_LibertyReadGenlib() skipped cell "PADFC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADNC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADVDD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADGND" without logic function.
ABC: Library "osu05_stdcells" from "/home/openvlsi/proyecto/IEE2753-2019-eaanais/proyecto/yosys_original_05/osu05_stdcells.lib" has 28 cells (11 skipped: 4 seq; 3 tri-state; 4 no func; 0 dont_use).  Time =     0.01 sec
ABC: Memory =    0.38 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/openvlsi/proyecto/IEE2753-2019-eaanais/proyecto/yosys_original_05/example.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -D 10000 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10000 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10000 
ABC: Current delay (716.31 ps) does not exceed the target delay (10000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 10000 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =      6 ( 33.3 %)   Cap = 43.4 ff (  0.0 %)   Area =     1836.00 (100.0 %)   Delay =   716.31 ps  ( 33.3 %)               
ABC: Path  0 --       2 : 0    4 pi      A =   0.00  Df = 286.5  -60.5 ps  S = 380.6 ps  Cin =  0.0 ff  Cout = 128.3 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --       8 : 2    1 NAND2X1 A = 216.00  Df = 549.5 -158.6 ps  S = 238.0 ps  Cin = 21.5 ff  Cout =  63.7 ff  Cmax = 437.2 ff  G =  295  
ABC: Path  2 --       9 : 2    1 XNOR2X1 A = 504.00  Df = 716.3  -10.9 ps  S =  79.7 ps  Cin = 58.5 ff  Cout =   0.0 ff  Cmax = 466.9 ff  G =    0  
ABC: Start-point = pi1 (\add [0]).  End-point = po0 ($abc$2839$memory\rom$rdreg[0]$d$286[2]).
ABC: + write_blif <abc-temp-dir>/output.blif 

15.12.2. Re-integrating ABC results.
ABC RESULTS:             INVX1 cells:        2
ABC RESULTS:           NAND2X1 cells:        1
ABC RESULTS:           NAND3X1 cells:        1
ABC RESULTS:           XNOR2X1 cells:        1
ABC RESULTS:            XOR2X1 cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        4
Removing temp directory.

15.13. Extracting gate netlist of module `\FIR' to `<abc-temp-dir>/input.blif'..
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

15.13.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/openvlsi/proyecto/IEE2753-2019-eaanais/proyecto/yosys_original_05/osu05_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "PADINOUT".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Scl_LibertyReadGenlib() skipped cell "PADFC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADNC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADVDD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADGND" without logic function.
ABC: Library "osu05_stdcells" from "/home/openvlsi/proyecto/IEE2753-2019-eaanais/proyecto/yosys_original_05/osu05_stdcells.lib" has 28 cells (11 skipped: 4 seq; 3 tri-state; 4 no func; 0 dont_use).  Time =     0.01 sec
ABC: Memory =    0.38 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/openvlsi/proyecto/IEE2753-2019-eaanais/proyecto/yosys_original_05/example.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -D 10000 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10000 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10000 
ABC: Current delay (376.33 ps) does not exceed the target delay (10000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 10000 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =      4 ( 25.0 %)   Cap = 18.7 ff (  0.0 %)   Area =      864.00 (100.0 %)   Delay =   376.33 ps  ( 75.0 %)               
ABC: Path  0 --       4 : 0    1 pi     A =   0.00  Df =  60.7  -14.1 ps  S =  81.5 ps  Cin =  0.0 ff  Cout =  27.0 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --       9 : 2    1 NOR2X1 A = 216.00  Df = 191.7  -41.5 ps  S = 132.5 ps  Cin = 27.3 ff  Cout =  21.4 ff  Cmax = 393.2 ff  G =   78  
ABC: Path  2 --      10 : 2    1 AND2X2 A = 288.00  Df = 376.3 -103.9 ps  S =  41.4 ps  Cin = 21.5 ff  Cout =   0.0 ff  Cmax = 924.9 ff  G =    0  
ABC: Start-point = pi3 (\contador_up [1]).  End-point = po0 ($0\enable_asr[0:0]).
ABC: + write_blif <abc-temp-dir>/output.blif 

15.13.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:        1
ABC RESULTS:             INVX1 cells:        1
ABC RESULTS:            NOR2X1 cells:        2
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        2
Removing temp directory.

16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8..
Finding unused cells or wires in module $paramod\adder\N=8..
Finding unused cells or wires in module $paramod\asr8\WIDTH_DATA=8\N_TAPS=8..
Finding unused cells or wires in module $paramod\counter_down\N=3..
Finding unused cells or wires in module $paramod\counter_up\N=3..
Finding unused cells or wires in module $paramod\divisor_clock\N_TAPS=16..
Finding unused cells or wires in module $paramod\register\N=1..
Finding unused cells or wires in module $paramod\register\N=8..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8..
Finding unused cells or wires in module $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1..
Finding unused cells or wires in module $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16..
Finding unused cells or wires in module \FIR..
Removed 470 unused cells and 1624 unused wires.
<suppressed ~10 debug messages>

17. Printing statistics.

=== $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8 ===

   Number of wires:                194
   Number of wire bits:            250
   Number of public wires:           6
   Number of public wire bits:      45
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                203
     AND2X2                          8
     AOI21X1                         2
     AOI22X1                         3
     BUFX2                           6
     DFFPOSX1                        8
     INVX1                          12
     INVX2                           1
     NAND2X1                        53
     NAND3X1                         5
     NOR2X1                         10
     OAI21X1                        24
     OAI22X1                         5
     OR2X2                           6
     XNOR2X1                        43
     XOR2X1                         17

   Chip area for module '$paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8': 68004.000000

=== $paramod\adder\N=8 ===

   Number of wires:                 36
   Number of wire bits:             66
   Number of public wires:           5
   Number of public wire bits:      35
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 49
     AND2X2                          3
     AOI21X1                         4
     DFFPOSX1                        9
     NAND2X1                        11
     NOR2X1                          4
     OAI21X1                         3
     OR2X2                           3
     XNOR2X1                         7
     XOR2X1                          5

   Chip area for module '$paramod\adder\N=8': 20565.000000

=== $paramod\asr8\WIDTH_DATA=8\N_TAPS=8 ===

   Number of wires:                110
   Number of wire bits:            189
   Number of public wires:          15
   Number of public wire bits:      94
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                111
     $paramod\register\N=8           8
     AND2X2                          2
     AOI21X1                         6
     AOI22X1                        13
     BUFX2                           5
     INVX1                          28
     NAND2X1                        10
     NAND3X1                        12
     NOR2X1                          9
     NOR3X1                          1
     OAI21X1                         8
     OAI22X1                         8
     OR2X2                           1

   Area for cell type $paramod\register\N=8 is unknown!

   Chip area for module '$paramod\asr8\WIDTH_DATA=8\N_TAPS=8': 25488.000000

=== $paramod\counter_down\N=3 ===

   Number of wires:                  9
   Number of wire bits:             15
   Number of public wires:           4
   Number of public wire bits:       8
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 10
     AOI21X1                         2
     DFFPOSX1                        3
     INVX1                           1
     NAND2X1                         1
     OAI21X1                         2
     OR2X2                           1

   Chip area for module '$paramod\counter_down\N=3': 4230.000000

=== $paramod\counter_up\N=3 ===

   Number of wires:                  9
   Number of wire bits:             15
   Number of public wires:           4
   Number of public wire bits:       8
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 10
     AOI21X1                         1
     DFFPOSX1                        3
     INVX1                           1
     NAND2X1                         1
     NOR2X1                          2
     OAI21X1                         1
     XOR2X1                          1

   Chip area for module '$paramod\counter_up\N=3': 4383.000000

=== $paramod\divisor_clock\N_TAPS=16 ===

   Number of wires:                 12
   Number of wire bits:             18
   Number of public wires:           4
   Number of public wire bits:       7
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 16
     AOI21X1                         3
     BUFX2                           1
     DFFPOSX1                        4
     INVX1                           2
     NAND2X1                         1
     NAND3X1                         1
     NOR2X1                          2
     OAI21X1                         2

   Chip area for module '$paramod\divisor_clock\N_TAPS=16': 6210.000000

=== $paramod\register\N=1 ===

   Number of wires:                  9
   Number of wire bits:              9
   Number of public wires:           5
   Number of public wire bits:       5
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  5
     DFFSR                           1
     INVX1                           2
     NAND2X1                         1
     OAI21X1                         1

   Chip area for module '$paramod\register\N=1': 2295.000000

=== $paramod\register\N=8 ===

   Number of wires:                 32
   Number of wire bits:             53
   Number of public wires:           5
   Number of public wire bits:      19
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 42
     BUFX2                           2
     DFFSR                           8
     INVX1                          16
     NAND2X1                         8
     OAI21X1                         8

   Chip area for module '$paramod\register\N=8': 18792.000000

=== $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1 ===

   Number of wires:                 16
   Number of wire bits:             16
   Number of public wires:          16
   Number of public wire bits:      16
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 10
     $paramod\register\N=1          10

   Area for cell type $paramod\register\N=1 is unknown!

=== $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8 ===

   Number of wires:                  7
   Number of wire bits:             35
   Number of public wires:           7
   Number of public wire bits:      35
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $paramod\register\N=8           1

   Area for cell type $paramod\register\N=8 is unknown!

=== $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1 ===

   Number of wires:                 13
   Number of wire bits:             13
   Number of public wires:          13
   Number of public wire bits:      13
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  7
     $paramod\register\N=1           7

   Area for cell type $paramod\register\N=1 is unknown!

=== $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16 ===

   Number of wires:                 10
   Number of wire bits:             19
   Number of public wires:           4
   Number of public wire bits:      13
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 10
     DFFPOSX1                        4
     INVX1                           2
     NAND2X1                         1
     NAND3X1                         1
     XNOR2X1                         1
     XOR2X1                          1

   Chip area for module '$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16': 5292.000000

=== FIR ===

   Number of wires:                 24
   Number of wire bits:            113
   Number of public wires:          21
   Number of public wire bits:     110
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 21
     $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8      1
     $paramod\adder\N=8              1
     $paramod\asr8\WIDTH_DATA=8\N_TAPS=8      2
     $paramod\counter_down\N=3       1
     $paramod\counter_up\N=3         1
     $paramod\divisor_clock\N_TAPS=16      1
     $paramod\register\N=8           2
     $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1      1
     $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8      4
     $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1      1
     $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16      1
     AND2X2                          1
     DFFPOSX1                        1
     INVX1                           1
     NOR2X1                          2

   Area for cell type $paramod\register\N=8 is unknown!
   Area for cell type $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8 is unknown!
   Area for cell type $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8 is unknown!
   Area for cell type $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16 is unknown!
   Area for cell type $paramod\adder\N=8 is unknown!
   Area for cell type $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1 is unknown!
   Area for cell type $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1 is unknown!
   Area for cell type $paramod\divisor_clock\N_TAPS=16 is unknown!
   Area for cell type $paramod\counter_down\N=3 is unknown!
   Area for cell type $paramod\asr8\WIDTH_DATA=8\N_TAPS=8 is unknown!
   Area for cell type $paramod\counter_up\N=3 is unknown!

   Chip area for module '\FIR': 1728.000000

=== design hierarchy ===

   FIR                               1
     $paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8      1
     $paramod\adder\N=8              1
     $paramod\asr8\WIDTH_DATA=8\N_TAPS=8      2
       $paramod\register\N=8         8
     $paramod\counter_down\N=3       1
     $paramod\counter_up\N=3         1
     $paramod\divisor_clock\N_TAPS=16      1
     $paramod\register\N=8           2
     $paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1      1
       $paramod\register\N=1        10
     $paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8      4
       $paramod\register\N=8         1
     $paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1      1
       $paramod\register\N=1         7
     $paramod\rom8\WIDTH_COEF0=8\N_TAPS=16      1

   Number of wires:               1428
   Number of wire bits:           2362
   Number of public wires:         330
   Number of public wire bits:    1086
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1518
     AND2X2                         16
     AOI21X1                        24
     AOI22X1                        29
     BUFX2                          61
     DFFPOSX1                       32
     DFFSR                         193
     INVX1                         461
     INVX2                           1
     NAND2X1                       281
     NAND3X1                        31
     NOR2X1                         38
     NOR3X1                          2
     OAI21X1                       241
     OAI22X1                        21
     OR2X2                          12
     XNOR2X1                        51
     XOR2X1                         24

   Chip area for top module '\FIR': 613827.000000

18. Executing Verilog backend.
Dumping module `$paramod\MAC\WIDTH_DATA=8\WIDTH_COEF0=8\WIDTH_MAC_OUT=8'.
Dumping module `$paramod\adder\N=8'.
Dumping module `$paramod\asr8\WIDTH_DATA=8\N_TAPS=8'.
Dumping module `$paramod\counter_down\N=3'.
Dumping module `$paramod\counter_up\N=3'.
Dumping module `$paramod\divisor_clock\N_TAPS=16'.
Dumping module `$paramod\register\N=1'.
Dumping module `$paramod\register\N=8'.
Dumping module `$paramod\retardo_N\WIDTH_DELAY=10\WIDTH_DATA=1'.
Dumping module `$paramod\retardo_N\WIDTH_DELAY=1\WIDTH_DATA=8'.
Dumping module `$paramod\retardo_N\WIDTH_DELAY=7\WIDTH_DATA=1'.
Dumping module `$paramod\rom8\WIDTH_COEF0=8\N_TAPS=16'.
Dumping module `\FIR'.

End of script. Logfile hash: 66bc9b32aa
CPU: user 1.23s system 0.10s, MEM: 42.94 MB total, 15.20 MB resident
Yosys 0.8+369 (git sha1 ea0e0722, gcc 7.3.0-27ubuntu1~18.04 -fPIC -Os)
Time spent: 19% 22x opt_expr (0 sec), 13% 24x opt_clean (0 sec), ...
