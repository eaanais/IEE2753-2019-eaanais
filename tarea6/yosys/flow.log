
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2018  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.8+369 (git sha1 ea0e0722, gcc 7.3.0-27ubuntu1~18.04 -fPIC -Os)


-- Executing script file `flow.ys' --

1. Executing Verilog-2005 frontend.
Parsing Verilog input from `./rtl/mips.v' to AST representation.
Generating RTLIL representation for module `\mips'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend.
Parsing Verilog input from `./rtl/control.v' to AST representation.
Generating RTLIL representation for module `\control'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend.
Parsing Verilog input from `./rtl/aluControl.v' to AST representation.
Generating RTLIL representation for module `\aluControl'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend.
Parsing Verilog input from `./rtl/nextPCLogic.v' to AST representation.
Generating RTLIL representation for module `\nextPCLogic'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend.
Parsing Verilog input from `./rtl/register.v' to AST representation.
Generating RTLIL representation for module `\register'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend.
Parsing Verilog input from `./rtl/mux2to1.v' to AST representation.
Generating RTLIL representation for module `\mux2to1'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend.
Parsing Verilog input from `./rtl/regfile.v' to AST representation.
Generating RTLIL representation for module `\regfile'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend.
Parsing Verilog input from `./rtl/signExtend.v' to AST representation.
Generating RTLIL representation for module `\signExtend'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend.
Parsing Verilog input from `./rtl/shiftLeft2.v' to AST representation.
Generating RTLIL representation for module `\shiftLeft2'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend.
Parsing Verilog input from `./rtl/mux4to1.v' to AST representation.
Generating RTLIL representation for module `\mux4to1'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend.
Parsing Verilog input from `./rtl/alu.v' to AST representation.
Generating RTLIL representation for module `\alu'.
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend.
Parsing Verilog input from `./rtl/datapath.v' to AST representation.
Generating RTLIL representation for module `\datapath'.
Successfully finished Verilog frontend.

13. Executing Liberty frontend.
Imported 39 cell types from liberty file.

14. Executing SYNTH pass.

14.1. Executing HIERARCHY pass (managing design hierarchy).

14.1.1. Analyzing design hierarchy..
Top module:  \mips
Used module:     \control
Used module:     \aluControl
Used module:     \datapath
Used module:         \mux4to1
Used module:         \register
Used module:         \alu
Used module:         \shiftLeft2
Used module:         \signExtend
Used module:         \mux2to1
Used module:         \regfile
Used module:         \nextPCLogic

14.1.2. Executing AST frontend in derive mode using pre-parsed AST for module `\mux2to1'.
Parameter 1 (\N) = 32
Generating RTLIL representation for module `$paramod\mux2to1\N=32'.

14.1.3. Executing AST frontend in derive mode using pre-parsed AST for module `\mux2to1'.
Parameter 1 (\N) = 32
Found cached RTLIL representation for module `$paramod\mux2to1\N=32'.

14.1.4. Executing AST frontend in derive mode using pre-parsed AST for module `\mux2to1'.
Parameter 1 (\N) = 5
Generating RTLIL representation for module `$paramod\mux2to1\N=5'.

14.1.5. Executing AST frontend in derive mode using pre-parsed AST for module `\mux2to1'.
Parameter 1 (\N) = 32
Found cached RTLIL representation for module `$paramod\mux2to1\N=32'.

14.1.6. Analyzing design hierarchy..
Top module:  \mips
Used module:     \control
Used module:     \aluControl
Used module:     \datapath
Used module:         \mux4to1
Used module:         \register
Used module:         \alu
Used module:         \shiftLeft2
Used module:         \signExtend
Used module:         $paramod\mux2to1\N=32
Used module:         \regfile
Used module:         $paramod\mux2to1\N=5
Used module:         \nextPCLogic

14.1.7. Analyzing design hierarchy..
Top module:  \mips
Used module:     \control
Used module:     \aluControl
Used module:     \datapath
Used module:         \mux4to1
Used module:         \register
Used module:         \alu
Used module:         \shiftLeft2
Used module:         \signExtend
Used module:         $paramod\mux2to1\N=32
Used module:         \regfile
Used module:         $paramod\mux2to1\N=5
Used module:         \nextPCLogic
Removing unused module `\mux2to1'.
Removed 1 unused modules.

14.2. Executing PROC pass (convert processes to netlists).

14.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

14.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed 1 dead cases from process $proc$./rtl/mux2to1.v:8$237 in module $paramod\mux2to1\N=32.
Marked 1 switch rules as full_case in process $proc$./rtl/mux2to1.v:8$237 in module $paramod\mux2to1\N=32.
Marked 3 switch rules as full_case in process $proc$./rtl/alu.v:32$227 in module alu.
Marked 1 switch rules as full_case in process $proc$./rtl/alu.v:14$225 in module alu.
Removed 1 dead cases from process $proc$./rtl/mux4to1.v:7$223 in module mux4to1.
Marked 1 switch rules as full_case in process $proc$./rtl/mux4to1.v:7$223 in module mux4to1.
Marked 1 switch rules as full_case in process $proc$./rtl/regfile.v:19$84 in module regfile.
Removed 1 dead cases from process $proc$./rtl/mux2to1.v:8$238 in module $paramod\mux2to1\N=5.
Marked 1 switch rules as full_case in process $proc$./rtl/mux2to1.v:8$238 in module $paramod\mux2to1\N=5.
Marked 1 switch rules as full_case in process $proc$./rtl/register.v:11$17 in module register.
Marked 1 switch rules as full_case in process $proc$./rtl/aluControl.v:28$14 in module aluControl.
Marked 9 switch rules as full_case in process $proc$./rtl/control.v:71$2 in module control.
Marked 1 switch rules as full_case in process $proc$./rtl/control.v:64$1 in module control.
Removed a total of 3 dead cases.

14.2.3. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\control.$proc$./rtl/control.v:59$13'.
  Set init value: \state = 4'0000

14.2.4. Executing PROC_ARST pass (detect async resets in processes).

14.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\mux2to1\N=32.$proc$./rtl/mux2to1.v:8$237'.
     1/2: $1\dout[31:0]
     2/2: $0\dout[31:0]
Creating decoders for process `\alu.$proc$./rtl/alu.v:32$227'.
     1/8: $3\aluZero[0:0]
     2/8: $3\aluResult[31:0]
     3/8: $2\aluZero[0:0]
     4/8: $2\aluResult[31:0]
     5/8: $1\aluZero[0:0]
     6/8: $1\aluResult[31:0]
     7/8: $0\aluZero[0:0]
     8/8: $0\aluResult[31:0]
Creating decoders for process `\alu.$proc$./rtl/alu.v:14$225'.
     1/2: $1\aluOverflow[0:0]
     2/2: $0\aluOverflow[0:0]
Creating decoders for process `\mux4to1.$proc$./rtl/mux4to1.v:7$223'.
     1/2: $1\dout[31:0]
     2/2: $0\dout[31:0]
Creating decoders for process `\regfile.$proc$./rtl/regfile.v:19$84'.
     1/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$51_EN[31:0]$87
     2/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$51_DATA[31:0]$86
     3/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$51_ADDR[31:0]$85
     4/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$52_EN[31:0]$90
     5/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$52_DATA[31:0]$89
     6/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$52_ADDR[31:0]$88
     7/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$53_EN[31:0]$93
     8/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$53_DATA[31:0]$92
     9/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$53_ADDR[31:0]$91
    10/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$54_EN[31:0]$96
    11/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$54_DATA[31:0]$95
    12/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$54_ADDR[31:0]$94
    13/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$55_EN[31:0]$99
    14/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$55_DATA[31:0]$98
    15/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$55_ADDR[31:0]$97
    16/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$56_EN[31:0]$102
    17/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$56_DATA[31:0]$101
    18/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$56_ADDR[31:0]$100
    19/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$57_EN[31:0]$105
    20/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$57_DATA[31:0]$104
    21/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$57_ADDR[31:0]$103
    22/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$58_EN[31:0]$108
    23/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$58_DATA[31:0]$107
    24/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$58_ADDR[31:0]$106
    25/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$59_EN[31:0]$111
    26/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$59_DATA[31:0]$110
    27/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$59_ADDR[31:0]$109
    28/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$60_EN[31:0]$114
    29/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$60_DATA[31:0]$113
    30/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$60_ADDR[31:0]$112
    31/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$61_EN[31:0]$117
    32/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$61_DATA[31:0]$116
    33/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$61_ADDR[31:0]$115
    34/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$62_EN[31:0]$120
    35/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$62_DATA[31:0]$119
    36/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$62_ADDR[31:0]$118
    37/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$63_EN[31:0]$123
    38/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$63_DATA[31:0]$122
    39/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$63_ADDR[31:0]$121
    40/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$64_EN[31:0]$126
    41/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$64_DATA[31:0]$125
    42/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$64_ADDR[31:0]$124
    43/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$65_EN[31:0]$129
    44/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$65_DATA[31:0]$128
    45/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$65_ADDR[31:0]$127
    46/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$66_EN[31:0]$132
    47/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$66_DATA[31:0]$131
    48/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$66_ADDR[31:0]$130
    49/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$67_EN[31:0]$135
    50/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$67_DATA[31:0]$134
    51/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$67_ADDR[31:0]$133
    52/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$68_EN[31:0]$138
    53/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$68_DATA[31:0]$137
    54/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$68_ADDR[31:0]$136
    55/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$69_EN[31:0]$141
    56/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$69_DATA[31:0]$140
    57/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$69_ADDR[31:0]$139
    58/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$70_EN[31:0]$144
    59/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$70_DATA[31:0]$143
    60/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$70_ADDR[31:0]$142
    61/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$71_EN[31:0]$147
    62/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$71_DATA[31:0]$146
    63/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$71_ADDR[31:0]$145
    64/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$72_EN[31:0]$150
    65/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$72_DATA[31:0]$149
    66/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$72_ADDR[31:0]$148
    67/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$73_EN[31:0]$153
    68/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$73_DATA[31:0]$152
    69/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$73_ADDR[31:0]$151
    70/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$74_EN[31:0]$156
    71/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$74_DATA[31:0]$155
    72/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$74_ADDR[31:0]$154
    73/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$75_EN[31:0]$159
    74/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$75_DATA[31:0]$158
    75/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$75_ADDR[31:0]$157
    76/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$76_EN[31:0]$162
    77/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$76_DATA[31:0]$161
    78/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$76_ADDR[31:0]$160
    79/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$77_EN[31:0]$165
    80/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$77_DATA[31:0]$164
    81/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$77_ADDR[31:0]$163
    82/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$78_EN[31:0]$168
    83/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$78_DATA[31:0]$167
    84/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$78_ADDR[31:0]$166
    85/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$79_EN[31:0]$171
    86/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$79_DATA[31:0]$170
    87/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$79_ADDR[31:0]$169
    88/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$80_EN[31:0]$174
    89/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$80_DATA[31:0]$173
    90/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$80_ADDR[31:0]$172
    91/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$81_EN[31:0]$177
    92/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$81_DATA[31:0]$176
    93/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$81_ADDR[31:0]$175
    94/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$82_EN[31:0]$180
    95/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$82_DATA[31:0]$179
    96/99: $0$memwr$\regfile_mem$./rtl/regfile.v:23$82_ADDR[31:0]$178
    97/99: $0$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN[31:0]$183
    98/99: $0$memwr$\regfile_mem$./rtl/regfile.v:26$83_DATA[31:0]$182
    99/99: $0$memwr$\regfile_mem$./rtl/regfile.v:26$83_ADDR[4:0]$181
Creating decoders for process `$paramod\mux2to1\N=5.$proc$./rtl/mux2to1.v:8$238'.
     1/2: $1\dout[4:0]
     2/2: $0\dout[4:0]
Creating decoders for process `\register.$proc$./rtl/register.v:11$17'.
     1/1: $0\dout[31:0]
Creating decoders for process `\aluControl.$proc$./rtl/aluControl.v:28$14'.
     1/2: $1\aluControl[3:0]
     2/2: $0\aluControl[3:0]
Creating decoders for process `\control.$proc$./rtl/control.v:59$13'.
     1/1: $1\state[3:0]
Creating decoders for process `\control.$proc$./rtl/control.v:71$2'.
     1/36: $9\nextState[3:0]
     2/36: $8\nextState[3:0]
     3/36: $7\nextState[3:0]
     4/36: $6\nextState[3:0]
     5/36: $5\nextState[3:0]
     6/36: $4\nextState[3:0]
     7/36: $3\nextState[3:0]
     8/36: $2\nextState[3:0]
     9/36: $1\nextState[3:0]
    10/36: $1\PCWriteCond[0:0]
    11/36: $1\MemWrite[0:0]
    12/36: $1\MemRead[0:0]
    13/36: $1\PCWrite[0:0]
    14/36: $1\IRWrite[0:0]
    15/36: $1\PCSource[1:0]
    16/36: $1\ALUOp[1:0]
    17/36: $1\ALUSrcB[1:0]
    18/36: $1\ALUSrcA[0:0]
    19/36: $1\IorD[0:0]
    20/36: $1\RegDst[0:0]
    21/36: $1\MemtoReg[0:0]
    22/36: $1\RegWrite[0:0]
    23/36: $0\nextState[3:0]
    24/36: $0\ALUOp[1:0]
    25/36: $0\ALUSrcB[1:0]
    26/36: $0\PCSource[1:0]
    27/36: $0\ALUSrcA[0:0]
    28/36: $0\RegDst[0:0]
    29/36: $0\RegWrite[0:0]
    30/36: $0\IRWrite[0:0]
    31/36: $0\MemtoReg[0:0]
    32/36: $0\IorD[0:0]
    33/36: $0\MemWrite[0:0]
    34/36: $0\MemRead[0:0]
    35/36: $0\PCWrite[0:0]
    36/36: $0\PCWriteCond[0:0]
Creating decoders for process `\control.$proc$./rtl/control.v:64$1'.
     1/1: $0\state[3:0]

14.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\mux2to1\N=32.\dout' from process `$paramod\mux2to1\N=32.$proc$./rtl/mux2to1.v:8$237'.
No latch inferred for signal `\alu.\aluResult' from process `\alu.$proc$./rtl/alu.v:32$227'.
No latch inferred for signal `\alu.\aluZero' from process `\alu.$proc$./rtl/alu.v:32$227'.
No latch inferred for signal `\alu.\aluOverflow' from process `\alu.$proc$./rtl/alu.v:14$225'.
No latch inferred for signal `\mux4to1.\dout' from process `\mux4to1.$proc$./rtl/mux4to1.v:7$223'.
No latch inferred for signal `$paramod\mux2to1\N=5.\dout' from process `$paramod\mux2to1\N=5.$proc$./rtl/mux2to1.v:8$238'.
No latch inferred for signal `\aluControl.\aluControl' from process `\aluControl.$proc$./rtl/aluControl.v:28$14'.
No latch inferred for signal `\control.\PCWriteCond' from process `\control.$proc$./rtl/control.v:71$2'.
No latch inferred for signal `\control.\PCWrite' from process `\control.$proc$./rtl/control.v:71$2'.
No latch inferred for signal `\control.\MemRead' from process `\control.$proc$./rtl/control.v:71$2'.
No latch inferred for signal `\control.\MemWrite' from process `\control.$proc$./rtl/control.v:71$2'.
No latch inferred for signal `\control.\IorD' from process `\control.$proc$./rtl/control.v:71$2'.
No latch inferred for signal `\control.\MemtoReg' from process `\control.$proc$./rtl/control.v:71$2'.
No latch inferred for signal `\control.\IRWrite' from process `\control.$proc$./rtl/control.v:71$2'.
No latch inferred for signal `\control.\RegWrite' from process `\control.$proc$./rtl/control.v:71$2'.
No latch inferred for signal `\control.\RegDst' from process `\control.$proc$./rtl/control.v:71$2'.
No latch inferred for signal `\control.\ALUSrcA' from process `\control.$proc$./rtl/control.v:71$2'.
No latch inferred for signal `\control.\PCSource' from process `\control.$proc$./rtl/control.v:71$2'.
No latch inferred for signal `\control.\ALUSrcB' from process `\control.$proc$./rtl/control.v:71$2'.
No latch inferred for signal `\control.\ALUOp' from process `\control.$proc$./rtl/control.v:71$2'.
No latch inferred for signal `\control.\nextState' from process `\control.$proc$./rtl/control.v:71$2'.

14.2.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$51_ADDR' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$940' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$51_DATA' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$941' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$51_EN' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$942' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$52_ADDR' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$943' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$52_DATA' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$944' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$52_EN' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$945' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$53_ADDR' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$946' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$53_DATA' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$947' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$53_EN' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$948' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$54_ADDR' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$949' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$54_DATA' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$950' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$54_EN' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$951' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$55_ADDR' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$952' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$55_DATA' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$953' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$55_EN' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$954' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$56_ADDR' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$955' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$56_DATA' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$956' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$56_EN' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$957' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$57_ADDR' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$958' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$57_DATA' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$959' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$57_EN' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$960' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$58_ADDR' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$961' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$58_DATA' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$962' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$58_EN' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$963' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$59_ADDR' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$964' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$59_DATA' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$965' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$59_EN' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$966' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$60_ADDR' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$967' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$60_DATA' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$968' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$60_EN' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$969' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$61_ADDR' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$970' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$61_DATA' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$971' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$61_EN' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$972' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$62_ADDR' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$973' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$62_DATA' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$974' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$62_EN' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$975' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$63_ADDR' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$976' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$63_DATA' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$977' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$63_EN' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$978' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$64_ADDR' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$979' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$64_DATA' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$980' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$64_EN' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$981' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$65_ADDR' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$982' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$65_DATA' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$983' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$65_EN' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$984' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$66_ADDR' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$985' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$66_DATA' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$986' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$66_EN' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$987' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$67_ADDR' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$988' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$67_DATA' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$989' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$67_EN' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$990' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$68_ADDR' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$991' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$68_DATA' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$992' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$68_EN' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$993' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$69_ADDR' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$994' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$69_DATA' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$995' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$69_EN' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$996' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$70_ADDR' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$997' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$70_DATA' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$998' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$70_EN' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$999' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$71_ADDR' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1000' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$71_DATA' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1001' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$71_EN' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1002' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$72_ADDR' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1003' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$72_DATA' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1004' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$72_EN' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1005' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$73_ADDR' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1006' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$73_DATA' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1007' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$73_EN' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1008' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$74_ADDR' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1009' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$74_DATA' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1010' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$74_EN' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1011' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$75_ADDR' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1012' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$75_DATA' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1013' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$75_EN' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1014' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$76_ADDR' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1015' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$76_DATA' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1016' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$76_EN' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1017' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$77_ADDR' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1018' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$77_DATA' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1019' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$77_EN' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1020' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$78_ADDR' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1021' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$78_DATA' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1022' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$78_EN' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1023' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$79_ADDR' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1024' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$79_DATA' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1025' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$79_EN' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1026' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$80_ADDR' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1027' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$80_DATA' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1028' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$80_EN' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1029' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$81_ADDR' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1030' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$81_DATA' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1031' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$81_EN' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1032' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$82_ADDR' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1033' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$82_DATA' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1034' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$82_EN' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1035' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:26$83_ADDR' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1036' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:26$83_DATA' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1037' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN' using process `\regfile.$proc$./rtl/regfile.v:19$84'.
  created $dff cell `$procdff$1038' with positive edge clock.
Creating register for signal `\register.\dout' using process `\register.$proc$./rtl/register.v:11$17'.
  created $dff cell `$procdff$1039' with positive edge clock.
Creating register for signal `\control.\state' using process `\control.$proc$./rtl/control.v:64$1'.
  created $dff cell `$procdff$1040' with positive edge clock.

14.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `$paramod\mux2to1\N=32.$proc$./rtl/mux2to1.v:8$237'.
Removing empty process `$paramod\mux2to1\N=32.$proc$./rtl/mux2to1.v:8$237'.
Found and cleaned up 3 empty switches in `\alu.$proc$./rtl/alu.v:32$227'.
Removing empty process `alu.$proc$./rtl/alu.v:32$227'.
Found and cleaned up 1 empty switch in `\alu.$proc$./rtl/alu.v:14$225'.
Removing empty process `alu.$proc$./rtl/alu.v:14$225'.
Found and cleaned up 1 empty switch in `\mux4to1.$proc$./rtl/mux4to1.v:7$223'.
Removing empty process `mux4to1.$proc$./rtl/mux4to1.v:7$223'.
Found and cleaned up 2 empty switches in `\regfile.$proc$./rtl/regfile.v:19$84'.
Removing empty process `regfile.$proc$./rtl/regfile.v:19$84'.
Found and cleaned up 1 empty switch in `$paramod\mux2to1\N=5.$proc$./rtl/mux2to1.v:8$238'.
Removing empty process `$paramod\mux2to1\N=5.$proc$./rtl/mux2to1.v:8$238'.
Found and cleaned up 2 empty switches in `\register.$proc$./rtl/register.v:11$17'.
Removing empty process `register.$proc$./rtl/register.v:11$17'.
Found and cleaned up 1 empty switch in `\aluControl.$proc$./rtl/aluControl.v:28$14'.
Removing empty process `aluControl.$proc$./rtl/aluControl.v:28$14'.
Removing empty process `control.$proc$./rtl/control.v:59$13'.
Found and cleaned up 9 empty switches in `\control.$proc$./rtl/control.v:71$2'.
Removing empty process `control.$proc$./rtl/control.v:71$2'.
Found and cleaned up 1 empty switch in `\control.$proc$./rtl/control.v:64$1'.
Removing empty process `control.$proc$./rtl/control.v:64$1'.
Cleaned up 22 empty switches.

14.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2to1\N=32.
<suppressed ~1 debug messages>
Optimizing module datapath.
Optimizing module alu.
<suppressed ~2 debug messages>
Optimizing module mux4to1.
<suppressed ~1 debug messages>
Optimizing module shiftLeft2.
Optimizing module signExtend.
Optimizing module regfile.
<suppressed ~2 debug messages>
Optimizing module $paramod\mux2to1\N=5.
<suppressed ~1 debug messages>
Optimizing module register.
Optimizing module nextPCLogic.
Optimizing module aluControl.
Optimizing module control.
<suppressed ~5 debug messages>
Optimizing module mips.

14.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux2to1\N=32..
Finding unused cells or wires in module \datapath..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \mux4to1..
Finding unused cells or wires in module \shiftLeft2..
Finding unused cells or wires in module \signExtend..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module $paramod\mux2to1\N=5..
Finding unused cells or wires in module \register..
Finding unused cells or wires in module \nextPCLogic..
Finding unused cells or wires in module \aluControl..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \mips..
Removed 0 unused cells and 316 unused wires.
<suppressed ~10 debug messages>

14.5. Executing CHECK pass (checking for obvious problems).
checking module $paramod\mux2to1\N=32..
checking module $paramod\mux2to1\N=5..
checking module alu..
checking module aluControl..
checking module control..
checking module datapath..
checking module mips..
checking module mux4to1..
checking module nextPCLogic..
checking module regfile..
checking module register..
checking module shiftLeft2..
checking module signExtend..
found and reported 0 problems.

14.6. Executing OPT pass (performing simple optimizations).

14.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2to1\N=32.
Optimizing module $paramod\mux2to1\N=5.
Optimizing module alu.
Optimizing module aluControl.
Optimizing module control.
Optimizing module datapath.
Optimizing module mips.
Optimizing module mux4to1.
Optimizing module nextPCLogic.
Optimizing module regfile.
Optimizing module register.
Optimizing module shiftLeft2.
Optimizing module signExtend.

14.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\mux2to1\N=32'.
Finding identical cells in module `$paramod\mux2to1\N=5'.
Finding identical cells in module `\alu'.
<suppressed ~21 debug messages>
Finding identical cells in module `\aluControl'.
Finding identical cells in module `\control'.
<suppressed ~129 debug messages>
Finding identical cells in module `\datapath'.
Finding identical cells in module `\mips'.
Finding identical cells in module `\mux4to1'.
Finding identical cells in module `\nextPCLogic'.
Finding identical cells in module `\regfile'.
Finding identical cells in module `\register'.
Finding identical cells in module `\shiftLeft2'.
Finding identical cells in module `\signExtend'.
Removed a total of 50 cells.

14.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\mux2to1\N=32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux2to1\N=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$249.
    dead port 2/2 on $mux $procmux$257.
    dead port 2/2 on $mux $procmux$267.
    dead port 2/2 on $mux $procmux$276.
Running muxtree optimizer on module \aluControl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \control..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$784.
    dead port 2/2 on $mux $procmux$786.
    dead port 2/2 on $mux $procmux$803.
    dead port 1/2 on $mux $procmux$638.
    dead port 2/2 on $mux $procmux$640.
    dead port 2/2 on $mux $procmux$656.
    dead port 1/2 on $mux $procmux$674.
    dead port 1/2 on $mux $procmux$677.
    dead port 1/2 on $mux $procmux$680.
    dead port 1/2 on $mux $procmux$683.
    dead port 1/2 on $mux $procmux$686.
    dead port 2/2 on $mux $procmux$688.
    dead port 1/2 on $mux $procmux$706.
    dead port 1/2 on $mux $procmux$709.
    dead port 1/2 on $mux $procmux$712.
    dead port 1/2 on $mux $procmux$715.
    dead port 2/2 on $mux $procmux$717.
    dead port 1/2 on $mux $procmux$735.
    dead port 1/2 on $mux $procmux$738.
    dead port 1/2 on $mux $procmux$741.
    dead port 2/2 on $mux $procmux$743.
    dead port 1/2 on $mux $procmux$761.
    dead port 1/2 on $mux $procmux$764.
    dead port 2/2 on $mux $procmux$766.
Running muxtree optimizer on module \datapath..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mips..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mux4to1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \nextPCLogic..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \regfile..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \register..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \shiftLeft2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \signExtend..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 28 multiplexer ports.
<suppressed ~122 debug messages>

14.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\mux2to1\N=32.
  Optimizing cells in module $paramod\mux2to1\N=5.
  Optimizing cells in module \alu.
    New ctrl vector for $pmux cell $procmux$286: { $procmux$294_CMP $procmux$293_CMP $procmux$292_CMP $procmux$289_CMP $procmux$288_CMP $procmux$287_CMP }
  Optimizing cells in module \alu.
  Optimizing cells in module \aluControl.
  Optimizing cells in module \control.
    New ctrl vector for $pmux cell $procmux$865: { $procmux$847_CMP $auto$opt_reduce.cc:132:opt_mux$1042 }
    New ctrl vector for $pmux cell $procmux$870: { $auto$opt_reduce.cc:132:opt_mux$1044 $procmux$819_CMP $procmux$818_CMP }
    New ctrl vector for $pmux cell $procmux$877: { $procmux$815_CMP $auto$opt_reduce.cc:132:opt_mux$1048 $auto$opt_reduce.cc:132:opt_mux$1046 }
    New ctrl vector for $pmux cell $procmux$888: $auto$opt_reduce.cc:132:opt_mux$1050
    New ctrl vector for $pmux cell $procmux$817: $auto$opt_reduce.cc:132:opt_mux$1052
    New ctrl vector for $pmux cell $procmux$907: $auto$opt_reduce.cc:132:opt_mux$1054
    New ctrl vector for $pmux cell $procmux$846: $auto$opt_reduce.cc:132:opt_mux$1056
    New ctrl vector for $pmux cell $procmux$933: $auto$opt_reduce.cc:132:opt_mux$1058
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1041: { $procmux$818_CMP $procmux$819_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1047: { $procmux$641_CMP $procmux$810_CMP $procmux$812_CMP $procmux$829_CMP $procmux$879_CMP $procmux$882_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1049: { $procmux$641_CMP $procmux$810_CMP $procmux$811_CMP $procmux$812_CMP $procmux$818_CMP $procmux$819_CMP $procmux$829_CMP $procmux$873_CMP $procmux$879_CMP $procmux$882_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1051: { $procmux$818_CMP $procmux$819_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1053: { $procmux$812_CMP $procmux$829_CMP $procmux$882_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1057: { $procmux$873_CMP $procmux$879_CMP $procmux$882_CMP }
  Optimizing cells in module \control.
  Optimizing cells in module \datapath.
  Optimizing cells in module \mips.
  Optimizing cells in module \mux4to1.
  Optimizing cells in module \nextPCLogic.
  Optimizing cells in module \regfile.
    Consolidated identical input bits for $mux cell $procmux$304:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$51_EN[31:0]$87
      New ports: A=1'0, B=1'1, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$51_EN[31:0]$87 [0]
      New connections: $0$memwr$\regfile_mem$./rtl/regfile.v:23$51_EN[31:0]$87 [31:1] = { $0$memwr$\regfile_mem$./rtl/regfile.v:23$51_EN[31:0]$87 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$51_EN[31:0]$87 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$51_EN[31:0]$87 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$51_EN[31:0]$87 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$51_EN[31:0]$87 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$51_EN[31:0]$87 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$51_EN[31:0]$87 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$51_EN[31:0]$87 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$51_EN[31:0]$87 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$51_EN[31:0]$87 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$51_EN[31:0]$87 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$51_EN[31:0]$87 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$51_EN[31:0]$87 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$51_EN[31:0]$87 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$51_EN[31:0]$87 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$51_EN[31:0]$87 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$51_EN[31:0]$87 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$51_EN[31:0]$87 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$51_EN[31:0]$87 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$51_EN[31:0]$87 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$51_EN[31:0]$87 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$51_EN[31:0]$87 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$51_EN[31:0]$87 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$51_EN[31:0]$87 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$51_EN[31:0]$87 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$51_EN[31:0]$87 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$51_EN[31:0]$87 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$51_EN[31:0]$87 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$51_EN[31:0]$87 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$51_EN[31:0]$87 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$51_EN[31:0]$87 [0] }
    Consolidated identical input bits for $mux cell $procmux$313:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$52_EN[31:0]$90
      New ports: A=1'0, B=1'1, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$52_EN[31:0]$90 [0]
      New connections: $0$memwr$\regfile_mem$./rtl/regfile.v:23$52_EN[31:0]$90 [31:1] = { $0$memwr$\regfile_mem$./rtl/regfile.v:23$52_EN[31:0]$90 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$52_EN[31:0]$90 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$52_EN[31:0]$90 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$52_EN[31:0]$90 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$52_EN[31:0]$90 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$52_EN[31:0]$90 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$52_EN[31:0]$90 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$52_EN[31:0]$90 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$52_EN[31:0]$90 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$52_EN[31:0]$90 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$52_EN[31:0]$90 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$52_EN[31:0]$90 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$52_EN[31:0]$90 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$52_EN[31:0]$90 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$52_EN[31:0]$90 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$52_EN[31:0]$90 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$52_EN[31:0]$90 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$52_EN[31:0]$90 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$52_EN[31:0]$90 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$52_EN[31:0]$90 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$52_EN[31:0]$90 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$52_EN[31:0]$90 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$52_EN[31:0]$90 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$52_EN[31:0]$90 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$52_EN[31:0]$90 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$52_EN[31:0]$90 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$52_EN[31:0]$90 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$52_EN[31:0]$90 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$52_EN[31:0]$90 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$52_EN[31:0]$90 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$52_EN[31:0]$90 [0] }
    Consolidated identical input bits for $mux cell $procmux$322:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$53_EN[31:0]$93
      New ports: A=1'0, B=1'1, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$53_EN[31:0]$93 [0]
      New connections: $0$memwr$\regfile_mem$./rtl/regfile.v:23$53_EN[31:0]$93 [31:1] = { $0$memwr$\regfile_mem$./rtl/regfile.v:23$53_EN[31:0]$93 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$53_EN[31:0]$93 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$53_EN[31:0]$93 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$53_EN[31:0]$93 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$53_EN[31:0]$93 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$53_EN[31:0]$93 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$53_EN[31:0]$93 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$53_EN[31:0]$93 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$53_EN[31:0]$93 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$53_EN[31:0]$93 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$53_EN[31:0]$93 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$53_EN[31:0]$93 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$53_EN[31:0]$93 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$53_EN[31:0]$93 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$53_EN[31:0]$93 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$53_EN[31:0]$93 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$53_EN[31:0]$93 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$53_EN[31:0]$93 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$53_EN[31:0]$93 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$53_EN[31:0]$93 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$53_EN[31:0]$93 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$53_EN[31:0]$93 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$53_EN[31:0]$93 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$53_EN[31:0]$93 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$53_EN[31:0]$93 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$53_EN[31:0]$93 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$53_EN[31:0]$93 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$53_EN[31:0]$93 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$53_EN[31:0]$93 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$53_EN[31:0]$93 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$53_EN[31:0]$93 [0] }
    Consolidated identical input bits for $mux cell $procmux$331:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$54_EN[31:0]$96
      New ports: A=1'0, B=1'1, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$54_EN[31:0]$96 [0]
      New connections: $0$memwr$\regfile_mem$./rtl/regfile.v:23$54_EN[31:0]$96 [31:1] = { $0$memwr$\regfile_mem$./rtl/regfile.v:23$54_EN[31:0]$96 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$54_EN[31:0]$96 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$54_EN[31:0]$96 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$54_EN[31:0]$96 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$54_EN[31:0]$96 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$54_EN[31:0]$96 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$54_EN[31:0]$96 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$54_EN[31:0]$96 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$54_EN[31:0]$96 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$54_EN[31:0]$96 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$54_EN[31:0]$96 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$54_EN[31:0]$96 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$54_EN[31:0]$96 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$54_EN[31:0]$96 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$54_EN[31:0]$96 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$54_EN[31:0]$96 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$54_EN[31:0]$96 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$54_EN[31:0]$96 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$54_EN[31:0]$96 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$54_EN[31:0]$96 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$54_EN[31:0]$96 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$54_EN[31:0]$96 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$54_EN[31:0]$96 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$54_EN[31:0]$96 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$54_EN[31:0]$96 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$54_EN[31:0]$96 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$54_EN[31:0]$96 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$54_EN[31:0]$96 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$54_EN[31:0]$96 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$54_EN[31:0]$96 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$54_EN[31:0]$96 [0] }
    Consolidated identical input bits for $mux cell $procmux$340:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$55_EN[31:0]$99
      New ports: A=1'0, B=1'1, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$55_EN[31:0]$99 [0]
      New connections: $0$memwr$\regfile_mem$./rtl/regfile.v:23$55_EN[31:0]$99 [31:1] = { $0$memwr$\regfile_mem$./rtl/regfile.v:23$55_EN[31:0]$99 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$55_EN[31:0]$99 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$55_EN[31:0]$99 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$55_EN[31:0]$99 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$55_EN[31:0]$99 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$55_EN[31:0]$99 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$55_EN[31:0]$99 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$55_EN[31:0]$99 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$55_EN[31:0]$99 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$55_EN[31:0]$99 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$55_EN[31:0]$99 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$55_EN[31:0]$99 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$55_EN[31:0]$99 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$55_EN[31:0]$99 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$55_EN[31:0]$99 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$55_EN[31:0]$99 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$55_EN[31:0]$99 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$55_EN[31:0]$99 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$55_EN[31:0]$99 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$55_EN[31:0]$99 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$55_EN[31:0]$99 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$55_EN[31:0]$99 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$55_EN[31:0]$99 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$55_EN[31:0]$99 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$55_EN[31:0]$99 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$55_EN[31:0]$99 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$55_EN[31:0]$99 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$55_EN[31:0]$99 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$55_EN[31:0]$99 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$55_EN[31:0]$99 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$55_EN[31:0]$99 [0] }
    Consolidated identical input bits for $mux cell $procmux$349:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$56_EN[31:0]$102
      New ports: A=1'0, B=1'1, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$56_EN[31:0]$102 [0]
      New connections: $0$memwr$\regfile_mem$./rtl/regfile.v:23$56_EN[31:0]$102 [31:1] = { $0$memwr$\regfile_mem$./rtl/regfile.v:23$56_EN[31:0]$102 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$56_EN[31:0]$102 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$56_EN[31:0]$102 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$56_EN[31:0]$102 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$56_EN[31:0]$102 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$56_EN[31:0]$102 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$56_EN[31:0]$102 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$56_EN[31:0]$102 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$56_EN[31:0]$102 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$56_EN[31:0]$102 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$56_EN[31:0]$102 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$56_EN[31:0]$102 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$56_EN[31:0]$102 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$56_EN[31:0]$102 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$56_EN[31:0]$102 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$56_EN[31:0]$102 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$56_EN[31:0]$102 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$56_EN[31:0]$102 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$56_EN[31:0]$102 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$56_EN[31:0]$102 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$56_EN[31:0]$102 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$56_EN[31:0]$102 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$56_EN[31:0]$102 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$56_EN[31:0]$102 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$56_EN[31:0]$102 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$56_EN[31:0]$102 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$56_EN[31:0]$102 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$56_EN[31:0]$102 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$56_EN[31:0]$102 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$56_EN[31:0]$102 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$56_EN[31:0]$102 [0] }
    Consolidated identical input bits for $mux cell $procmux$358:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$57_EN[31:0]$105
      New ports: A=1'0, B=1'1, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$57_EN[31:0]$105 [0]
      New connections: $0$memwr$\regfile_mem$./rtl/regfile.v:23$57_EN[31:0]$105 [31:1] = { $0$memwr$\regfile_mem$./rtl/regfile.v:23$57_EN[31:0]$105 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$57_EN[31:0]$105 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$57_EN[31:0]$105 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$57_EN[31:0]$105 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$57_EN[31:0]$105 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$57_EN[31:0]$105 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$57_EN[31:0]$105 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$57_EN[31:0]$105 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$57_EN[31:0]$105 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$57_EN[31:0]$105 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$57_EN[31:0]$105 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$57_EN[31:0]$105 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$57_EN[31:0]$105 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$57_EN[31:0]$105 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$57_EN[31:0]$105 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$57_EN[31:0]$105 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$57_EN[31:0]$105 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$57_EN[31:0]$105 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$57_EN[31:0]$105 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$57_EN[31:0]$105 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$57_EN[31:0]$105 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$57_EN[31:0]$105 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$57_EN[31:0]$105 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$57_EN[31:0]$105 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$57_EN[31:0]$105 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$57_EN[31:0]$105 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$57_EN[31:0]$105 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$57_EN[31:0]$105 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$57_EN[31:0]$105 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$57_EN[31:0]$105 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$57_EN[31:0]$105 [0] }
    Consolidated identical input bits for $mux cell $procmux$367:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$58_EN[31:0]$108
      New ports: A=1'0, B=1'1, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$58_EN[31:0]$108 [0]
      New connections: $0$memwr$\regfile_mem$./rtl/regfile.v:23$58_EN[31:0]$108 [31:1] = { $0$memwr$\regfile_mem$./rtl/regfile.v:23$58_EN[31:0]$108 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$58_EN[31:0]$108 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$58_EN[31:0]$108 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$58_EN[31:0]$108 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$58_EN[31:0]$108 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$58_EN[31:0]$108 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$58_EN[31:0]$108 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$58_EN[31:0]$108 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$58_EN[31:0]$108 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$58_EN[31:0]$108 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$58_EN[31:0]$108 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$58_EN[31:0]$108 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$58_EN[31:0]$108 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$58_EN[31:0]$108 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$58_EN[31:0]$108 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$58_EN[31:0]$108 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$58_EN[31:0]$108 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$58_EN[31:0]$108 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$58_EN[31:0]$108 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$58_EN[31:0]$108 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$58_EN[31:0]$108 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$58_EN[31:0]$108 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$58_EN[31:0]$108 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$58_EN[31:0]$108 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$58_EN[31:0]$108 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$58_EN[31:0]$108 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$58_EN[31:0]$108 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$58_EN[31:0]$108 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$58_EN[31:0]$108 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$58_EN[31:0]$108 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$58_EN[31:0]$108 [0] }
    Consolidated identical input bits for $mux cell $procmux$376:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$59_EN[31:0]$111
      New ports: A=1'0, B=1'1, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$59_EN[31:0]$111 [0]
      New connections: $0$memwr$\regfile_mem$./rtl/regfile.v:23$59_EN[31:0]$111 [31:1] = { $0$memwr$\regfile_mem$./rtl/regfile.v:23$59_EN[31:0]$111 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$59_EN[31:0]$111 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$59_EN[31:0]$111 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$59_EN[31:0]$111 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$59_EN[31:0]$111 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$59_EN[31:0]$111 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$59_EN[31:0]$111 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$59_EN[31:0]$111 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$59_EN[31:0]$111 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$59_EN[31:0]$111 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$59_EN[31:0]$111 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$59_EN[31:0]$111 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$59_EN[31:0]$111 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$59_EN[31:0]$111 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$59_EN[31:0]$111 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$59_EN[31:0]$111 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$59_EN[31:0]$111 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$59_EN[31:0]$111 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$59_EN[31:0]$111 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$59_EN[31:0]$111 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$59_EN[31:0]$111 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$59_EN[31:0]$111 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$59_EN[31:0]$111 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$59_EN[31:0]$111 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$59_EN[31:0]$111 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$59_EN[31:0]$111 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$59_EN[31:0]$111 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$59_EN[31:0]$111 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$59_EN[31:0]$111 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$59_EN[31:0]$111 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$59_EN[31:0]$111 [0] }
    Consolidated identical input bits for $mux cell $procmux$385:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$60_EN[31:0]$114
      New ports: A=1'0, B=1'1, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$60_EN[31:0]$114 [0]
      New connections: $0$memwr$\regfile_mem$./rtl/regfile.v:23$60_EN[31:0]$114 [31:1] = { $0$memwr$\regfile_mem$./rtl/regfile.v:23$60_EN[31:0]$114 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$60_EN[31:0]$114 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$60_EN[31:0]$114 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$60_EN[31:0]$114 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$60_EN[31:0]$114 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$60_EN[31:0]$114 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$60_EN[31:0]$114 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$60_EN[31:0]$114 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$60_EN[31:0]$114 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$60_EN[31:0]$114 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$60_EN[31:0]$114 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$60_EN[31:0]$114 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$60_EN[31:0]$114 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$60_EN[31:0]$114 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$60_EN[31:0]$114 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$60_EN[31:0]$114 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$60_EN[31:0]$114 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$60_EN[31:0]$114 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$60_EN[31:0]$114 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$60_EN[31:0]$114 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$60_EN[31:0]$114 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$60_EN[31:0]$114 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$60_EN[31:0]$114 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$60_EN[31:0]$114 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$60_EN[31:0]$114 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$60_EN[31:0]$114 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$60_EN[31:0]$114 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$60_EN[31:0]$114 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$60_EN[31:0]$114 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$60_EN[31:0]$114 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$60_EN[31:0]$114 [0] }
    Consolidated identical input bits for $mux cell $procmux$394:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$61_EN[31:0]$117
      New ports: A=1'0, B=1'1, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$61_EN[31:0]$117 [0]
      New connections: $0$memwr$\regfile_mem$./rtl/regfile.v:23$61_EN[31:0]$117 [31:1] = { $0$memwr$\regfile_mem$./rtl/regfile.v:23$61_EN[31:0]$117 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$61_EN[31:0]$117 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$61_EN[31:0]$117 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$61_EN[31:0]$117 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$61_EN[31:0]$117 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$61_EN[31:0]$117 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$61_EN[31:0]$117 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$61_EN[31:0]$117 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$61_EN[31:0]$117 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$61_EN[31:0]$117 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$61_EN[31:0]$117 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$61_EN[31:0]$117 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$61_EN[31:0]$117 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$61_EN[31:0]$117 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$61_EN[31:0]$117 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$61_EN[31:0]$117 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$61_EN[31:0]$117 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$61_EN[31:0]$117 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$61_EN[31:0]$117 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$61_EN[31:0]$117 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$61_EN[31:0]$117 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$61_EN[31:0]$117 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$61_EN[31:0]$117 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$61_EN[31:0]$117 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$61_EN[31:0]$117 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$61_EN[31:0]$117 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$61_EN[31:0]$117 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$61_EN[31:0]$117 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$61_EN[31:0]$117 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$61_EN[31:0]$117 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$61_EN[31:0]$117 [0] }
    Consolidated identical input bits for $mux cell $procmux$403:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$62_EN[31:0]$120
      New ports: A=1'0, B=1'1, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$62_EN[31:0]$120 [0]
      New connections: $0$memwr$\regfile_mem$./rtl/regfile.v:23$62_EN[31:0]$120 [31:1] = { $0$memwr$\regfile_mem$./rtl/regfile.v:23$62_EN[31:0]$120 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$62_EN[31:0]$120 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$62_EN[31:0]$120 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$62_EN[31:0]$120 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$62_EN[31:0]$120 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$62_EN[31:0]$120 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$62_EN[31:0]$120 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$62_EN[31:0]$120 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$62_EN[31:0]$120 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$62_EN[31:0]$120 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$62_EN[31:0]$120 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$62_EN[31:0]$120 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$62_EN[31:0]$120 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$62_EN[31:0]$120 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$62_EN[31:0]$120 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$62_EN[31:0]$120 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$62_EN[31:0]$120 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$62_EN[31:0]$120 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$62_EN[31:0]$120 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$62_EN[31:0]$120 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$62_EN[31:0]$120 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$62_EN[31:0]$120 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$62_EN[31:0]$120 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$62_EN[31:0]$120 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$62_EN[31:0]$120 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$62_EN[31:0]$120 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$62_EN[31:0]$120 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$62_EN[31:0]$120 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$62_EN[31:0]$120 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$62_EN[31:0]$120 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$62_EN[31:0]$120 [0] }
    Consolidated identical input bits for $mux cell $procmux$412:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$63_EN[31:0]$123
      New ports: A=1'0, B=1'1, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$63_EN[31:0]$123 [0]
      New connections: $0$memwr$\regfile_mem$./rtl/regfile.v:23$63_EN[31:0]$123 [31:1] = { $0$memwr$\regfile_mem$./rtl/regfile.v:23$63_EN[31:0]$123 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$63_EN[31:0]$123 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$63_EN[31:0]$123 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$63_EN[31:0]$123 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$63_EN[31:0]$123 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$63_EN[31:0]$123 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$63_EN[31:0]$123 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$63_EN[31:0]$123 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$63_EN[31:0]$123 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$63_EN[31:0]$123 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$63_EN[31:0]$123 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$63_EN[31:0]$123 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$63_EN[31:0]$123 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$63_EN[31:0]$123 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$63_EN[31:0]$123 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$63_EN[31:0]$123 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$63_EN[31:0]$123 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$63_EN[31:0]$123 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$63_EN[31:0]$123 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$63_EN[31:0]$123 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$63_EN[31:0]$123 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$63_EN[31:0]$123 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$63_EN[31:0]$123 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$63_EN[31:0]$123 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$63_EN[31:0]$123 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$63_EN[31:0]$123 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$63_EN[31:0]$123 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$63_EN[31:0]$123 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$63_EN[31:0]$123 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$63_EN[31:0]$123 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$63_EN[31:0]$123 [0] }
    Consolidated identical input bits for $mux cell $procmux$421:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$64_EN[31:0]$126
      New ports: A=1'0, B=1'1, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$64_EN[31:0]$126 [0]
      New connections: $0$memwr$\regfile_mem$./rtl/regfile.v:23$64_EN[31:0]$126 [31:1] = { $0$memwr$\regfile_mem$./rtl/regfile.v:23$64_EN[31:0]$126 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$64_EN[31:0]$126 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$64_EN[31:0]$126 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$64_EN[31:0]$126 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$64_EN[31:0]$126 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$64_EN[31:0]$126 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$64_EN[31:0]$126 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$64_EN[31:0]$126 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$64_EN[31:0]$126 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$64_EN[31:0]$126 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$64_EN[31:0]$126 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$64_EN[31:0]$126 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$64_EN[31:0]$126 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$64_EN[31:0]$126 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$64_EN[31:0]$126 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$64_EN[31:0]$126 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$64_EN[31:0]$126 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$64_EN[31:0]$126 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$64_EN[31:0]$126 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$64_EN[31:0]$126 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$64_EN[31:0]$126 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$64_EN[31:0]$126 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$64_EN[31:0]$126 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$64_EN[31:0]$126 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$64_EN[31:0]$126 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$64_EN[31:0]$126 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$64_EN[31:0]$126 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$64_EN[31:0]$126 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$64_EN[31:0]$126 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$64_EN[31:0]$126 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$64_EN[31:0]$126 [0] }
    Consolidated identical input bits for $mux cell $procmux$430:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$65_EN[31:0]$129
      New ports: A=1'0, B=1'1, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$65_EN[31:0]$129 [0]
      New connections: $0$memwr$\regfile_mem$./rtl/regfile.v:23$65_EN[31:0]$129 [31:1] = { $0$memwr$\regfile_mem$./rtl/regfile.v:23$65_EN[31:0]$129 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$65_EN[31:0]$129 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$65_EN[31:0]$129 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$65_EN[31:0]$129 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$65_EN[31:0]$129 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$65_EN[31:0]$129 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$65_EN[31:0]$129 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$65_EN[31:0]$129 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$65_EN[31:0]$129 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$65_EN[31:0]$129 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$65_EN[31:0]$129 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$65_EN[31:0]$129 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$65_EN[31:0]$129 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$65_EN[31:0]$129 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$65_EN[31:0]$129 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$65_EN[31:0]$129 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$65_EN[31:0]$129 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$65_EN[31:0]$129 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$65_EN[31:0]$129 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$65_EN[31:0]$129 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$65_EN[31:0]$129 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$65_EN[31:0]$129 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$65_EN[31:0]$129 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$65_EN[31:0]$129 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$65_EN[31:0]$129 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$65_EN[31:0]$129 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$65_EN[31:0]$129 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$65_EN[31:0]$129 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$65_EN[31:0]$129 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$65_EN[31:0]$129 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$65_EN[31:0]$129 [0] }
    Consolidated identical input bits for $mux cell $procmux$439:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$66_EN[31:0]$132
      New ports: A=1'0, B=1'1, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$66_EN[31:0]$132 [0]
      New connections: $0$memwr$\regfile_mem$./rtl/regfile.v:23$66_EN[31:0]$132 [31:1] = { $0$memwr$\regfile_mem$./rtl/regfile.v:23$66_EN[31:0]$132 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$66_EN[31:0]$132 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$66_EN[31:0]$132 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$66_EN[31:0]$132 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$66_EN[31:0]$132 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$66_EN[31:0]$132 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$66_EN[31:0]$132 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$66_EN[31:0]$132 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$66_EN[31:0]$132 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$66_EN[31:0]$132 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$66_EN[31:0]$132 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$66_EN[31:0]$132 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$66_EN[31:0]$132 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$66_EN[31:0]$132 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$66_EN[31:0]$132 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$66_EN[31:0]$132 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$66_EN[31:0]$132 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$66_EN[31:0]$132 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$66_EN[31:0]$132 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$66_EN[31:0]$132 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$66_EN[31:0]$132 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$66_EN[31:0]$132 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$66_EN[31:0]$132 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$66_EN[31:0]$132 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$66_EN[31:0]$132 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$66_EN[31:0]$132 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$66_EN[31:0]$132 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$66_EN[31:0]$132 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$66_EN[31:0]$132 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$66_EN[31:0]$132 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$66_EN[31:0]$132 [0] }
    Consolidated identical input bits for $mux cell $procmux$448:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$67_EN[31:0]$135
      New ports: A=1'0, B=1'1, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$67_EN[31:0]$135 [0]
      New connections: $0$memwr$\regfile_mem$./rtl/regfile.v:23$67_EN[31:0]$135 [31:1] = { $0$memwr$\regfile_mem$./rtl/regfile.v:23$67_EN[31:0]$135 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$67_EN[31:0]$135 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$67_EN[31:0]$135 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$67_EN[31:0]$135 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$67_EN[31:0]$135 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$67_EN[31:0]$135 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$67_EN[31:0]$135 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$67_EN[31:0]$135 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$67_EN[31:0]$135 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$67_EN[31:0]$135 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$67_EN[31:0]$135 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$67_EN[31:0]$135 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$67_EN[31:0]$135 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$67_EN[31:0]$135 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$67_EN[31:0]$135 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$67_EN[31:0]$135 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$67_EN[31:0]$135 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$67_EN[31:0]$135 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$67_EN[31:0]$135 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$67_EN[31:0]$135 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$67_EN[31:0]$135 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$67_EN[31:0]$135 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$67_EN[31:0]$135 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$67_EN[31:0]$135 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$67_EN[31:0]$135 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$67_EN[31:0]$135 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$67_EN[31:0]$135 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$67_EN[31:0]$135 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$67_EN[31:0]$135 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$67_EN[31:0]$135 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$67_EN[31:0]$135 [0] }
    Consolidated identical input bits for $mux cell $procmux$457:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$68_EN[31:0]$138
      New ports: A=1'0, B=1'1, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$68_EN[31:0]$138 [0]
      New connections: $0$memwr$\regfile_mem$./rtl/regfile.v:23$68_EN[31:0]$138 [31:1] = { $0$memwr$\regfile_mem$./rtl/regfile.v:23$68_EN[31:0]$138 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$68_EN[31:0]$138 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$68_EN[31:0]$138 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$68_EN[31:0]$138 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$68_EN[31:0]$138 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$68_EN[31:0]$138 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$68_EN[31:0]$138 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$68_EN[31:0]$138 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$68_EN[31:0]$138 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$68_EN[31:0]$138 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$68_EN[31:0]$138 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$68_EN[31:0]$138 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$68_EN[31:0]$138 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$68_EN[31:0]$138 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$68_EN[31:0]$138 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$68_EN[31:0]$138 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$68_EN[31:0]$138 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$68_EN[31:0]$138 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$68_EN[31:0]$138 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$68_EN[31:0]$138 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$68_EN[31:0]$138 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$68_EN[31:0]$138 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$68_EN[31:0]$138 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$68_EN[31:0]$138 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$68_EN[31:0]$138 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$68_EN[31:0]$138 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$68_EN[31:0]$138 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$68_EN[31:0]$138 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$68_EN[31:0]$138 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$68_EN[31:0]$138 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$68_EN[31:0]$138 [0] }
    Consolidated identical input bits for $mux cell $procmux$466:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$69_EN[31:0]$141
      New ports: A=1'0, B=1'1, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$69_EN[31:0]$141 [0]
      New connections: $0$memwr$\regfile_mem$./rtl/regfile.v:23$69_EN[31:0]$141 [31:1] = { $0$memwr$\regfile_mem$./rtl/regfile.v:23$69_EN[31:0]$141 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$69_EN[31:0]$141 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$69_EN[31:0]$141 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$69_EN[31:0]$141 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$69_EN[31:0]$141 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$69_EN[31:0]$141 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$69_EN[31:0]$141 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$69_EN[31:0]$141 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$69_EN[31:0]$141 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$69_EN[31:0]$141 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$69_EN[31:0]$141 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$69_EN[31:0]$141 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$69_EN[31:0]$141 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$69_EN[31:0]$141 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$69_EN[31:0]$141 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$69_EN[31:0]$141 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$69_EN[31:0]$141 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$69_EN[31:0]$141 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$69_EN[31:0]$141 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$69_EN[31:0]$141 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$69_EN[31:0]$141 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$69_EN[31:0]$141 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$69_EN[31:0]$141 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$69_EN[31:0]$141 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$69_EN[31:0]$141 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$69_EN[31:0]$141 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$69_EN[31:0]$141 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$69_EN[31:0]$141 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$69_EN[31:0]$141 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$69_EN[31:0]$141 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$69_EN[31:0]$141 [0] }
    Consolidated identical input bits for $mux cell $procmux$475:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$70_EN[31:0]$144
      New ports: A=1'0, B=1'1, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$70_EN[31:0]$144 [0]
      New connections: $0$memwr$\regfile_mem$./rtl/regfile.v:23$70_EN[31:0]$144 [31:1] = { $0$memwr$\regfile_mem$./rtl/regfile.v:23$70_EN[31:0]$144 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$70_EN[31:0]$144 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$70_EN[31:0]$144 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$70_EN[31:0]$144 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$70_EN[31:0]$144 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$70_EN[31:0]$144 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$70_EN[31:0]$144 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$70_EN[31:0]$144 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$70_EN[31:0]$144 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$70_EN[31:0]$144 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$70_EN[31:0]$144 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$70_EN[31:0]$144 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$70_EN[31:0]$144 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$70_EN[31:0]$144 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$70_EN[31:0]$144 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$70_EN[31:0]$144 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$70_EN[31:0]$144 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$70_EN[31:0]$144 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$70_EN[31:0]$144 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$70_EN[31:0]$144 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$70_EN[31:0]$144 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$70_EN[31:0]$144 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$70_EN[31:0]$144 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$70_EN[31:0]$144 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$70_EN[31:0]$144 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$70_EN[31:0]$144 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$70_EN[31:0]$144 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$70_EN[31:0]$144 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$70_EN[31:0]$144 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$70_EN[31:0]$144 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$70_EN[31:0]$144 [0] }
    Consolidated identical input bits for $mux cell $procmux$484:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$71_EN[31:0]$147
      New ports: A=1'0, B=1'1, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$71_EN[31:0]$147 [0]
      New connections: $0$memwr$\regfile_mem$./rtl/regfile.v:23$71_EN[31:0]$147 [31:1] = { $0$memwr$\regfile_mem$./rtl/regfile.v:23$71_EN[31:0]$147 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$71_EN[31:0]$147 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$71_EN[31:0]$147 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$71_EN[31:0]$147 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$71_EN[31:0]$147 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$71_EN[31:0]$147 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$71_EN[31:0]$147 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$71_EN[31:0]$147 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$71_EN[31:0]$147 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$71_EN[31:0]$147 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$71_EN[31:0]$147 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$71_EN[31:0]$147 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$71_EN[31:0]$147 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$71_EN[31:0]$147 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$71_EN[31:0]$147 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$71_EN[31:0]$147 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$71_EN[31:0]$147 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$71_EN[31:0]$147 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$71_EN[31:0]$147 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$71_EN[31:0]$147 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$71_EN[31:0]$147 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$71_EN[31:0]$147 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$71_EN[31:0]$147 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$71_EN[31:0]$147 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$71_EN[31:0]$147 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$71_EN[31:0]$147 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$71_EN[31:0]$147 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$71_EN[31:0]$147 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$71_EN[31:0]$147 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$71_EN[31:0]$147 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$71_EN[31:0]$147 [0] }
    Consolidated identical input bits for $mux cell $procmux$493:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$72_EN[31:0]$150
      New ports: A=1'0, B=1'1, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$72_EN[31:0]$150 [0]
      New connections: $0$memwr$\regfile_mem$./rtl/regfile.v:23$72_EN[31:0]$150 [31:1] = { $0$memwr$\regfile_mem$./rtl/regfile.v:23$72_EN[31:0]$150 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$72_EN[31:0]$150 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$72_EN[31:0]$150 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$72_EN[31:0]$150 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$72_EN[31:0]$150 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$72_EN[31:0]$150 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$72_EN[31:0]$150 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$72_EN[31:0]$150 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$72_EN[31:0]$150 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$72_EN[31:0]$150 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$72_EN[31:0]$150 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$72_EN[31:0]$150 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$72_EN[31:0]$150 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$72_EN[31:0]$150 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$72_EN[31:0]$150 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$72_EN[31:0]$150 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$72_EN[31:0]$150 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$72_EN[31:0]$150 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$72_EN[31:0]$150 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$72_EN[31:0]$150 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$72_EN[31:0]$150 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$72_EN[31:0]$150 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$72_EN[31:0]$150 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$72_EN[31:0]$150 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$72_EN[31:0]$150 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$72_EN[31:0]$150 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$72_EN[31:0]$150 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$72_EN[31:0]$150 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$72_EN[31:0]$150 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$72_EN[31:0]$150 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$72_EN[31:0]$150 [0] }
    Consolidated identical input bits for $mux cell $procmux$502:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$73_EN[31:0]$153
      New ports: A=1'0, B=1'1, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$73_EN[31:0]$153 [0]
      New connections: $0$memwr$\regfile_mem$./rtl/regfile.v:23$73_EN[31:0]$153 [31:1] = { $0$memwr$\regfile_mem$./rtl/regfile.v:23$73_EN[31:0]$153 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$73_EN[31:0]$153 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$73_EN[31:0]$153 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$73_EN[31:0]$153 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$73_EN[31:0]$153 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$73_EN[31:0]$153 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$73_EN[31:0]$153 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$73_EN[31:0]$153 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$73_EN[31:0]$153 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$73_EN[31:0]$153 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$73_EN[31:0]$153 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$73_EN[31:0]$153 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$73_EN[31:0]$153 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$73_EN[31:0]$153 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$73_EN[31:0]$153 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$73_EN[31:0]$153 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$73_EN[31:0]$153 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$73_EN[31:0]$153 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$73_EN[31:0]$153 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$73_EN[31:0]$153 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$73_EN[31:0]$153 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$73_EN[31:0]$153 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$73_EN[31:0]$153 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$73_EN[31:0]$153 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$73_EN[31:0]$153 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$73_EN[31:0]$153 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$73_EN[31:0]$153 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$73_EN[31:0]$153 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$73_EN[31:0]$153 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$73_EN[31:0]$153 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$73_EN[31:0]$153 [0] }
    Consolidated identical input bits for $mux cell $procmux$511:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$74_EN[31:0]$156
      New ports: A=1'0, B=1'1, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$74_EN[31:0]$156 [0]
      New connections: $0$memwr$\regfile_mem$./rtl/regfile.v:23$74_EN[31:0]$156 [31:1] = { $0$memwr$\regfile_mem$./rtl/regfile.v:23$74_EN[31:0]$156 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$74_EN[31:0]$156 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$74_EN[31:0]$156 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$74_EN[31:0]$156 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$74_EN[31:0]$156 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$74_EN[31:0]$156 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$74_EN[31:0]$156 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$74_EN[31:0]$156 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$74_EN[31:0]$156 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$74_EN[31:0]$156 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$74_EN[31:0]$156 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$74_EN[31:0]$156 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$74_EN[31:0]$156 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$74_EN[31:0]$156 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$74_EN[31:0]$156 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$74_EN[31:0]$156 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$74_EN[31:0]$156 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$74_EN[31:0]$156 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$74_EN[31:0]$156 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$74_EN[31:0]$156 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$74_EN[31:0]$156 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$74_EN[31:0]$156 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$74_EN[31:0]$156 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$74_EN[31:0]$156 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$74_EN[31:0]$156 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$74_EN[31:0]$156 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$74_EN[31:0]$156 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$74_EN[31:0]$156 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$74_EN[31:0]$156 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$74_EN[31:0]$156 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$74_EN[31:0]$156 [0] }
    Consolidated identical input bits for $mux cell $procmux$520:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$75_EN[31:0]$159
      New ports: A=1'0, B=1'1, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$75_EN[31:0]$159 [0]
      New connections: $0$memwr$\regfile_mem$./rtl/regfile.v:23$75_EN[31:0]$159 [31:1] = { $0$memwr$\regfile_mem$./rtl/regfile.v:23$75_EN[31:0]$159 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$75_EN[31:0]$159 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$75_EN[31:0]$159 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$75_EN[31:0]$159 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$75_EN[31:0]$159 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$75_EN[31:0]$159 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$75_EN[31:0]$159 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$75_EN[31:0]$159 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$75_EN[31:0]$159 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$75_EN[31:0]$159 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$75_EN[31:0]$159 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$75_EN[31:0]$159 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$75_EN[31:0]$159 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$75_EN[31:0]$159 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$75_EN[31:0]$159 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$75_EN[31:0]$159 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$75_EN[31:0]$159 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$75_EN[31:0]$159 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$75_EN[31:0]$159 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$75_EN[31:0]$159 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$75_EN[31:0]$159 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$75_EN[31:0]$159 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$75_EN[31:0]$159 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$75_EN[31:0]$159 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$75_EN[31:0]$159 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$75_EN[31:0]$159 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$75_EN[31:0]$159 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$75_EN[31:0]$159 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$75_EN[31:0]$159 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$75_EN[31:0]$159 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$75_EN[31:0]$159 [0] }
    Consolidated identical input bits for $mux cell $procmux$529:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$76_EN[31:0]$162
      New ports: A=1'0, B=1'1, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$76_EN[31:0]$162 [0]
      New connections: $0$memwr$\regfile_mem$./rtl/regfile.v:23$76_EN[31:0]$162 [31:1] = { $0$memwr$\regfile_mem$./rtl/regfile.v:23$76_EN[31:0]$162 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$76_EN[31:0]$162 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$76_EN[31:0]$162 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$76_EN[31:0]$162 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$76_EN[31:0]$162 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$76_EN[31:0]$162 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$76_EN[31:0]$162 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$76_EN[31:0]$162 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$76_EN[31:0]$162 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$76_EN[31:0]$162 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$76_EN[31:0]$162 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$76_EN[31:0]$162 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$76_EN[31:0]$162 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$76_EN[31:0]$162 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$76_EN[31:0]$162 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$76_EN[31:0]$162 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$76_EN[31:0]$162 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$76_EN[31:0]$162 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$76_EN[31:0]$162 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$76_EN[31:0]$162 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$76_EN[31:0]$162 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$76_EN[31:0]$162 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$76_EN[31:0]$162 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$76_EN[31:0]$162 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$76_EN[31:0]$162 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$76_EN[31:0]$162 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$76_EN[31:0]$162 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$76_EN[31:0]$162 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$76_EN[31:0]$162 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$76_EN[31:0]$162 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$76_EN[31:0]$162 [0] }
    Consolidated identical input bits for $mux cell $procmux$538:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$77_EN[31:0]$165
      New ports: A=1'0, B=1'1, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$77_EN[31:0]$165 [0]
      New connections: $0$memwr$\regfile_mem$./rtl/regfile.v:23$77_EN[31:0]$165 [31:1] = { $0$memwr$\regfile_mem$./rtl/regfile.v:23$77_EN[31:0]$165 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$77_EN[31:0]$165 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$77_EN[31:0]$165 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$77_EN[31:0]$165 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$77_EN[31:0]$165 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$77_EN[31:0]$165 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$77_EN[31:0]$165 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$77_EN[31:0]$165 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$77_EN[31:0]$165 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$77_EN[31:0]$165 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$77_EN[31:0]$165 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$77_EN[31:0]$165 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$77_EN[31:0]$165 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$77_EN[31:0]$165 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$77_EN[31:0]$165 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$77_EN[31:0]$165 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$77_EN[31:0]$165 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$77_EN[31:0]$165 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$77_EN[31:0]$165 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$77_EN[31:0]$165 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$77_EN[31:0]$165 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$77_EN[31:0]$165 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$77_EN[31:0]$165 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$77_EN[31:0]$165 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$77_EN[31:0]$165 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$77_EN[31:0]$165 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$77_EN[31:0]$165 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$77_EN[31:0]$165 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$77_EN[31:0]$165 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$77_EN[31:0]$165 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$77_EN[31:0]$165 [0] }
    Consolidated identical input bits for $mux cell $procmux$547:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$78_EN[31:0]$168
      New ports: A=1'0, B=1'1, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$78_EN[31:0]$168 [0]
      New connections: $0$memwr$\regfile_mem$./rtl/regfile.v:23$78_EN[31:0]$168 [31:1] = { $0$memwr$\regfile_mem$./rtl/regfile.v:23$78_EN[31:0]$168 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$78_EN[31:0]$168 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$78_EN[31:0]$168 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$78_EN[31:0]$168 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$78_EN[31:0]$168 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$78_EN[31:0]$168 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$78_EN[31:0]$168 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$78_EN[31:0]$168 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$78_EN[31:0]$168 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$78_EN[31:0]$168 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$78_EN[31:0]$168 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$78_EN[31:0]$168 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$78_EN[31:0]$168 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$78_EN[31:0]$168 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$78_EN[31:0]$168 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$78_EN[31:0]$168 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$78_EN[31:0]$168 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$78_EN[31:0]$168 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$78_EN[31:0]$168 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$78_EN[31:0]$168 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$78_EN[31:0]$168 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$78_EN[31:0]$168 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$78_EN[31:0]$168 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$78_EN[31:0]$168 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$78_EN[31:0]$168 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$78_EN[31:0]$168 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$78_EN[31:0]$168 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$78_EN[31:0]$168 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$78_EN[31:0]$168 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$78_EN[31:0]$168 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$78_EN[31:0]$168 [0] }
    Consolidated identical input bits for $mux cell $procmux$556:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$79_EN[31:0]$171
      New ports: A=1'0, B=1'1, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$79_EN[31:0]$171 [0]
      New connections: $0$memwr$\regfile_mem$./rtl/regfile.v:23$79_EN[31:0]$171 [31:1] = { $0$memwr$\regfile_mem$./rtl/regfile.v:23$79_EN[31:0]$171 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$79_EN[31:0]$171 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$79_EN[31:0]$171 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$79_EN[31:0]$171 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$79_EN[31:0]$171 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$79_EN[31:0]$171 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$79_EN[31:0]$171 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$79_EN[31:0]$171 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$79_EN[31:0]$171 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$79_EN[31:0]$171 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$79_EN[31:0]$171 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$79_EN[31:0]$171 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$79_EN[31:0]$171 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$79_EN[31:0]$171 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$79_EN[31:0]$171 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$79_EN[31:0]$171 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$79_EN[31:0]$171 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$79_EN[31:0]$171 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$79_EN[31:0]$171 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$79_EN[31:0]$171 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$79_EN[31:0]$171 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$79_EN[31:0]$171 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$79_EN[31:0]$171 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$79_EN[31:0]$171 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$79_EN[31:0]$171 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$79_EN[31:0]$171 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$79_EN[31:0]$171 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$79_EN[31:0]$171 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$79_EN[31:0]$171 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$79_EN[31:0]$171 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$79_EN[31:0]$171 [0] }
    Consolidated identical input bits for $mux cell $procmux$565:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$80_EN[31:0]$174
      New ports: A=1'0, B=1'1, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$80_EN[31:0]$174 [0]
      New connections: $0$memwr$\regfile_mem$./rtl/regfile.v:23$80_EN[31:0]$174 [31:1] = { $0$memwr$\regfile_mem$./rtl/regfile.v:23$80_EN[31:0]$174 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$80_EN[31:0]$174 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$80_EN[31:0]$174 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$80_EN[31:0]$174 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$80_EN[31:0]$174 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$80_EN[31:0]$174 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$80_EN[31:0]$174 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$80_EN[31:0]$174 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$80_EN[31:0]$174 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$80_EN[31:0]$174 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$80_EN[31:0]$174 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$80_EN[31:0]$174 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$80_EN[31:0]$174 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$80_EN[31:0]$174 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$80_EN[31:0]$174 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$80_EN[31:0]$174 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$80_EN[31:0]$174 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$80_EN[31:0]$174 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$80_EN[31:0]$174 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$80_EN[31:0]$174 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$80_EN[31:0]$174 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$80_EN[31:0]$174 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$80_EN[31:0]$174 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$80_EN[31:0]$174 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$80_EN[31:0]$174 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$80_EN[31:0]$174 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$80_EN[31:0]$174 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$80_EN[31:0]$174 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$80_EN[31:0]$174 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$80_EN[31:0]$174 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$80_EN[31:0]$174 [0] }
    Consolidated identical input bits for $mux cell $procmux$574:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$81_EN[31:0]$177
      New ports: A=1'0, B=1'1, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$81_EN[31:0]$177 [0]
      New connections: $0$memwr$\regfile_mem$./rtl/regfile.v:23$81_EN[31:0]$177 [31:1] = { $0$memwr$\regfile_mem$./rtl/regfile.v:23$81_EN[31:0]$177 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$81_EN[31:0]$177 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$81_EN[31:0]$177 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$81_EN[31:0]$177 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$81_EN[31:0]$177 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$81_EN[31:0]$177 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$81_EN[31:0]$177 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$81_EN[31:0]$177 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$81_EN[31:0]$177 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$81_EN[31:0]$177 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$81_EN[31:0]$177 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$81_EN[31:0]$177 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$81_EN[31:0]$177 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$81_EN[31:0]$177 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$81_EN[31:0]$177 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$81_EN[31:0]$177 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$81_EN[31:0]$177 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$81_EN[31:0]$177 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$81_EN[31:0]$177 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$81_EN[31:0]$177 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$81_EN[31:0]$177 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$81_EN[31:0]$177 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$81_EN[31:0]$177 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$81_EN[31:0]$177 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$81_EN[31:0]$177 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$81_EN[31:0]$177 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$81_EN[31:0]$177 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$81_EN[31:0]$177 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$81_EN[31:0]$177 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$81_EN[31:0]$177 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$81_EN[31:0]$177 [0] }
    Consolidated identical input bits for $mux cell $procmux$583:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$82_EN[31:0]$180
      New ports: A=1'0, B=1'1, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:23$82_EN[31:0]$180 [0]
      New connections: $0$memwr$\regfile_mem$./rtl/regfile.v:23$82_EN[31:0]$180 [31:1] = { $0$memwr$\regfile_mem$./rtl/regfile.v:23$82_EN[31:0]$180 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$82_EN[31:0]$180 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$82_EN[31:0]$180 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$82_EN[31:0]$180 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$82_EN[31:0]$180 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$82_EN[31:0]$180 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$82_EN[31:0]$180 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$82_EN[31:0]$180 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$82_EN[31:0]$180 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$82_EN[31:0]$180 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$82_EN[31:0]$180 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$82_EN[31:0]$180 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$82_EN[31:0]$180 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$82_EN[31:0]$180 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$82_EN[31:0]$180 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$82_EN[31:0]$180 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$82_EN[31:0]$180 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$82_EN[31:0]$180 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$82_EN[31:0]$180 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$82_EN[31:0]$180 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$82_EN[31:0]$180 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$82_EN[31:0]$180 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$82_EN[31:0]$180 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$82_EN[31:0]$180 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$82_EN[31:0]$180 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$82_EN[31:0]$180 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$82_EN[31:0]$180 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$82_EN[31:0]$180 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$82_EN[31:0]$180 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$82_EN[31:0]$180 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:23$82_EN[31:0]$180 [0] }
    Consolidated identical input bits for $mux cell $procmux$591:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$procmux$591_Y
      New ports: A=1'0, B=1'1, Y=$procmux$591_Y [0]
      New connections: $procmux$591_Y [31:1] = { $procmux$591_Y [0] $procmux$591_Y [0] $procmux$591_Y [0] $procmux$591_Y [0] $procmux$591_Y [0] $procmux$591_Y [0] $procmux$591_Y [0] $procmux$591_Y [0] $procmux$591_Y [0] $procmux$591_Y [0] $procmux$591_Y [0] $procmux$591_Y [0] $procmux$591_Y [0] $procmux$591_Y [0] $procmux$591_Y [0] $procmux$591_Y [0] $procmux$591_Y [0] $procmux$591_Y [0] $procmux$591_Y [0] $procmux$591_Y [0] $procmux$591_Y [0] $procmux$591_Y [0] $procmux$591_Y [0] $procmux$591_Y [0] $procmux$591_Y [0] $procmux$591_Y [0] $procmux$591_Y [0] $procmux$591_Y [0] $procmux$591_Y [0] $procmux$591_Y [0] $procmux$591_Y [0] }
  Optimizing cells in module \regfile.
    Consolidated identical input bits for $mux cell $procmux$594:
      Old ports: A=$procmux$591_Y, B=0, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN[31:0]$183
      New ports: A=$procmux$591_Y [0], B=1'0, Y=$0$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN[31:0]$183 [0]
      New connections: $0$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN[31:0]$183 [31:1] = { $0$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN[31:0]$183 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN[31:0]$183 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN[31:0]$183 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN[31:0]$183 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN[31:0]$183 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN[31:0]$183 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN[31:0]$183 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN[31:0]$183 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN[31:0]$183 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN[31:0]$183 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN[31:0]$183 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN[31:0]$183 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN[31:0]$183 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN[31:0]$183 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN[31:0]$183 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN[31:0]$183 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN[31:0]$183 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN[31:0]$183 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN[31:0]$183 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN[31:0]$183 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN[31:0]$183 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN[31:0]$183 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN[31:0]$183 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN[31:0]$183 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN[31:0]$183 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN[31:0]$183 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN[31:0]$183 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN[31:0]$183 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN[31:0]$183 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN[31:0]$183 [0] $0$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN[31:0]$183 [0] }
  Optimizing cells in module \regfile.
  Optimizing cells in module \register.
  Optimizing cells in module \shiftLeft2.
  Optimizing cells in module \signExtend.
Performed a total of 49 changes.

14.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\mux2to1\N=32'.
Finding identical cells in module `$paramod\mux2to1\N=5'.
Finding identical cells in module `\alu'.
Finding identical cells in module `\aluControl'.
Finding identical cells in module `\control'.
<suppressed ~3 debug messages>
Finding identical cells in module `\datapath'.
Finding identical cells in module `\mips'.
Finding identical cells in module `\mux4to1'.
Finding identical cells in module `\nextPCLogic'.
Finding identical cells in module `\regfile'.
<suppressed ~378 debug messages>
Finding identical cells in module `\register'.
Finding identical cells in module `\shiftLeft2'.
Finding identical cells in module `\signExtend'.
Removed a total of 127 cells.

14.6.6. Executing OPT_RMDFF pass (remove dff with constant values).

14.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux2to1\N=32..
Finding unused cells or wires in module $paramod\mux2to1\N=5..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \aluControl..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \datapath..
Finding unused cells or wires in module \mips..
Finding unused cells or wires in module \mux4to1..
Finding unused cells or wires in module \nextPCLogic..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \register..
Finding unused cells or wires in module \shiftLeft2..
Finding unused cells or wires in module \signExtend..
Removed 0 unused cells and 521 unused wires.
<suppressed ~3 debug messages>

14.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2to1\N=32.
Optimizing module $paramod\mux2to1\N=5.
Optimizing module alu.
Optimizing module aluControl.
Optimizing module control.
Optimizing module datapath.
Optimizing module mips.
Optimizing module mux4to1.
Optimizing module nextPCLogic.
Optimizing module regfile.
Optimizing module register.
Optimizing module shiftLeft2.
Optimizing module signExtend.

14.6.9. Rerunning OPT passes. (Maybe there is more to do..)

14.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\mux2to1\N=32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux2to1\N=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \aluControl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \control..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \datapath..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mips..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mux4to1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \nextPCLogic..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \regfile..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \register..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \shiftLeft2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \signExtend..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

14.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\mux2to1\N=32.
  Optimizing cells in module $paramod\mux2to1\N=5.
  Optimizing cells in module \alu.
  Optimizing cells in module \aluControl.
  Optimizing cells in module \control.
  Optimizing cells in module \datapath.
  Optimizing cells in module \mips.
  Optimizing cells in module \mux4to1.
  Optimizing cells in module \nextPCLogic.
  Optimizing cells in module \regfile.
  Optimizing cells in module \register.
  Optimizing cells in module \shiftLeft2.
  Optimizing cells in module \signExtend.
Performed a total of 0 changes.

14.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\mux2to1\N=32'.
Finding identical cells in module `$paramod\mux2to1\N=5'.
Finding identical cells in module `\alu'.
Finding identical cells in module `\aluControl'.
Finding identical cells in module `\control'.
Finding identical cells in module `\datapath'.
Finding identical cells in module `\mips'.
Finding identical cells in module `\mux4to1'.
Finding identical cells in module `\nextPCLogic'.
Finding identical cells in module `\regfile'.
Finding identical cells in module `\register'.
Finding identical cells in module `\shiftLeft2'.
Finding identical cells in module `\signExtend'.
Removed a total of 0 cells.

14.6.13. Executing OPT_RMDFF pass (remove dff with constant values).

14.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux2to1\N=32..
Finding unused cells or wires in module $paramod\mux2to1\N=5..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \aluControl..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \datapath..
Finding unused cells or wires in module \mips..
Finding unused cells or wires in module \mux4to1..
Finding unused cells or wires in module \nextPCLogic..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \register..
Finding unused cells or wires in module \shiftLeft2..
Finding unused cells or wires in module \signExtend..
Removed 0 unused cells and 521 unused wires.

14.6.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2to1\N=32.
Optimizing module $paramod\mux2to1\N=5.
Optimizing module alu.
Optimizing module aluControl.
Optimizing module control.
Optimizing module datapath.
Optimizing module mips.
Optimizing module mux4to1.
Optimizing module nextPCLogic.
Optimizing module regfile.
Optimizing module register.
Optimizing module shiftLeft2.
Optimizing module signExtend.

14.6.16. Finished OPT passes. (There is nothing left to do.)

14.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 33) from port A of cell alu.$add$./rtl/alu.v:12$224 ($add).
Removed top 1 bits (of 33) from port B of cell alu.$add$./rtl/alu.v:12$224 ($add).
Removed top 1 bits (of 4) from port B of cell alu.$procmux$289_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell alu.$procmux$292_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell alu.$procmux$293_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell aluControl.$procmux$622_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell control.$eq$./rtl/control.v:112$7 ($eq).
Removed top 3 bits (of 6) from port B of cell control.$eq$./rtl/control.v:114$8 ($eq).
Removed top 2 bits (of 6) from port B of cell control.$eq$./rtl/control.v:116$9 ($eq).
Removed top 4 bits (of 6) from port B of cell control.$eq$./rtl/control.v:118$10 ($eq).
Removed top 1 bits (of 4) from mux cell control.$procmux$635 ($mux).
Removed top 2 bits (of 4) from port B of cell control.$procmux$641_CMP0 ($eq).
Removed top 1 bits (of 4) from mux cell control.$procmux$654 ($mux).
Removed top 3 bits (of 4) from port B of cell control.$procmux$689_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell control.$procmux$811_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell control.$procmux$812_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell control.$procmux$829_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell control.$procmux$873_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell control.$procmux$882_CMP0 ($eq).
Removed top 1 bits (of 4) from wire control.$8\nextState[3:0].
Removed top 1 bits (of 2) from port B of cell mux4to1.$procmux$301_CMP0 ($eq).
Removed top 27 address bits (of 32) from memory write port regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$190 (regfile_mem).
Removed top 27 address bits (of 32) from memory write port regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$191 (regfile_mem).
Removed top 27 address bits (of 32) from memory write port regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$192 (regfile_mem).
Removed top 27 address bits (of 32) from memory write port regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$193 (regfile_mem).
Removed top 27 address bits (of 32) from memory write port regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$194 (regfile_mem).
Removed top 27 address bits (of 32) from memory write port regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$195 (regfile_mem).
Removed top 27 address bits (of 32) from memory write port regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$196 (regfile_mem).
Removed top 27 address bits (of 32) from memory write port regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$197 (regfile_mem).
Removed top 27 address bits (of 32) from memory write port regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$198 (regfile_mem).
Removed top 27 address bits (of 32) from memory write port regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$199 (regfile_mem).
Removed top 27 address bits (of 32) from memory write port regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$200 (regfile_mem).
Removed top 27 address bits (of 32) from memory write port regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$201 (regfile_mem).
Removed top 27 address bits (of 32) from memory write port regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$202 (regfile_mem).
Removed top 27 address bits (of 32) from memory write port regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$203 (regfile_mem).
Removed top 27 address bits (of 32) from memory write port regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$204 (regfile_mem).
Removed top 27 address bits (of 32) from memory write port regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$205 (regfile_mem).
Removed top 27 address bits (of 32) from memory write port regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$206 (regfile_mem).
Removed top 27 address bits (of 32) from memory write port regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$207 (regfile_mem).
Removed top 27 address bits (of 32) from memory write port regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$208 (regfile_mem).
Removed top 27 address bits (of 32) from memory write port regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$209 (regfile_mem).
Removed top 27 address bits (of 32) from memory write port regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$210 (regfile_mem).
Removed top 27 address bits (of 32) from memory write port regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$211 (regfile_mem).
Removed top 27 address bits (of 32) from memory write port regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$212 (regfile_mem).
Removed top 27 address bits (of 32) from memory write port regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$213 (regfile_mem).
Removed top 27 address bits (of 32) from memory write port regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$214 (regfile_mem).
Removed top 27 address bits (of 32) from memory write port regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$215 (regfile_mem).
Removed top 27 address bits (of 32) from memory write port regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$216 (regfile_mem).
Removed top 27 address bits (of 32) from memory write port regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$217 (regfile_mem).
Removed top 27 address bits (of 32) from memory write port regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$218 (regfile_mem).
Removed top 27 address bits (of 32) from memory write port regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$219 (regfile_mem).
Removed top 27 address bits (of 32) from memory write port regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$220 (regfile_mem).
Removed top 27 address bits (of 32) from memory write port regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$221 (regfile_mem).
Removed cell regfile.$procmux$307 ($mux).
Removed cell regfile.$procmux$319 ($mux).
Removed cell regfile.$procmux$328 ($mux).
Removed cell regfile.$procmux$337 ($mux).
Removed cell regfile.$procmux$346 ($mux).
Removed cell regfile.$procmux$355 ($mux).
Removed cell regfile.$procmux$364 ($mux).
Removed cell regfile.$procmux$373 ($mux).
Removed cell regfile.$procmux$382 ($mux).
Removed cell regfile.$procmux$391 ($mux).
Removed cell regfile.$procmux$400 ($mux).
Removed cell regfile.$procmux$409 ($mux).
Removed cell regfile.$procmux$418 ($mux).
Removed cell regfile.$procmux$427 ($mux).
Removed cell regfile.$procmux$436 ($mux).
Removed cell regfile.$procmux$445 ($mux).
Removed cell regfile.$procmux$454 ($mux).
Removed cell regfile.$procmux$463 ($mux).
Removed cell regfile.$procmux$472 ($mux).
Removed cell regfile.$procmux$481 ($mux).
Removed cell regfile.$procmux$490 ($mux).
Removed cell regfile.$procmux$499 ($mux).
Removed cell regfile.$procmux$508 ($mux).
Removed cell regfile.$procmux$517 ($mux).
Removed cell regfile.$procmux$526 ($mux).
Removed cell regfile.$procmux$535 ($mux).
Removed cell regfile.$procmux$544 ($mux).
Removed cell regfile.$procmux$553 ($mux).
Removed cell regfile.$procmux$562 ($mux).
Removed cell regfile.$procmux$571 ($mux).
Removed cell regfile.$procmux$580 ($mux).
Removed cell regfile.$procmux$589 ($mux).
Removed cell regfile.$procmux$596 ($mux).
Removed cell regfile.$procmux$599 ($mux).
Removed cell regfile.$procmux$601 ($mux).
Removed cell regfile.$procmux$604 ($mux).
Removed top 31 bits (of 32) from FF cell regfile.$procdff$943 ($dff).
Removed top 30 bits (of 32) from FF cell regfile.$procdff$946 ($dff).
Removed top 30 bits (of 32) from FF cell regfile.$procdff$949 ($dff).
Removed top 29 bits (of 32) from FF cell regfile.$procdff$952 ($dff).
Removed top 29 bits (of 32) from FF cell regfile.$procdff$955 ($dff).
Removed top 29 bits (of 32) from FF cell regfile.$procdff$958 ($dff).
Removed top 29 bits (of 32) from FF cell regfile.$procdff$961 ($dff).
Removed top 28 bits (of 32) from FF cell regfile.$procdff$964 ($dff).
Removed top 28 bits (of 32) from FF cell regfile.$procdff$967 ($dff).
Removed top 28 bits (of 32) from FF cell regfile.$procdff$970 ($dff).
Removed top 28 bits (of 32) from FF cell regfile.$procdff$973 ($dff).
Removed top 28 bits (of 32) from FF cell regfile.$procdff$976 ($dff).
Removed top 28 bits (of 32) from FF cell regfile.$procdff$979 ($dff).
Removed top 28 bits (of 32) from FF cell regfile.$procdff$982 ($dff).
Removed top 28 bits (of 32) from FF cell regfile.$procdff$985 ($dff).
Removed top 27 bits (of 32) from FF cell regfile.$procdff$988 ($dff).
Removed top 27 bits (of 32) from FF cell regfile.$procdff$991 ($dff).
Removed top 27 bits (of 32) from FF cell regfile.$procdff$994 ($dff).
Removed top 27 bits (of 32) from FF cell regfile.$procdff$997 ($dff).
Removed top 27 bits (of 32) from FF cell regfile.$procdff$1000 ($dff).
Removed top 27 bits (of 32) from FF cell regfile.$procdff$1003 ($dff).
Removed top 27 bits (of 32) from FF cell regfile.$procdff$1006 ($dff).
Removed top 27 bits (of 32) from FF cell regfile.$procdff$1009 ($dff).
Removed top 27 bits (of 32) from FF cell regfile.$procdff$1012 ($dff).
Removed top 27 bits (of 32) from FF cell regfile.$procdff$1015 ($dff).
Removed top 27 bits (of 32) from FF cell regfile.$procdff$1018 ($dff).
Removed top 27 bits (of 32) from FF cell regfile.$procdff$1021 ($dff).
Removed top 27 bits (of 32) from FF cell regfile.$procdff$1024 ($dff).
Removed top 31 bits (of 32) from FF cell regfile.$procdff$1026 ($dff).
Removed top 27 bits (of 32) from FF cell regfile.$procdff$1027 ($dff).
Removed cell regfile.$procdff$1028 ($dff).
Removed top 27 bits (of 32) from FF cell regfile.$procdff$1030 ($dff).
Removed top 27 bits (of 32) from FF cell regfile.$procdff$1033 ($dff).
Removed top 31 bits (of 32) from FF cell regfile.$procdff$1038 ($dff).
Removed top 1 bits (of 2) from FF cell regfile.$procdff$949 ($dff).
Removed top 1 bits (of 3) from FF cell regfile.$procdff$958 ($dff).
Removed top 2 bits (of 3) from FF cell regfile.$procdff$961 ($dff).
Removed top 1 bits (of 4) from FF cell regfile.$procdff$976 ($dff).
Removed top 1 bits (of 4) from FF cell regfile.$procdff$979 ($dff).
Removed top 2 bits (of 4) from FF cell regfile.$procdff$982 ($dff).
Removed top 3 bits (of 4) from FF cell regfile.$procdff$985 ($dff).
Removed top 1 bits (of 5) from FF cell regfile.$procdff$1012 ($dff).
Removed top 1 bits (of 5) from FF cell regfile.$procdff$1015 ($dff).
Removed top 1 bits (of 5) from FF cell regfile.$procdff$1018 ($dff).
Removed top 1 bits (of 5) from FF cell regfile.$procdff$1021 ($dff).
Removed top 2 bits (of 5) from FF cell regfile.$procdff$1024 ($dff).
Removed top 2 bits (of 5) from FF cell regfile.$procdff$1027 ($dff).
Removed top 3 bits (of 5) from FF cell regfile.$procdff$1030 ($dff).
Removed top 4 bits (of 5) from FF cell regfile.$procdff$1033 ($dff).
Removed top 31 bits (of 32) from wire regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$52_ADDR.
Removed top 30 bits (of 32) from wire regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$53_ADDR.
Removed top 29 bits (of 32) from wire regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$56_ADDR.
Removed top 28 bits (of 32) from wire regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$64_ADDR.
Removed top 27 bits (of 32) from wire regfile.$memwr$\regfile_mem$./rtl/regfile.v:23$75_ADDR.

14.8. Executing TECHMAP pass (map to technology primitives).

14.8.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

14.8.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~480 debug messages>

14.9. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module $paramod\mux2to1\N=32:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\mux2to1\N=5:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module alu:
  creating $macc model for $add$./rtl/alu.v:12$224 ($add).
  creating $macc model for $add$./rtl/alu.v:36$230 ($add).
  creating $macc model for $sub$./rtl/alu.v:68$233 ($sub).
  creating $alu model for $macc $sub$./rtl/alu.v:68$233.
  creating $alu model for $macc $add$./rtl/alu.v:36$230.
  creating $alu model for $macc $add$./rtl/alu.v:12$224.
  creating $alu cell for $add$./rtl/alu.v:12$224: $auto$alumacc.cc:474:replace_alu$1065
  creating $alu cell for $add$./rtl/alu.v:36$230: $auto$alumacc.cc:474:replace_alu$1068
  creating $alu cell for $sub$./rtl/alu.v:68$233: $auto$alumacc.cc:474:replace_alu$1071
  created 3 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module aluControl:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module control:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module datapath:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module mips:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module mux4to1:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module nextPCLogic:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module regfile:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module register:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module shiftLeft2:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module signExtend:
  created 0 $alu and 0 $macc cells.

14.10. Executing SHARE pass (SAT-based resource sharing).
Found 2 cells in module regfile that may be considered for resource sharing.
  Analyzing resource sharing options for $memrd$\regfile_mem$./rtl/regfile.v:31$188 ($memrd):
    Found 1 activation_patterns using ctrl signal $ne$./rtl/regfile.v:31$187_Y.
    Found 1 candidates: $memrd$\regfile_mem$./rtl/regfile.v:30$185
    Analyzing resource sharing with $memrd$\regfile_mem$./rtl/regfile.v:30$185 ($memrd):
      Found 1 activation_patterns using ctrl signal $ne$./rtl/regfile.v:30$184_Y.
      Activation pattern for cell $memrd$\regfile_mem$./rtl/regfile.v:31$188: $ne$./rtl/regfile.v:31$187_Y = 1'1
      Activation pattern for cell $memrd$\regfile_mem$./rtl/regfile.v:30$185: $ne$./rtl/regfile.v:30$184_Y = 1'1
      Size of SAT problem: 2 cells, 27 variables, 51 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $ne$./rtl/regfile.v:31$187_Y $ne$./rtl/regfile.v:30$184_Y } = 2'11
  Analyzing resource sharing options for $memrd$\regfile_mem$./rtl/regfile.v:30$185 ($memrd):
    Found 1 activation_patterns using ctrl signal $ne$./rtl/regfile.v:30$184_Y.
    No candidates found.

14.11. Executing OPT pass (performing simple optimizations).

14.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2to1\N=32.
Optimizing module $paramod\mux2to1\N=5.
Optimizing module alu.
Optimizing module aluControl.
Optimizing module control.
Optimizing module datapath.
Optimizing module mips.
Optimizing module mux4to1.
Optimizing module nextPCLogic.
Optimizing module regfile.
Optimizing module register.
Optimizing module shiftLeft2.
Optimizing module signExtend.

14.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\mux2to1\N=32'.
Finding identical cells in module `$paramod\mux2to1\N=5'.
Finding identical cells in module `\alu'.
Finding identical cells in module `\aluControl'.
Finding identical cells in module `\control'.
Finding identical cells in module `\datapath'.
Finding identical cells in module `\mips'.
Finding identical cells in module `\mux4to1'.
Finding identical cells in module `\nextPCLogic'.
Finding identical cells in module `\regfile'.
<suppressed ~45 debug messages>
Finding identical cells in module `\register'.
Finding identical cells in module `\shiftLeft2'.
Finding identical cells in module `\signExtend'.
Removed a total of 15 cells.

14.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\mux2to1\N=32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux2to1\N=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \aluControl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \control..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \datapath..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mips..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mux4to1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \nextPCLogic..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \regfile..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \register..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \shiftLeft2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \signExtend..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

14.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\mux2to1\N=32.
  Optimizing cells in module $paramod\mux2to1\N=5.
  Optimizing cells in module \alu.
  Optimizing cells in module \aluControl.
  Optimizing cells in module \control.
  Optimizing cells in module \datapath.
  Optimizing cells in module \mips.
  Optimizing cells in module \mux4to1.
  Optimizing cells in module \nextPCLogic.
  Optimizing cells in module \regfile.
  Optimizing cells in module \register.
  Optimizing cells in module \shiftLeft2.
  Optimizing cells in module \signExtend.
Performed a total of 0 changes.

14.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\mux2to1\N=32'.
Finding identical cells in module `$paramod\mux2to1\N=5'.
Finding identical cells in module `\alu'.
Finding identical cells in module `\aluControl'.
Finding identical cells in module `\control'.
Finding identical cells in module `\datapath'.
Finding identical cells in module `\mips'.
Finding identical cells in module `\mux4to1'.
Finding identical cells in module `\nextPCLogic'.
Finding identical cells in module `\regfile'.
Finding identical cells in module `\register'.
Finding identical cells in module `\shiftLeft2'.
Finding identical cells in module `\signExtend'.
Removed a total of 0 cells.

14.11.6. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $procdff$1000 ($dff) from module regfile.
Removing $procdff$1003 ($dff) from module regfile.
Removing $procdff$1006 ($dff) from module regfile.
Removing $procdff$1009 ($dff) from module regfile.
Removing $procdff$1012 ($dff) from module regfile.
Removing $procdff$1015 ($dff) from module regfile.
Removing $procdff$1018 ($dff) from module regfile.
Removing $procdff$1021 ($dff) from module regfile.
Removing $procdff$1024 ($dff) from module regfile.
Removing $procdff$1027 ($dff) from module regfile.
Removing $procdff$1030 ($dff) from module regfile.
Removing $procdff$1033 ($dff) from module regfile.
Removing $procdff$988 ($dff) from module regfile.
Removing $procdff$991 ($dff) from module regfile.
Removing $procdff$994 ($dff) from module regfile.
Removing $procdff$997 ($dff) from module regfile.
Replaced 16 DFF cells.

14.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux2to1\N=32..
Finding unused cells or wires in module $paramod\mux2to1\N=5..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \aluControl..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \datapath..
Finding unused cells or wires in module \mips..
Finding unused cells or wires in module \mux4to1..
Finding unused cells or wires in module \nextPCLogic..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \register..
Finding unused cells or wires in module \shiftLeft2..
Finding unused cells or wires in module \signExtend..
Removed 0 unused cells and 595 unused wires.
<suppressed ~2 debug messages>

14.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2to1\N=32.
Optimizing module $paramod\mux2to1\N=5.
Optimizing module alu.
Optimizing module aluControl.
Optimizing module control.
Optimizing module datapath.
Optimizing module mips.
Optimizing module mux4to1.
Optimizing module nextPCLogic.
Optimizing module regfile.
Optimizing module register.
Optimizing module shiftLeft2.
Optimizing module signExtend.

14.11.9. Rerunning OPT passes. (Maybe there is more to do..)

14.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\mux2to1\N=32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux2to1\N=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \aluControl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \control..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \datapath..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mips..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mux4to1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \nextPCLogic..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \regfile..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \register..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \shiftLeft2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \signExtend..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

14.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\mux2to1\N=32.
  Optimizing cells in module $paramod\mux2to1\N=5.
  Optimizing cells in module \alu.
  Optimizing cells in module \aluControl.
  Optimizing cells in module \control.
  Optimizing cells in module \datapath.
  Optimizing cells in module \mips.
  Optimizing cells in module \mux4to1.
  Optimizing cells in module \nextPCLogic.
  Optimizing cells in module \regfile.
  Optimizing cells in module \register.
  Optimizing cells in module \shiftLeft2.
  Optimizing cells in module \signExtend.
Performed a total of 0 changes.

14.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\mux2to1\N=32'.
Finding identical cells in module `$paramod\mux2to1\N=5'.
Finding identical cells in module `\alu'.
Finding identical cells in module `\aluControl'.
Finding identical cells in module `\control'.
Finding identical cells in module `\datapath'.
Finding identical cells in module `\mips'.
Finding identical cells in module `\mux4to1'.
Finding identical cells in module `\nextPCLogic'.
Finding identical cells in module `\regfile'.
Finding identical cells in module `\register'.
Finding identical cells in module `\shiftLeft2'.
Finding identical cells in module `\signExtend'.
Removed a total of 0 cells.

14.11.13. Executing OPT_RMDFF pass (remove dff with constant values).

14.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux2to1\N=32..
Finding unused cells or wires in module $paramod\mux2to1\N=5..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \aluControl..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \datapath..
Finding unused cells or wires in module \mips..
Finding unused cells or wires in module \mux4to1..
Finding unused cells or wires in module \nextPCLogic..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \register..
Finding unused cells or wires in module \shiftLeft2..
Finding unused cells or wires in module \signExtend..
Removed 0 unused cells and 595 unused wires.

14.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2to1\N=32.
Optimizing module $paramod\mux2to1\N=5.
Optimizing module alu.
Optimizing module aluControl.
Optimizing module control.
Optimizing module datapath.
Optimizing module mips.
Optimizing module mux4to1.
Optimizing module nextPCLogic.
Optimizing module regfile.
Optimizing module register.
Optimizing module shiftLeft2.
Optimizing module signExtend.

14.11.16. Finished OPT passes. (There is nothing left to do.)

14.12. Executing FSM pass (extract and optimize FSM).

14.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking control.state as FSM state register:
    Register has an initialization value.

14.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

14.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

14.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux2to1\N=32..
Finding unused cells or wires in module $paramod\mux2to1\N=5..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \aluControl..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \datapath..
Finding unused cells or wires in module \mips..
Finding unused cells or wires in module \mux4to1..
Finding unused cells or wires in module \nextPCLogic..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \register..
Finding unused cells or wires in module \shiftLeft2..
Finding unused cells or wires in module \signExtend..
Removed 0 unused cells and 595 unused wires.

14.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

14.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

14.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

14.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

14.13. Executing OPT pass (performing simple optimizations).

14.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2to1\N=32.
Optimizing module $paramod\mux2to1\N=5.
Optimizing module alu.
Optimizing module aluControl.
Optimizing module control.
Optimizing module datapath.
Optimizing module mips.
Optimizing module mux4to1.
Optimizing module nextPCLogic.
Optimizing module regfile.
Optimizing module register.
Optimizing module shiftLeft2.
Optimizing module signExtend.

14.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\mux2to1\N=32'.
Finding identical cells in module `$paramod\mux2to1\N=5'.
Finding identical cells in module `\alu'.
Finding identical cells in module `\aluControl'.
Finding identical cells in module `\control'.
Finding identical cells in module `\datapath'.
Finding identical cells in module `\mips'.
Finding identical cells in module `\mux4to1'.
Finding identical cells in module `\nextPCLogic'.
Finding identical cells in module `\regfile'.
Finding identical cells in module `\register'.
Finding identical cells in module `\shiftLeft2'.
Finding identical cells in module `\signExtend'.
Removed a total of 0 cells.

14.13.3. Executing OPT_RMDFF pass (remove dff with constant values).

14.13.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux2to1\N=32..
Finding unused cells or wires in module $paramod\mux2to1\N=5..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \aluControl..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \datapath..
Finding unused cells or wires in module \mips..
Finding unused cells or wires in module \mux4to1..
Finding unused cells or wires in module \nextPCLogic..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \register..
Finding unused cells or wires in module \shiftLeft2..
Finding unused cells or wires in module \signExtend..
Removed 0 unused cells and 595 unused wires.

14.13.5. Finished fast OPT passes.

14.14. Executing MEMORY pass.

14.14.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$memwr$\regfile_mem$./rtl/regfile.v:23$190' in module `\regfile': merged $dff to cell.
Checking cell `$memwr$\regfile_mem$./rtl/regfile.v:23$191' in module `\regfile': merged $dff to cell.
Checking cell `$memwr$\regfile_mem$./rtl/regfile.v:23$192' in module `\regfile': merged $dff to cell.
Checking cell `$memwr$\regfile_mem$./rtl/regfile.v:23$193' in module `\regfile': merged $dff to cell.
Checking cell `$memwr$\regfile_mem$./rtl/regfile.v:23$194' in module `\regfile': merged $dff to cell.
Checking cell `$memwr$\regfile_mem$./rtl/regfile.v:23$195' in module `\regfile': merged $dff to cell.
Checking cell `$memwr$\regfile_mem$./rtl/regfile.v:23$196' in module `\regfile': merged $dff to cell.
Checking cell `$memwr$\regfile_mem$./rtl/regfile.v:23$197' in module `\regfile': merged $dff to cell.
Checking cell `$memwr$\regfile_mem$./rtl/regfile.v:23$198' in module `\regfile': merged $dff to cell.
Checking cell `$memwr$\regfile_mem$./rtl/regfile.v:23$199' in module `\regfile': merged $dff to cell.
Checking cell `$memwr$\regfile_mem$./rtl/regfile.v:23$200' in module `\regfile': merged $dff to cell.
Checking cell `$memwr$\regfile_mem$./rtl/regfile.v:23$201' in module `\regfile': merged $dff to cell.
Checking cell `$memwr$\regfile_mem$./rtl/regfile.v:23$202' in module `\regfile': merged $dff to cell.
Checking cell `$memwr$\regfile_mem$./rtl/regfile.v:23$203' in module `\regfile': merged $dff to cell.
Checking cell `$memwr$\regfile_mem$./rtl/regfile.v:23$204' in module `\regfile': merged $dff to cell.
Checking cell `$memwr$\regfile_mem$./rtl/regfile.v:23$205' in module `\regfile': merged $dff to cell.
Checking cell `$memwr$\regfile_mem$./rtl/regfile.v:23$206' in module `\regfile': merged $dff to cell.
Checking cell `$memwr$\regfile_mem$./rtl/regfile.v:23$207' in module `\regfile': merged $dff to cell.
Checking cell `$memwr$\regfile_mem$./rtl/regfile.v:23$208' in module `\regfile': merged $dff to cell.
Checking cell `$memwr$\regfile_mem$./rtl/regfile.v:23$209' in module `\regfile': merged $dff to cell.
Checking cell `$memwr$\regfile_mem$./rtl/regfile.v:23$210' in module `\regfile': merged $dff to cell.
Checking cell `$memwr$\regfile_mem$./rtl/regfile.v:23$211' in module `\regfile': merged $dff to cell.
Checking cell `$memwr$\regfile_mem$./rtl/regfile.v:23$212' in module `\regfile': merged $dff to cell.
Checking cell `$memwr$\regfile_mem$./rtl/regfile.v:23$213' in module `\regfile': merged $dff to cell.
Checking cell `$memwr$\regfile_mem$./rtl/regfile.v:23$214' in module `\regfile': merged $dff to cell.
Checking cell `$memwr$\regfile_mem$./rtl/regfile.v:23$215' in module `\regfile': merged $dff to cell.
Checking cell `$memwr$\regfile_mem$./rtl/regfile.v:23$216' in module `\regfile': merged $dff to cell.
Checking cell `$memwr$\regfile_mem$./rtl/regfile.v:23$217' in module `\regfile': merged $dff to cell.
Checking cell `$memwr$\regfile_mem$./rtl/regfile.v:23$218' in module `\regfile': merged $dff to cell.
Checking cell `$memwr$\regfile_mem$./rtl/regfile.v:23$219' in module `\regfile': merged $dff to cell.
Checking cell `$memwr$\regfile_mem$./rtl/regfile.v:23$220' in module `\regfile': merged $dff to cell.
Checking cell `$memwr$\regfile_mem$./rtl/regfile.v:23$221' in module `\regfile': merged $dff to cell.
Checking cell `$memwr$\regfile_mem$./rtl/regfile.v:26$222' in module `\regfile': merged $dff to cell.
Checking cell `$memrd$\regfile_mem$./rtl/regfile.v:30$185' in module `\regfile': no (compatible) $dff found.
Checking cell `$memrd$\regfile_mem$./rtl/regfile.v:31$188' in module `\regfile': no (compatible) $dff found.

14.14.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux2to1\N=32..
Finding unused cells or wires in module $paramod\mux2to1\N=5..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \aluControl..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \datapath..
Finding unused cells or wires in module \mips..
Finding unused cells or wires in module \mux4to1..
Finding unused cells or wires in module \nextPCLogic..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \register..
Finding unused cells or wires in module \shiftLeft2..
Finding unused cells or wires in module \signExtend..
Removed 4 unused cells and 599 unused wires.
<suppressed ~5 debug messages>

14.14.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory regfile.regfile_mem by address:
  New clock domain: posedge \clk
    Port 0 ($memwr$\regfile_mem$./rtl/regfile.v:23$190) has addr 5'00000.
      Active bits: 11111111111111111111111111111111
    Port 1 ($memwr$\regfile_mem$./rtl/regfile.v:23$191) has addr 5'00001.
      Active bits: 11111111111111111111111111111111
    Port 2 ($memwr$\regfile_mem$./rtl/regfile.v:23$192) has addr 5'00010.
      Active bits: 11111111111111111111111111111111
    Port 3 ($memwr$\regfile_mem$./rtl/regfile.v:23$193) has addr 5'00011.
      Active bits: 11111111111111111111111111111111
    Port 4 ($memwr$\regfile_mem$./rtl/regfile.v:23$194) has addr 5'00100.
      Active bits: 11111111111111111111111111111111
    Port 5 ($memwr$\regfile_mem$./rtl/regfile.v:23$195) has addr 5'00101.
      Active bits: 11111111111111111111111111111111
    Port 6 ($memwr$\regfile_mem$./rtl/regfile.v:23$196) has addr 5'00110.
      Active bits: 11111111111111111111111111111111
    Port 7 ($memwr$\regfile_mem$./rtl/regfile.v:23$197) has addr 5'00111.
      Active bits: 11111111111111111111111111111111
    Port 8 ($memwr$\regfile_mem$./rtl/regfile.v:23$198) has addr 5'01000.
      Active bits: 11111111111111111111111111111111
    Port 9 ($memwr$\regfile_mem$./rtl/regfile.v:23$199) has addr 5'01001.
      Active bits: 11111111111111111111111111111111
    Port 10 ($memwr$\regfile_mem$./rtl/regfile.v:23$200) has addr 5'01010.
      Active bits: 11111111111111111111111111111111
    Port 11 ($memwr$\regfile_mem$./rtl/regfile.v:23$201) has addr 5'01011.
      Active bits: 11111111111111111111111111111111
    Port 12 ($memwr$\regfile_mem$./rtl/regfile.v:23$202) has addr 5'01100.
      Active bits: 11111111111111111111111111111111
    Port 13 ($memwr$\regfile_mem$./rtl/regfile.v:23$203) has addr 5'01101.
      Active bits: 11111111111111111111111111111111
    Port 14 ($memwr$\regfile_mem$./rtl/regfile.v:23$204) has addr 5'01110.
      Active bits: 11111111111111111111111111111111
    Port 15 ($memwr$\regfile_mem$./rtl/regfile.v:23$205) has addr 5'01111.
      Active bits: 11111111111111111111111111111111
    Port 16 ($memwr$\regfile_mem$./rtl/regfile.v:23$206) has addr 5'10000.
      Active bits: 11111111111111111111111111111111
    Port 17 ($memwr$\regfile_mem$./rtl/regfile.v:23$207) has addr 5'10001.
      Active bits: 11111111111111111111111111111111
    Port 18 ($memwr$\regfile_mem$./rtl/regfile.v:23$208) has addr 5'10010.
      Active bits: 11111111111111111111111111111111
    Port 19 ($memwr$\regfile_mem$./rtl/regfile.v:23$209) has addr 5'10011.
      Active bits: 11111111111111111111111111111111
    Port 20 ($memwr$\regfile_mem$./rtl/regfile.v:23$210) has addr 5'10100.
      Active bits: 11111111111111111111111111111111
    Port 21 ($memwr$\regfile_mem$./rtl/regfile.v:23$211) has addr 5'10101.
      Active bits: 11111111111111111111111111111111
    Port 22 ($memwr$\regfile_mem$./rtl/regfile.v:23$212) has addr 5'10110.
      Active bits: 11111111111111111111111111111111
    Port 23 ($memwr$\regfile_mem$./rtl/regfile.v:23$213) has addr 5'10111.
      Active bits: 11111111111111111111111111111111
    Port 24 ($memwr$\regfile_mem$./rtl/regfile.v:23$214) has addr 5'11000.
      Active bits: 11111111111111111111111111111111
    Port 25 ($memwr$\regfile_mem$./rtl/regfile.v:23$215) has addr 5'11001.
      Active bits: 11111111111111111111111111111111
    Port 26 ($memwr$\regfile_mem$./rtl/regfile.v:23$216) has addr 5'11010.
      Active bits: 11111111111111111111111111111111
    Port 27 ($memwr$\regfile_mem$./rtl/regfile.v:23$217) has addr 5'11011.
      Active bits: 11111111111111111111111111111111
    Port 28 ($memwr$\regfile_mem$./rtl/regfile.v:23$218) has addr 5'11100.
      Active bits: 11111111111111111111111111111111
    Port 29 ($memwr$\regfile_mem$./rtl/regfile.v:23$219) has addr 5'11101.
      Active bits: 11111111111111111111111111111111
    Port 30 ($memwr$\regfile_mem$./rtl/regfile.v:23$220) has addr 5'11110.
      Active bits: 11111111111111111111111111111111
    Port 31 ($memwr$\regfile_mem$./rtl/regfile.v:23$221) has addr 5'11111.
      Active bits: 11111111111111111111111111111111
    Port 32 ($memwr$\regfile_mem$./rtl/regfile.v:26$222) has addr \addrWriteReg.
      Active bits: 11111111111111111111111111111111
Consolidating write ports of memory regfile.regfile_mem using sat-based resource sharing:
  Port 0 ($memwr$\regfile_mem$./rtl/regfile.v:23$190) on posedge \clk: considered
  Port 1 ($memwr$\regfile_mem$./rtl/regfile.v:23$191) on posedge \clk: considered
  Port 2 ($memwr$\regfile_mem$./rtl/regfile.v:23$192) on posedge \clk: considered
  Port 3 ($memwr$\regfile_mem$./rtl/regfile.v:23$193) on posedge \clk: considered
  Port 4 ($memwr$\regfile_mem$./rtl/regfile.v:23$194) on posedge \clk: considered
  Port 5 ($memwr$\regfile_mem$./rtl/regfile.v:23$195) on posedge \clk: considered
  Port 6 ($memwr$\regfile_mem$./rtl/regfile.v:23$196) on posedge \clk: considered
  Port 7 ($memwr$\regfile_mem$./rtl/regfile.v:23$197) on posedge \clk: considered
  Port 8 ($memwr$\regfile_mem$./rtl/regfile.v:23$198) on posedge \clk: considered
  Port 9 ($memwr$\regfile_mem$./rtl/regfile.v:23$199) on posedge \clk: considered
  Port 10 ($memwr$\regfile_mem$./rtl/regfile.v:23$200) on posedge \clk: considered
  Port 11 ($memwr$\regfile_mem$./rtl/regfile.v:23$201) on posedge \clk: considered
  Port 12 ($memwr$\regfile_mem$./rtl/regfile.v:23$202) on posedge \clk: considered
  Port 13 ($memwr$\regfile_mem$./rtl/regfile.v:23$203) on posedge \clk: considered
  Port 14 ($memwr$\regfile_mem$./rtl/regfile.v:23$204) on posedge \clk: considered
  Port 15 ($memwr$\regfile_mem$./rtl/regfile.v:23$205) on posedge \clk: considered
  Port 16 ($memwr$\regfile_mem$./rtl/regfile.v:23$206) on posedge \clk: considered
  Port 17 ($memwr$\regfile_mem$./rtl/regfile.v:23$207) on posedge \clk: considered
  Port 18 ($memwr$\regfile_mem$./rtl/regfile.v:23$208) on posedge \clk: considered
  Port 19 ($memwr$\regfile_mem$./rtl/regfile.v:23$209) on posedge \clk: considered
  Port 20 ($memwr$\regfile_mem$./rtl/regfile.v:23$210) on posedge \clk: considered
  Port 21 ($memwr$\regfile_mem$./rtl/regfile.v:23$211) on posedge \clk: considered
  Port 22 ($memwr$\regfile_mem$./rtl/regfile.v:23$212) on posedge \clk: considered
  Port 23 ($memwr$\regfile_mem$./rtl/regfile.v:23$213) on posedge \clk: considered
  Port 24 ($memwr$\regfile_mem$./rtl/regfile.v:23$214) on posedge \clk: considered
  Port 25 ($memwr$\regfile_mem$./rtl/regfile.v:23$215) on posedge \clk: considered
  Port 26 ($memwr$\regfile_mem$./rtl/regfile.v:23$216) on posedge \clk: considered
  Port 27 ($memwr$\regfile_mem$./rtl/regfile.v:23$217) on posedge \clk: considered
  Port 28 ($memwr$\regfile_mem$./rtl/regfile.v:23$218) on posedge \clk: considered
  Port 29 ($memwr$\regfile_mem$./rtl/regfile.v:23$219) on posedge \clk: considered
  Port 30 ($memwr$\regfile_mem$./rtl/regfile.v:23$220) on posedge \clk: considered
  Port 31 ($memwr$\regfile_mem$./rtl/regfile.v:23$221) on posedge \clk: considered
  Port 32 ($memwr$\regfile_mem$./rtl/regfile.v:26$222) on posedge \clk: considered
  Common input cone for all EN signals: 3 cells.
  Size of unconstrained SAT problem: 23 variables, 53 clauses
  According to SAT solver sharing of port 0 with port 1 is not possible.
  According to SAT solver sharing of port 1 with port 2 is not possible.
  According to SAT solver sharing of port 2 with port 3 is not possible.
  According to SAT solver sharing of port 3 with port 4 is not possible.
  According to SAT solver sharing of port 4 with port 5 is not possible.
  According to SAT solver sharing of port 5 with port 6 is not possible.
  According to SAT solver sharing of port 6 with port 7 is not possible.
  According to SAT solver sharing of port 7 with port 8 is not possible.
  According to SAT solver sharing of port 8 with port 9 is not possible.
  According to SAT solver sharing of port 9 with port 10 is not possible.
  According to SAT solver sharing of port 10 with port 11 is not possible.
  According to SAT solver sharing of port 11 with port 12 is not possible.
  According to SAT solver sharing of port 12 with port 13 is not possible.
  According to SAT solver sharing of port 13 with port 14 is not possible.
  According to SAT solver sharing of port 14 with port 15 is not possible.
  According to SAT solver sharing of port 15 with port 16 is not possible.
  According to SAT solver sharing of port 16 with port 17 is not possible.
  According to SAT solver sharing of port 17 with port 18 is not possible.
  According to SAT solver sharing of port 18 with port 19 is not possible.
  According to SAT solver sharing of port 19 with port 20 is not possible.
  According to SAT solver sharing of port 20 with port 21 is not possible.
  According to SAT solver sharing of port 21 with port 22 is not possible.
  According to SAT solver sharing of port 22 with port 23 is not possible.
  According to SAT solver sharing of port 23 with port 24 is not possible.
  According to SAT solver sharing of port 24 with port 25 is not possible.
  According to SAT solver sharing of port 25 with port 26 is not possible.
  According to SAT solver sharing of port 26 with port 27 is not possible.
  According to SAT solver sharing of port 27 with port 28 is not possible.
  According to SAT solver sharing of port 28 with port 29 is not possible.
  According to SAT solver sharing of port 29 with port 30 is not possible.
  According to SAT solver sharing of port 30 with port 31 is not possible.
  Merging port 31 into port 32.

14.14.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux2to1\N=32..
Finding unused cells or wires in module $paramod\mux2to1\N=5..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \aluControl..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \datapath..
Finding unused cells or wires in module \mips..
Finding unused cells or wires in module \mux4to1..
Finding unused cells or wires in module \nextPCLogic..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \register..
Finding unused cells or wires in module \shiftLeft2..
Finding unused cells or wires in module \signExtend..
Removed 4 unused cells and 599 unused wires.

14.14.5. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\regfile_mem' in module `\regfile':
  $memwr$\regfile_mem$./rtl/regfile.v:23$190 ($memwr)
  $memwr$\regfile_mem$./rtl/regfile.v:23$191 ($memwr)
  $memwr$\regfile_mem$./rtl/regfile.v:23$192 ($memwr)
  $memwr$\regfile_mem$./rtl/regfile.v:23$193 ($memwr)
  $memwr$\regfile_mem$./rtl/regfile.v:23$194 ($memwr)
  $memwr$\regfile_mem$./rtl/regfile.v:23$195 ($memwr)
  $memwr$\regfile_mem$./rtl/regfile.v:23$196 ($memwr)
  $memwr$\regfile_mem$./rtl/regfile.v:23$197 ($memwr)
  $memwr$\regfile_mem$./rtl/regfile.v:23$198 ($memwr)
  $memwr$\regfile_mem$./rtl/regfile.v:23$199 ($memwr)
  $memwr$\regfile_mem$./rtl/regfile.v:23$200 ($memwr)
  $memwr$\regfile_mem$./rtl/regfile.v:23$201 ($memwr)
  $memwr$\regfile_mem$./rtl/regfile.v:23$202 ($memwr)
  $memwr$\regfile_mem$./rtl/regfile.v:23$203 ($memwr)
  $memwr$\regfile_mem$./rtl/regfile.v:23$204 ($memwr)
  $memwr$\regfile_mem$./rtl/regfile.v:23$205 ($memwr)
  $memwr$\regfile_mem$./rtl/regfile.v:23$206 ($memwr)
  $memwr$\regfile_mem$./rtl/regfile.v:23$207 ($memwr)
  $memwr$\regfile_mem$./rtl/regfile.v:23$208 ($memwr)
  $memwr$\regfile_mem$./rtl/regfile.v:23$209 ($memwr)
  $memwr$\regfile_mem$./rtl/regfile.v:23$210 ($memwr)
  $memwr$\regfile_mem$./rtl/regfile.v:23$211 ($memwr)
  $memwr$\regfile_mem$./rtl/regfile.v:23$212 ($memwr)
  $memwr$\regfile_mem$./rtl/regfile.v:23$213 ($memwr)
  $memwr$\regfile_mem$./rtl/regfile.v:23$214 ($memwr)
  $memwr$\regfile_mem$./rtl/regfile.v:23$215 ($memwr)
  $memwr$\regfile_mem$./rtl/regfile.v:23$216 ($memwr)
  $memwr$\regfile_mem$./rtl/regfile.v:23$217 ($memwr)
  $memwr$\regfile_mem$./rtl/regfile.v:23$218 ($memwr)
  $memwr$\regfile_mem$./rtl/regfile.v:23$219 ($memwr)
  $memwr$\regfile_mem$./rtl/regfile.v:23$220 ($memwr)
  $memwr$\regfile_mem$./rtl/regfile.v:26$222 ($memwr)
  $memrd$\regfile_mem$./rtl/regfile.v:30$185 ($memrd)
  $memrd$\regfile_mem$./rtl/regfile.v:31$188 ($memrd)

14.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux2to1\N=32..
Finding unused cells or wires in module $paramod\mux2to1\N=5..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \aluControl..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \datapath..
Finding unused cells or wires in module \mips..
Finding unused cells or wires in module \mux4to1..
Finding unused cells or wires in module \nextPCLogic..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \register..
Finding unused cells or wires in module \shiftLeft2..
Finding unused cells or wires in module \signExtend..
Removed 4 unused cells and 599 unused wires.

14.16. Executing OPT pass (performing simple optimizations).

14.16.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2to1\N=32.
<suppressed ~1 debug messages>
Optimizing module $paramod\mux2to1\N=5.
<suppressed ~1 debug messages>
Optimizing module alu.
<suppressed ~3 debug messages>
Optimizing module aluControl.
Optimizing module control.
<suppressed ~9 debug messages>
Optimizing module datapath.
Optimizing module mips.
Optimizing module mux4to1.
<suppressed ~1 debug messages>
Optimizing module nextPCLogic.
Optimizing module regfile.
<suppressed ~3 debug messages>
Optimizing module register.
Optimizing module shiftLeft2.
Optimizing module signExtend.

14.16.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\mux2to1\N=32'.
Finding identical cells in module `$paramod\mux2to1\N=5'.
Finding identical cells in module `\alu'.
Finding identical cells in module `\aluControl'.
Finding identical cells in module `\control'.
Finding identical cells in module `\datapath'.
Finding identical cells in module `\mips'.
Finding identical cells in module `\mux4to1'.
Finding identical cells in module `\nextPCLogic'.
Finding identical cells in module `\regfile'.
Finding identical cells in module `\register'.
Finding identical cells in module `\shiftLeft2'.
Finding identical cells in module `\signExtend'.
Removed a total of 0 cells.

14.16.3. Executing OPT_RMDFF pass (remove dff with constant values).

14.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux2to1\N=32..
Finding unused cells or wires in module $paramod\mux2to1\N=5..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \aluControl..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \datapath..
Finding unused cells or wires in module \mips..
Finding unused cells or wires in module \mux4to1..
Finding unused cells or wires in module \nextPCLogic..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \register..
Finding unused cells or wires in module \shiftLeft2..
Finding unused cells or wires in module \signExtend..
Removed 7 unused cells and 616 unused wires.
<suppressed ~9 debug messages>

14.16.5. Finished fast OPT passes.

14.17. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).
Mapping memory cell \regfile_mem in module \regfile:
  created 32 $dff cells and 0 static cells of width 32.
  read interface: 0 $dff and 62 $mux cells.
  write interface: 1024 write mux blocks.

14.18. Executing OPT pass (performing simple optimizations).

14.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2to1\N=32.
Optimizing module $paramod\mux2to1\N=5.
Optimizing module alu.
Optimizing module aluControl.
Optimizing module control.
Optimizing module datapath.
Optimizing module mips.
Optimizing module mux4to1.
Optimizing module nextPCLogic.
Optimizing module regfile.
<suppressed ~3039 debug messages>
Optimizing module register.
Optimizing module shiftLeft2.
Optimizing module signExtend.

14.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\mux2to1\N=32'.
Finding identical cells in module `$paramod\mux2to1\N=5'.
Finding identical cells in module `\alu'.
Finding identical cells in module `\aluControl'.
Finding identical cells in module `\control'.
Finding identical cells in module `\datapath'.
Finding identical cells in module `\mips'.
Finding identical cells in module `\mux4to1'.
Finding identical cells in module `\nextPCLogic'.
Finding identical cells in module `\regfile'.
Finding identical cells in module `\register'.
Finding identical cells in module `\shiftLeft2'.
Finding identical cells in module `\signExtend'.
Removed a total of 0 cells.

14.18.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\mux2to1\N=32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux2to1\N=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \aluControl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \control..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \datapath..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mips..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mux4to1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \nextPCLogic..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \regfile..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $auto$memory_share.cc:646:consolidate_wr_using_sat$1081: $0$memwr$\regfile_mem$./rtl/regfile.v:26$83_EN[31:0]$183 [31] -> 1'1
  Analyzing evaluation results.
Running muxtree optimizer on module \register..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \shiftLeft2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \signExtend..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~49 debug messages>

14.18.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\mux2to1\N=32.
  Optimizing cells in module $paramod\mux2to1\N=5.
  Optimizing cells in module \alu.
  Optimizing cells in module \aluControl.
  Optimizing cells in module \control.
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1057: { \MemtoReg \RegDst $procmux$879_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1053: { \MemWrite \MemtoReg $procmux$812_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1049: { \MemWrite \MemtoReg \RegDst $procmux$641_CMP $procmux$810_CMP $procmux$811_CMP $procmux$812_CMP $procmux$818_CMP $procmux$819_CMP $procmux$879_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1047: { \MemWrite \MemtoReg $procmux$641_CMP $procmux$810_CMP $procmux$812_CMP $procmux$879_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1043: { \RegDst $procmux$811_CMP }
    Consolidated identical input bits for $mux cell $procmux$635:
      Old ports: A=3'000, B=3'101, Y=$9\nextState[3:0] [2:0]
      New ports: A=1'0, B=1'1, Y=$9\nextState[3:0] [0]
      New connections: $9\nextState[3:0] [2:1] = { $9\nextState[3:0] [0] 1'0 }
    Consolidated identical input bits for $mux cell $procmux$671:
      Old ports: A=4'0000, B=4'1011, Y=$7\nextState[3:0]
      New ports: A=1'0, B=1'1, Y=$7\nextState[3:0] [0]
      New connections: $7\nextState[3:0] [3:1] = { $7\nextState[3:0] [0] 1'0 $7\nextState[3:0] [0] }
  Optimizing cells in module \control.
    Consolidated identical input bits for $mux cell $procmux$703:
      Old ports: A=$7\nextState[3:0], B=4'1001, Y=$6\nextState[3:0]
      New ports: A={ $7\nextState[3:0] [0] $7\nextState[3:0] [0] }, B=2'01, Y=$6\nextState[3:0] [1:0]
      New connections: $6\nextState[3:0] [3:2] = { $6\nextState[3:0] [0] 1'0 }
  Optimizing cells in module \control.
  Optimizing cells in module \datapath.
  Optimizing cells in module \mips.
  Optimizing cells in module \mux4to1.
  Optimizing cells in module \nextPCLogic.
  Optimizing cells in module \regfile.
  Optimizing cells in module \register.
  Optimizing cells in module \shiftLeft2.
  Optimizing cells in module \signExtend.
Performed a total of 8 changes.

14.18.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\mux2to1\N=32'.
Finding identical cells in module `$paramod\mux2to1\N=5'.
Finding identical cells in module `\alu'.
Finding identical cells in module `\aluControl'.
Finding identical cells in module `\control'.
Finding identical cells in module `\datapath'.
Finding identical cells in module `\mips'.
Finding identical cells in module `\mux4to1'.
Finding identical cells in module `\nextPCLogic'.
Finding identical cells in module `\regfile'.
Finding identical cells in module `\register'.
Finding identical cells in module `\shiftLeft2'.
Finding identical cells in module `\signExtend'.
Removed a total of 0 cells.

14.18.6. Executing OPT_RMDFF pass (remove dff with constant values).

14.18.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux2to1\N=32..
Finding unused cells or wires in module $paramod\mux2to1\N=5..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \aluControl..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \datapath..
Finding unused cells or wires in module \mips..
Finding unused cells or wires in module \mux4to1..
Finding unused cells or wires in module \nextPCLogic..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \register..
Finding unused cells or wires in module \shiftLeft2..
Finding unused cells or wires in module \signExtend..
Removed 7 unused cells and 3742 unused wires.
<suppressed ~1 debug messages>

14.18.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2to1\N=32.
Optimizing module $paramod\mux2to1\N=5.
Optimizing module alu.
Optimizing module aluControl.
Optimizing module control.
<suppressed ~2 debug messages>
Optimizing module datapath.
Optimizing module mips.
Optimizing module mux4to1.
Optimizing module nextPCLogic.
Optimizing module regfile.
<suppressed ~1 debug messages>
Optimizing module register.
Optimizing module shiftLeft2.
Optimizing module signExtend.

14.18.9. Rerunning OPT passes. (Maybe there is more to do..)

14.18.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\mux2to1\N=32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux2to1\N=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \aluControl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \control..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \datapath..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mips..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mux4to1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \nextPCLogic..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \regfile..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \register..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \shiftLeft2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \signExtend..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~48 debug messages>

14.18.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\mux2to1\N=32.
  Optimizing cells in module $paramod\mux2to1\N=5.
  Optimizing cells in module \alu.
  Optimizing cells in module \aluControl.
  Optimizing cells in module \control.
  Optimizing cells in module \datapath.
  Optimizing cells in module \mips.
  Optimizing cells in module \mux4to1.
  Optimizing cells in module \nextPCLogic.
  Optimizing cells in module \regfile.
  Optimizing cells in module \register.
  Optimizing cells in module \shiftLeft2.
  Optimizing cells in module \signExtend.
Performed a total of 0 changes.

14.18.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\mux2to1\N=32'.
Finding identical cells in module `$paramod\mux2to1\N=5'.
Finding identical cells in module `\alu'.
Finding identical cells in module `\aluControl'.
Finding identical cells in module `\control'.
Finding identical cells in module `\datapath'.
Finding identical cells in module `\mips'.
Finding identical cells in module `\mux4to1'.
Finding identical cells in module `\nextPCLogic'.
Finding identical cells in module `\regfile'.
Finding identical cells in module `\register'.
Finding identical cells in module `\shiftLeft2'.
Finding identical cells in module `\signExtend'.
Removed a total of 0 cells.

14.18.13. Executing OPT_RMDFF pass (remove dff with constant values).

14.18.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux2to1\N=32..
Finding unused cells or wires in module $paramod\mux2to1\N=5..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \aluControl..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \datapath..
Finding unused cells or wires in module \mips..
Finding unused cells or wires in module \mux4to1..
Finding unused cells or wires in module \nextPCLogic..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \register..
Finding unused cells or wires in module \shiftLeft2..
Finding unused cells or wires in module \signExtend..
Removed 7 unused cells and 3744 unused wires.
<suppressed ~1 debug messages>

14.18.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2to1\N=32.
Optimizing module $paramod\mux2to1\N=5.
Optimizing module alu.
Optimizing module aluControl.
Optimizing module control.
Optimizing module datapath.
Optimizing module mips.
Optimizing module mux4to1.
Optimizing module nextPCLogic.
Optimizing module regfile.
Optimizing module register.
Optimizing module shiftLeft2.
Optimizing module signExtend.

14.18.16. Finished OPT passes. (There is nothing left to do.)

14.19. Executing TECHMAP pass (map to technology primitives).

14.19.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

14.19.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $eq.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=7 for cells of type $pmux.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=3 for cells of type $pmux.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $not.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=33 for cells of type $alu.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=6 for cells of type $pmux.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=33 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32 for cells of type $lcu.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=3 for cells of type $pmux.
No more expansions possible.
<suppressed ~1376 debug messages>

14.20. Executing OPT pass (performing simple optimizations).

14.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2to1\N=32.
Optimizing module $paramod\mux2to1\N=5.
Optimizing module alu.
<suppressed ~129 debug messages>
Optimizing module aluControl.
<suppressed ~67 debug messages>
Optimizing module control.
<suppressed ~116 debug messages>
Optimizing module datapath.
Optimizing module mips.
Optimizing module mux4to1.
<suppressed ~2 debug messages>
Optimizing module nextPCLogic.
Optimizing module regfile.
Optimizing module register.
Optimizing module shiftLeft2.
Optimizing module signExtend.

14.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\mux2to1\N=32'.
Finding identical cells in module `$paramod\mux2to1\N=5'.
Finding identical cells in module `\alu'.
<suppressed ~1329 debug messages>
Finding identical cells in module `\aluControl'.
<suppressed ~102 debug messages>
Finding identical cells in module `\control'.
<suppressed ~189 debug messages>
Finding identical cells in module `\datapath'.
Finding identical cells in module `\mips'.
Finding identical cells in module `\mux4to1'.
<suppressed ~6 debug messages>
Finding identical cells in module `\nextPCLogic'.
Finding identical cells in module `\regfile'.
Finding identical cells in module `\register'.
Finding identical cells in module `\shiftLeft2'.
Finding identical cells in module `\signExtend'.
Removed a total of 542 cells.

14.20.3. Executing OPT_RMDFF pass (remove dff with constant values).

14.20.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux2to1\N=32..
Finding unused cells or wires in module $paramod\mux2to1\N=5..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \aluControl..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \datapath..
Finding unused cells or wires in module \mips..
Finding unused cells or wires in module \mux4to1..
Finding unused cells or wires in module \nextPCLogic..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \register..
Finding unused cells or wires in module \shiftLeft2..
Finding unused cells or wires in module \signExtend..
Removed 120 unused cells and 4508 unused wires.
<suppressed ~55 debug messages>

14.20.5. Finished fast OPT passes.

14.21. Executing ABC pass (technology mapping using ABC).

14.21.1. Extracting gate netlist of module `$paramod\mux2to1\N=32' to `<abc-temp-dir>/input.blif'..
Extracted 32 gates and 97 wires to a netlist network with 65 inputs and 32 outputs.

14.21.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

14.21.1.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:       32
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       65
ABC RESULTS:          output signals:       32
Removing temp directory.

14.21.2. Extracting gate netlist of module `$paramod\mux2to1\N=5' to `<abc-temp-dir>/input.blif'..
Extracted 5 gates and 16 wires to a netlist network with 11 inputs and 5 outputs.

14.21.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

14.21.2.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:        5
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:        5
Removing temp directory.

14.21.3. Extracting gate netlist of module `\alu' to `<abc-temp-dir>/input.blif'..
Extracted 1006 gates and 1076 wires to a netlist network with 68 inputs and 34 outputs.

14.21.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

14.21.3.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       21
ABC RESULTS:            ANDNOT cells:       87
ABC RESULTS:              AOI3 cells:       80
ABC RESULTS:              AOI4 cells:       64
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:       41
ABC RESULTS:               NOR cells:       40
ABC RESULTS:               NOT cells:       83
ABC RESULTS:              OAI3 cells:       42
ABC RESULTS:              OAI4 cells:       32
ABC RESULTS:                OR cells:       66
ABC RESULTS:             ORNOT cells:       35
ABC RESULTS:              XNOR cells:       54
ABC RESULTS:               XOR cells:       64
ABC RESULTS:        internal signals:      974
ABC RESULTS:           input signals:       68
ABC RESULTS:          output signals:       34
Removing temp directory.

14.21.4. Extracting gate netlist of module `\aluControl' to `<abc-temp-dir>/input.blif'..
Extracted 49 gates and 59 wires to a netlist network with 8 inputs and 4 outputs.

14.21.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

14.21.4.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:              AOI3 cells:        1
ABC RESULTS:              AOI4 cells:        3
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        4
ABC RESULTS:              OAI3 cells:        4
ABC RESULTS:                OR cells:        7
ABC RESULTS:             ORNOT cells:        6
ABC RESULTS:        internal signals:       47
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

14.21.5. Extracting gate netlist of module `\control' to `<abc-temp-dir>/input.blif'..
Extracted 151 gates and 164 wires to a netlist network with 11 inputs and 19 outputs.

14.21.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

14.21.5.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:       14
ABC RESULTS:              AOI3 cells:        4
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               NOR cells:       18
ABC RESULTS:               NOT cells:        9
ABC RESULTS:              OAI3 cells:        8
ABC RESULTS:              OAI4 cells:        1
ABC RESULTS:                OR cells:       45
ABC RESULTS:             ORNOT cells:       14
ABC RESULTS:        internal signals:      134
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:       19
Removing temp directory.

14.21.6. Extracting gate netlist of module `\datapath' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

14.21.7. Extracting gate netlist of module `\mips' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

14.21.8. Extracting gate netlist of module `\mux4to1' to `<abc-temp-dir>/input.blif'..
Extracted 202 gates and 333 wires to a netlist network with 130 inputs and 32 outputs.

14.21.8.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

14.21.8.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:       33
ABC RESULTS:              AOI4 cells:       32
ABC RESULTS:               MUX cells:       32
ABC RESULTS:               NOR cells:        1
ABC RESULTS:             ORNOT cells:       33
ABC RESULTS:        internal signals:      171
ABC RESULTS:           input signals:      130
ABC RESULTS:          output signals:       32
Removing temp directory.

14.21.9. Extracting gate netlist of module `\nextPCLogic' to `<abc-temp-dir>/input.blif'..
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 1 outputs.

14.21.9.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

14.21.9.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        1
Removing temp directory.

14.21.10. Extracting gate netlist of module `\regfile' to `<abc-temp-dir>/input.blif'..
Extracted 4196 gates and 5271 wires to a netlist network with 1073 inputs and 1088 outputs.

14.21.10.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

14.21.10.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:     1120
ABC RESULTS:               MUX cells:     3008
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               NOR cells:        4
ABC RESULTS:               NOT cells:        9
ABC RESULTS:                OR cells:       57
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:     3110
ABC RESULTS:           input signals:     1073
ABC RESULTS:          output signals:     1088
Removing temp directory.

14.21.11. Extracting gate netlist of module `\register' to `<abc-temp-dir>/input.blif'..
Extracted 64 gates and 131 wires to a netlist network with 66 inputs and 32 outputs.

14.21.11.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

14.21.11.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:       32
ABC RESULTS:               MUX cells:       32
ABC RESULTS:        internal signals:       33
ABC RESULTS:           input signals:       66
ABC RESULTS:          output signals:       32
Removing temp directory.

14.21.12. Extracting gate netlist of module `\shiftLeft2' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

14.21.13. Extracting gate netlist of module `\signExtend' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

14.22. Executing OPT pass (performing simple optimizations).

14.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2to1\N=32.
Optimizing module $paramod\mux2to1\N=5.
Optimizing module alu.
Optimizing module aluControl.
Optimizing module control.
Optimizing module datapath.
Optimizing module mips.
Optimizing module mux4to1.
Optimizing module nextPCLogic.
Optimizing module regfile.
<suppressed ~960 debug messages>
Optimizing module register.
Optimizing module shiftLeft2.
Optimizing module signExtend.

14.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\mux2to1\N=32'.
Finding identical cells in module `$paramod\mux2to1\N=5'.
Finding identical cells in module `\alu'.
<suppressed ~18 debug messages>
Finding identical cells in module `\aluControl'.
Finding identical cells in module `\control'.
<suppressed ~9 debug messages>
Finding identical cells in module `\datapath'.
Finding identical cells in module `\mips'.
Finding identical cells in module `\mux4to1'.
Finding identical cells in module `\nextPCLogic'.
Finding identical cells in module `\regfile'.
Finding identical cells in module `\register'.
Finding identical cells in module `\shiftLeft2'.
Finding identical cells in module `\signExtend'.
Removed a total of 9 cells.

14.22.3. Executing OPT_RMDFF pass (remove dff with constant values).

14.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux2to1\N=32..
Finding unused cells or wires in module $paramod\mux2to1\N=5..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \aluControl..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \datapath..
Finding unused cells or wires in module \mips..
Finding unused cells or wires in module \mux4to1..
Finding unused cells or wires in module \nextPCLogic..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \register..
Finding unused cells or wires in module \shiftLeft2..
Finding unused cells or wires in module \signExtend..
Removed 126 unused cells and 6886 unused wires.
<suppressed ~16 debug messages>

14.22.5. Finished fast OPT passes.

14.23. Executing HIERARCHY pass (managing design hierarchy).

14.23.1. Analyzing design hierarchy..
Top module:  \mips
Used module:     \aluControl
Used module:     \control
Used module:     \datapath
Used module:         \alu
Used module:         \nextPCLogic
Used module:         \regfile
Used module:         \signExtend
Used module:         \mux4to1
Used module:         $paramod\mux2to1\N=32
Used module:         $paramod\mux2to1\N=5
Used module:         \register
Used module:         \shiftLeft2

14.23.2. Analyzing design hierarchy..
Top module:  \mips
Used module:     \aluControl
Used module:     \control
Used module:     \datapath
Used module:         \alu
Used module:         \nextPCLogic
Used module:         \regfile
Used module:         \signExtend
Used module:         \mux4to1
Used module:         $paramod\mux2to1\N=32
Used module:         $paramod\mux2to1\N=5
Used module:         \register
Used module:         \shiftLeft2
Removed 0 unused modules.

14.24. Printing statistics.

=== $paramod\mux2to1\N=32 ===

   Number of wires:                  4
   Number of wire bits:             97
   Number of public wires:           4
   Number of public wire bits:      97
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 32
     $_MUX_                         32

=== $paramod\mux2to1\N=5 ===

   Number of wires:                  4
   Number of wire bits:             16
   Number of public wires:           4
   Number of public wire bits:      16
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  5
     $_MUX_                          5

=== alu ===

   Number of wires:                677
   Number of wire bits:            805
   Number of public wires:           7
   Number of public wire bits:     135
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                704
     $_ANDNOT_                      87
     $_AND_                         21
     $_AOI3_                        80
     $_AOI4_                        64
     $_MUX_                          1
     $_NAND_                        41
     $_NOR_                         40
     $_NOT_                         83
     $_OAI3_                        42
     $_OAI4_                        32
     $_ORNOT_                       35
     $_OR_                          66
     $_XNOR_                        51
     $_XOR_                         61

=== aluControl ===

   Number of wires:                 31
   Number of wire bits:             40
   Number of public wires:           3
   Number of public wire bits:      12
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 32
     $_ANDNOT_                       5
     $_AOI3_                         1
     $_AOI4_                         3
     $_NAND_                         2
     $_NOR_                          4
     $_OAI3_                         4
     $_ORNOT_                        6
     $_OR_                           7

=== control ===

   Number of wires:                116
   Number of wire bits:            130
   Number of public wires:          17
   Number of public wire bits:      28
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                120
     $_ANDNOT_                      13
     $_AND_                          1
     $_AOI3_                         4
     $_DFF_P_                        4
     $_NAND_                         4
     $_NOR_                         17
     $_NOT_                          9
     $_OAI3_                         8
     $_OAI4_                         1
     $_ORNOT_                       14
     $_OR_                          45

=== datapath ===

   Number of wires:                 36
   Number of wire bits:            634
   Number of public wires:          36
   Number of public wire bits:     634
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 17
     $paramod\mux2to1\N=32           3
     $paramod\mux2to1\N=5            1
     alu                             1
     mux4to1                         2
     nextPCLogic                     1
     regfile                         1
     register                        6
     shiftLeft2                      1
     signExtend                      1

=== mips ===

   Number of wires:                 22
   Number of wire bits:            183
   Number of public wires:          22
   Number of public wire bits:     183
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     aluControl                      1
     control                         1
     datapath                        1

=== mux4to1 ===

   Number of wires:                106
   Number of wire bits:            262
   Number of public wires:           6
   Number of public wire bits:     162
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                132
     $_ANDNOT_                      33
     $_AND_                          1
     $_AOI4_                        32
     $_MUX_                         32
     $_NOR_                          1
     $_ORNOT_                       33

=== nextPCLogic ===

   Number of wires:                  5
   Number of wire bits:              5
   Number of public wires:           4
   Number of public wire bits:       4
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $_AND_                          1
     $_OR_                           1

=== regfile ===

   Number of wires:               4174
   Number of wire bits:           5271
   Number of public wires:          41
   Number of public wire bits:    1138
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               5221
     $_ANDNOT_                    1120
     $_DFF_P_                     1024
     $_MUX_                       3008
     $_NAND_                         4
     $_NOR_                          4
     $_NOT_                          3
     $_ORNOT_                        1
     $_OR_                          57

=== register ===

   Number of wires:                 38
   Number of wire bits:            131
   Number of public wires:           5
   Number of public wire bits:      67
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 96
     $_ANDNOT_                      32
     $_DFF_P_                       32
     $_MUX_                         32

=== shiftLeft2 ===

   Number of wires:                  2
   Number of wire bits:             64
   Number of public wires:           2
   Number of public wire bits:      64
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

=== signExtend ===

   Number of wires:                  2
   Number of wire bits:             48
   Number of public wires:           2
   Number of public wire bits:      48
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

=== design hierarchy ===

   mips                              1
     aluControl                      1
     control                         1
     datapath                        1
       $paramod\mux2to1\N=32         3
       $paramod\mux2to1\N=5          1
       alu                           1
       mux4to1                       2
       nextPCLogic                   1
       regfile                       1
       register                      6
       shiftLeft2                    1
       signExtend                    1

   Number of wires:               5521
   Number of wire bits:           8797
   Number of public wires:         192
   Number of public wire bits:    3279
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               7020
     $_ANDNOT_                    1483
     $_AND_                         25
     $_AOI3_                        85
     $_AOI4_                       131
     $_DFF_P_                     1220
     $_MUX_                       3366
     $_NAND_                        51
     $_NOR_                         67
     $_NOT_                         95
     $_OAI3_                        54
     $_OAI4_                        33
     $_ORNOT_                      122
     $_OR_                         176
     $_XNOR_                        51
     $_XOR_                         61

14.25. Executing CHECK pass (checking for obvious problems).
checking module $paramod\mux2to1\N=32..
checking module $paramod\mux2to1\N=5..
checking module alu..
checking module aluControl..
checking module control..
checking module datapath..
checking module mips..
checking module mux4to1..
checking module nextPCLogic..
checking module regfile..
checking module register..
checking module shiftLeft2..
checking module signExtend..
found and reported 0 problems.

15. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell DFFNEGX1 (noninv, pins=3, area=384.00) is a direct match for cell type $_DFF_N_.
  cell DFFPOSX1 (noninv, pins=3, area=384.00) is a direct match for cell type $_DFF_P_.
  cell DFFSR (noninv, pins=5, area=704.00) is a direct match for cell type $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PNP_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPP_ from mapping for $_DFFSR_PNP_.
  create mapping for $_DFFSR_NNN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_NPN_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NNP_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NPP_ from mapping for $_DFFSR_NNP_.
  create mapping for $_DFF_NN0_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NN1_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NP0_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_NP1_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_PN0_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PN1_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PP0_ from mapping for $_DFFSR_PPP_.
  create mapping for $_DFF_PP1_ from mapping for $_DFFSR_PPP_.
  final dff cell mappings:
    DFFNEGX1 _DFF_N_ (.CLK( C), .D( D), .Q( Q));
    DFFPOSX1 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    DFFSR _DFF_NN0_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( 1));
    DFFSR _DFF_NN1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S( R));
    DFFSR _DFF_NP0_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( 1));
    DFFSR _DFF_NP1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S(~R));
    DFFSR _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( 1));
    DFFSR _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S( R));
    DFFSR _DFF_PP0_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( 1));
    DFFSR _DFF_PP1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S(~R));
    DFFSR _DFFSR_NNN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_NNP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_NPN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_NPP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S(~S));
    DFFSR _DFFSR_PNN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_PNP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_PPN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_PPP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S(~S));
Mapping DFF cells in module `$paramod\mux2to1\N=32':
Mapping DFF cells in module `$paramod\mux2to1\N=5':
Mapping DFF cells in module `\alu':
Mapping DFF cells in module `\aluControl':
Mapping DFF cells in module `\control':
  mapped 4 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `\datapath':
Mapping DFF cells in module `\mips':
Mapping DFF cells in module `\mux4to1':
Mapping DFF cells in module `\nextPCLogic':
Mapping DFF cells in module `\regfile':
  mapped 1024 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `\register':
  mapped 32 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `\shiftLeft2':
Mapping DFF cells in module `\signExtend':

16. Executing ABC pass (technology mapping using ABC).

16.1. Extracting gate netlist of module `$paramod\mux2to1\N=32' to `<abc-temp-dir>/input.blif'..
Extracted 32 gates and 97 wires to a netlist network with 65 inputs and 32 outputs.

16.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/openvlsi/anais/yosys/osu035_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.01 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "PADINOUT".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Scl_LibertyReadGenlib() skipped cell "PADFC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADNC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADVDD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADGND" without logic function.
ABC: Library "osu035_stdcells" from "/home/openvlsi/anais/yosys/osu035_stdcells.lib" has 28 cells (11 skipped: 4 seq; 3 tri-state; 4 no func; 0 dont_use).  Time =     0.01 sec
ABC: Memory =    0.38 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/openvlsi/anais/yosys/example.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -D 10000 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10000 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10000 
ABC: Current delay (894.77 ps) does not exceed the target delay (10000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 10000 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =    103 ( 37.9 %)   Cap = 23.5 ff (  0.0 %)   Area =     8736.00 (100.0 %)   Delay =   801.16 ps  ( 61.2 %)               
ABC: Path  0 --       3 : 0    1 pi      A =   0.00  Df =  25.3   -5.1 ps  S =  43.6 ps  Cin =  0.0 ff  Cout =  13.4 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --      99 : 1   10 BUFX2   A =  96.00  Df = 272.3   -1.5 ps  S = 235.4 ps  Cin = 13.4 ff  Cout = 151.3 ff  Cmax = 831.2 ff  G = 1129  
ABC: Path  2 --     101 : 1   10 BUFX2   A =  96.00  Df = 607.6   -9.6 ps  S = 298.3 ps  Cin = 13.4 ff  Cout = 195.0 ff  Cmax = 831.2 ff  G = 1455  
ABC: Path  3 --     105 : 2    1 NAND2X1 A =  96.00  Df = 755.3 -105.6 ps  S = 122.8 ps  Cin = 17.8 ff  Cout =  18.0 ff  Cmax = 403.1 ff  G =  100  
ABC: Path  4 --     106 : 3    1 OAI21X1 A =  92.00  Df = 801.2  -26.0 ps  S = 123.0 ps  Cin = 23.8 ff  Cout =   0.0 ff  Cmax = 405.5 ff  G =    0  
ABC: Start-point = pi2 (\sel).  End-point = po1 (\dout [1]).
ABC: + write_blif <abc-temp-dir>/output.blif 

16.1.2. Re-integrating ABC results.
ABC RESULTS:             BUFX2 cells:        7
ABC RESULTS:             INVX1 cells:       32
ABC RESULTS:           NAND2X1 cells:       32
ABC RESULTS:           OAI21X1 cells:       32
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       65
ABC RESULTS:          output signals:       32
Removing temp directory.

16.2. Extracting gate netlist of module `$paramod\mux2to1\N=5' to `<abc-temp-dir>/input.blif'..
Extracted 5 gates and 16 wires to a netlist network with 11 inputs and 5 outputs.

16.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/openvlsi/anais/yosys/osu035_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.01 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "PADINOUT".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Scl_LibertyReadGenlib() skipped cell "PADFC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADNC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADVDD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADGND" without logic function.
ABC: Library "osu035_stdcells" from "/home/openvlsi/anais/yosys/osu035_stdcells.lib" has 28 cells (11 skipped: 4 seq; 3 tri-state; 4 no func; 0 dont_use).  Time =     0.01 sec
ABC: Memory =    0.38 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/openvlsi/anais/yosys/example.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -D 10000 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10000 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10000 
ABC: Current delay (548.66 ps) does not exceed the target delay (10000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 10000 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =     16 ( 37.5 %)   Cap = 22.8 ff (  0.0 %)   Area =     1356.00 (100.0 %)   Delay =   534.95 ps  ( 68.8 %)               
ABC: Path  0 --       3 : 0    1 pi      A =   0.00  Df =  25.3   -5.1 ps  S =  43.6 ps  Cin =  0.0 ff  Cout =  13.4 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --      18 : 1   10 BUFX2   A =  96.00  Df = 339.8   -7.4 ps  S = 335.9 ps  Cin = 13.4 ff  Cout = 222.0 ff  Cmax = 831.2 ff  G = 1655  
ABC: Path  2 --      23 : 3    1 OAI21X1 A =  92.00  Df = 534.9  -84.7 ps  S = 109.8 ps  Cin = 23.8 ff  Cout =   0.0 ff  Cmax = 405.5 ff  G =    0  
ABC: Start-point = pi2 (\sel).  End-point = po1 (\dout [1]).
ABC: + write_blif <abc-temp-dir>/output.blif 

16.2.2. Re-integrating ABC results.
ABC RESULTS:             BUFX2 cells:        1
ABC RESULTS:             INVX1 cells:        5
ABC RESULTS:           NAND2X1 cells:        5
ABC RESULTS:           OAI21X1 cells:        5
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:        5
Removing temp directory.

16.3. Extracting gate netlist of module `\alu' to `<abc-temp-dir>/input.blif'..
Extracted 704 gates and 772 wires to a netlist network with 68 inputs and 34 outputs.

16.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/openvlsi/anais/yosys/osu035_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "PADINOUT".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Scl_LibertyReadGenlib() skipped cell "PADFC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADNC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADVDD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADGND" without logic function.
ABC: Library "osu035_stdcells" from "/home/openvlsi/anais/yosys/osu035_stdcells.lib" has 28 cells (11 skipped: 4 seq; 3 tri-state; 4 no func; 0 dont_use).  Time =     0.01 sec
ABC: Memory =    0.38 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/openvlsi/anais/yosys/example.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -D 10000 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10000 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10000 
ABC: Current delay (5552.04 ps) does not exceed the target delay (10000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 10000 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =    742 ( 13.9 %)   Cap = 50.4 ff (  0.0 %)   Area =    81716.00 ( 99.9 %)   Delay =  5497.31 ps  (  9.0 %)               
ABC: Path  0 --       4 : 0    1 pi      A =   0.00  Df =  25.3   -5.1 ps  S =  43.6 ps  Cin =  0.0 ff  Cout =  13.4 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --     197 : 1    6 BUFX2   A =  96.00  Df = 305.6   -4.3 ps  S = 284.7 ps  Cin = 13.4 ff  Cout = 186.2 ff  Cmax = 831.2 ff  G = 1388  
ABC: Path  2 --     198 : 2    5 XNOR2X1 A = 224.00  Df = 671.8  -23.8 ps  S = 397.3 ps  Cin = 48.0 ff  Cout = 120.9 ff  Cmax = 413.2 ff  G =  251  
ABC: Path  3 --     271 : 3    3 OAI21X1 A =  92.00  Df = 930.8  -68.9 ps  S = 302.0 ps  Cin = 23.8 ff  Cout =  80.8 ff  Cmax = 405.5 ff  G =  337  
ABC: Path  4 --     332 : 3    1 AOI21X1 A = 128.00  Df =1078.7  -87.6 ps  S = 179.8 ps  Cin = 25.3 ff  Cout =  27.1 ff  Cmax = 426.2 ff  G =  106  
ABC: Path  5 --     333 : 3    1 OAI21X1 A =  92.00  Df =1222.0 -139.8 ps  S = 177.7 ps  Cin = 23.8 ff  Cout =  26.9 ff  Cmax = 405.5 ff  G =  112  
ABC: Path  6 --     335 : 3    2 AOI21X1 A = 128.00  Df =1394.5 -140.1 ps  S = 207.7 ps  Cin = 25.3 ff  Cout =  54.1 ff  Cmax = 426.2 ff  G =  213  
ABC: Path  7 --     349 : 3    3 OAI21X1 A =  92.00  Df =1636.2 -203.1 ps  S = 283.8 ps  Cin = 23.8 ff  Cout =  80.8 ff  Cmax = 405.5 ff  G =  337  
ABC: Path  8 --     387 : 3    1 AOI21X1 A = 128.00  Df =1781.5 -220.8 ps  S = 177.0 ps  Cin = 25.3 ff  Cout =  27.1 ff  Cmax = 426.2 ff  G =  106  
ABC: Path  9 --     388 : 3    3 OAI21X1 A =  92.00  Df =2004.5 -280.0 ps  S = 261.7 ps  Cin = 23.8 ff  Cout =  72.2 ff  Cmax = 405.5 ff  G =  302  
ABC: Path 10 --     411 : 3    3 NAND3X1 A = 144.00  Df =2173.3 -205.0 ps  S = 305.6 ps  Cin = 22.3 ff  Cout =  75.3 ff  Cmax = 386.4 ff  G =  336  
ABC: Path 11 --     433 : 3    3 AOI21X1 A = 128.00  Df =2409.1 -240.9 ps  S = 273.7 ps  Cin = 25.3 ff  Cout =  76.1 ff  Cmax = 426.2 ff  G =  299  
ABC: Path 12 --     465 : 3    3 AOI21X1 A = 128.00  Df =2644.0 -238.6 ps  S = 284.2 ps  Cin = 25.3 ff  Cout =  81.6 ff  Cmax = 426.2 ff  G =  322  
ABC: Path 13 --     526 : 3    1 NOR3X1  A = 256.00  Df =2764.2 -210.2 ps  S = 278.3 ps  Cin = 31.2 ff  Cout =  26.5 ff  Cmax = 419.3 ff  G =   84  
ABC: Path 14 --     529 : 3    3 OAI21X1 A =  92.00  Df =2956.5 -155.2 ps  S = 285.9 ps  Cin = 23.8 ff  Cout =  76.7 ff  Cmax = 405.5 ff  G =  321  
ABC: Path 15 --     566 : 3    1 OAI21X1 A =  92.00  Df =3102.9 -219.5 ps  S = 214.5 ps  Cin = 23.8 ff  Cout =  22.6 ff  Cmax = 405.5 ff  G =   94  
ABC: Path 16 --     567 : 3    3 NAND3X1 A = 144.00  Df =3244.3 -140.5 ps  S = 276.7 ps  Cin = 22.3 ff  Cout =  62.3 ff  Cmax = 386.4 ff  G =  278  
ABC: Path 17 --     583 : 3    2 AOI21X1 A = 128.00  Df =3436.2 -170.2 ps  S = 214.4 ps  Cin = 25.3 ff  Cout =  53.4 ff  Cmax = 426.2 ff  G =  210  
ABC: Path 18 --     621 : 3    3 AOI21X1 A = 128.00  Df =3701.4 -153.0 ps  S = 365.3 ps  Cin = 25.3 ff  Cout = 111.3 ff  Cmax = 426.2 ff  G =  439  
ABC: Path 19 --     665 : 3    1 NOR3X1  A = 256.00  Df =3828.4 -119.1 ps  S = 216.5 ps  Cin = 31.2 ff  Cout =  26.5 ff  Cmax = 419.3 ff  G =   84  
ABC: Path 20 --     668 : 3    2 OAI21X1 A =  92.00  Df =3970.5  -82.1 ps  S = 200.6 ps  Cin = 23.8 ff  Cout =  45.1 ff  Cmax = 405.5 ff  G =  188  
ABC: Path 21 --     699 : 3    2 OAI21X1 A =  92.00  Df =4150.4 -132.2 ps  S = 237.1 ps  Cin = 23.8 ff  Cout =  49.6 ff  Cmax = 405.5 ff  G =  207  
ABC: Path 22 --     721 : 3    2 AOI21X1 A = 128.00  Df =4374.2 -127.9 ps  S = 291.4 ps  Cin = 25.3 ff  Cout =  79.5 ff  Cmax = 426.2 ff  G =  313  
ABC: Path 23 --     736 : 3    2 OAI21X1 A =  92.00  Df =4578.2 -199.4 ps  S = 218.0 ps  Cin = 23.8 ff  Cout =  49.6 ff  Cmax = 405.5 ff  G =  207  
ABC: Path 24 --     770 : 3    2 AOI21X1 A = 128.00  Df =4765.7 -201.6 ps  S = 240.5 ps  Cin = 25.3 ff  Cout =  58.9 ff  Cmax = 426.2 ff  G =  232  
ABC: Path 25 --     771 : 3    3 NOR3X1  A = 256.00  Df =4983.1 -172.7 ps  S = 340.8 ps  Cin = 31.2 ff  Cout =  79.9 ff  Cmax = 419.3 ff  G =  255  
ABC: Path 26 --     826 : 3    1 AOI21X1 A = 128.00  Df =5131.7 -181.9 ps  S = 160.7 ps  Cin = 25.3 ff  Cout =  27.1 ff  Cmax = 426.2 ff  G =  106  
ABC: Path 27 --     827 : 3    2 OAI21X1 A =  92.00  Df =5302.4 -232.5 ps  S = 209.4 ps  Cin = 23.8 ff  Cout =  44.8 ff  Cmax = 405.5 ff  G =  187  
ABC: Path 28 --     828 : 2    1 AND2X2  A = 128.00  Df =5431.8 -155.0 ps  S =  77.0 ps  Cin = 17.9 ff  Cout =  26.5 ff  Cmax = 831.0 ff  G =  148  
ABC: Path 29 --     841 : 3    1 OAI21X1 A =  92.00  Df =5497.3  -19.6 ps  S =  80.9 ps  Cin = 23.8 ff  Cout =   0.0 ff  Cmax = 405.5 ff  G =    0  
ABC: Start-point = pi3 (\aluInB [1]).  End-point = po32 (\aluResult [31]).
ABC: + write_blif <abc-temp-dir>/output.blif 

16.3.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:       27
ABC RESULTS:           AOI21X1 cells:       80
ABC RESULTS:             BUFX2 cells:       40
ABC RESULTS:             INVX1 cells:       62
ABC RESULTS:             INVX2 cells:        1
ABC RESULTS:            MUX2X1 cells:        7
ABC RESULTS:           NAND2X1 cells:       92
ABC RESULTS:           NAND3X1 cells:       18
ABC RESULTS:            NOR2X1 cells:      119
ABC RESULTS:            NOR3X1 cells:        6
ABC RESULTS:           OAI21X1 cells:      195
ABC RESULTS:           OAI22X1 cells:       21
ABC RESULTS:             OR2X2 cells:       36
ABC RESULTS:           XNOR2X1 cells:       31
ABC RESULTS:            XOR2X1 cells:        7
ABC RESULTS:        internal signals:      670
ABC RESULTS:           input signals:       68
ABC RESULTS:          output signals:       34
Removing temp directory.

16.4. Extracting gate netlist of module `\aluControl' to `<abc-temp-dir>/input.blif'..
Extracted 32 gates and 40 wires to a netlist network with 8 inputs and 4 outputs.

16.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/openvlsi/anais/yosys/osu035_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "PADINOUT".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Scl_LibertyReadGenlib() skipped cell "PADFC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADNC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADVDD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADGND" without logic function.
ABC: Library "osu035_stdcells" from "/home/openvlsi/anais/yosys/osu035_stdcells.lib" has 28 cells (11 skipped: 4 seq; 3 tri-state; 4 no func; 0 dont_use).  Time =     0.01 sec
ABC: Memory =    0.38 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/openvlsi/anais/yosys/example.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -D 10000 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10000 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10000 
ABC: Current delay (725.50 ps) does not exceed the target delay (10000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 10000 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =     16 ( 18.8 %)   Cap = 32.3 ff (  0.0 %)   Area =     1736.00 (100.0 %)   Delay =   725.50 ps  ( 37.5 %)               
ABC: Path  0 --       7 : 0    3 pi      A =   0.00  Df = 102.9  -18.9 ps  S = 166.2 ps  Cin =  0.0 ff  Cout =  53.9 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --      13 : 2    1 NOR2X1  A =  96.00  Df = 208.3  -32.8 ps  S = 114.5 ps  Cin = 22.4 ff  Cout =  22.6 ff  Cmax = 427.7 ff  G =  100  
ABC: Path  2 --      14 : 3    2 NAND3X1 A = 144.00  Df = 370.9  -86.3 ps  S = 233.3 ps  Cin = 22.3 ff  Cout =  50.1 ff  Cmax = 386.4 ff  G =  224  
ABC: Path  3 --      17 : 2    4 OR2X2   A = 128.00  Df = 625.1  -97.4 ps  S = 166.8 ps  Cin = 22.4 ff  Cout =  98.3 ff  Cmax = 830.9 ff  G =  438  
ABC: Path  4 --      22 : 2    1 AND2X2  A = 128.00  Df = 725.5  -29.0 ps  S =  42.9 ps  Cin = 17.9 ff  Cout =   0.0 ff  Cmax = 831.0 ff  G =    0  
ABC: Start-point = pi6 (\aluOp [0]).  End-point = po1 (\aluControl [1]).
ABC: + write_blif <abc-temp-dir>/output.blif 

16.4.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:        1
ABC RESULTS:             INVX1 cells:        3
ABC RESULTS:           NAND2X1 cells:        3
ABC RESULTS:           NAND3X1 cells:        1
ABC RESULTS:            NOR2X1 cells:        3
ABC RESULTS:           OAI21X1 cells:        2
ABC RESULTS:           OAI22X1 cells:        1
ABC RESULTS:             OR2X2 cells:        1
ABC RESULTS:           XNOR2X1 cells:        1
ABC RESULTS:        internal signals:       28
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

16.5. Extracting gate netlist of module `\control' to `<abc-temp-dir>/input.blif'..
Extracted 116 gates and 127 wires to a netlist network with 11 inputs and 18 outputs.

16.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/openvlsi/anais/yosys/osu035_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "PADINOUT".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Scl_LibertyReadGenlib() skipped cell "PADFC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADNC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADVDD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADGND" without logic function.
ABC: Library "osu035_stdcells" from "/home/openvlsi/anais/yosys/osu035_stdcells.lib" has 28 cells (11 skipped: 4 seq; 3 tri-state; 4 no func; 0 dont_use).  Time =     0.01 sec
ABC: Memory =    0.38 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/openvlsi/anais/yosys/example.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -D 10000 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10000 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10000 
ABC: Current delay (1129.43 ps) does not exceed the target delay (10000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 10000 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =     77 ( 19.5 %)   Cap = 41.8 ff (  0.0 %)   Area =     7956.00 (100.0 %)   Delay =  1201.78 ps  ( 18.2 %)               
ABC: Path  0 --       4 : 0    1 pi      A =   0.00  Df =  25.3   -5.1 ps  S =  43.6 ps  Cin =  0.0 ff  Cout =  13.4 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --      34 : 1    8 BUFX2   A =  96.00  Df = 290.1   -2.8 ps  S = 261.5 ps  Cin = 13.4 ff  Cout = 170.0 ff  Cmax = 831.2 ff  G = 1267  
ABC: Path  2 --      38 : 1    3 INVX1   A =  64.00  Df = 478.6  -15.4 ps  S = 200.3 ps  Cin = 13.4 ff  Cout =  58.2 ff  Cmax = 411.7 ff  G =  434  
ABC: Path  3 --      41 : 2    5 NAND2X1 A =  96.00  Df = 775.4  -58.1 ps  S = 396.2 ps  Cin = 17.8 ff  Cout = 121.4 ff  Cmax = 403.1 ff  G =  678  
ABC: Path  4 --      63 : 2    1 NOR2X1  A =  96.00  Df = 943.2 -128.2 ps  S = 152.4 ps  Cin = 22.4 ff  Cout =  17.7 ff  Cmax = 427.7 ff  G =   78  
ABC: Path  5 --      72 : 2    2 NAND2X1 A =  96.00  Df =1131.1 -201.5 ps  S = 198.1 ps  Cin = 17.8 ff  Cout =  53.1 ff  Cmax = 403.1 ff  G =  296  
ABC: Path  6 --      80 : 3    1 AOI21X1 A = 128.00  Df =1201.8 -188.3 ps  S =  86.0 ps  Cin = 25.3 ff  Cout =   0.0 ff  Cmax = 426.2 ff  G =    0  
ABC: Start-point = pi3 (\state [1]).  End-point = po10 ($0\state[3:0] [0]).
ABC: + write_blif <abc-temp-dir>/output.blif 

16.5.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:        1
ABC RESULTS:           AOI21X1 cells:        8
ABC RESULTS:             BUFX2 cells:        3
ABC RESULTS:             INVX1 cells:       12
ABC RESULTS:           NAND2X1 cells:       13
ABC RESULTS:           NAND3X1 cells:        9
ABC RESULTS:            NOR2X1 cells:       19
ABC RESULTS:           OAI21X1 cells:        7
ABC RESULTS:           OAI22X1 cells:        3
ABC RESULTS:             OR2X2 cells:        2
ABC RESULTS:        internal signals:       98
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:       18
Removing temp directory.

16.6. Extracting gate netlist of module `\datapath' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

16.7. Extracting gate netlist of module `\mips' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

16.8. Extracting gate netlist of module `\mux4to1' to `<abc-temp-dir>/input.blif'..
Extracted 132 gates and 262 wires to a netlist network with 130 inputs and 32 outputs.

16.8.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/openvlsi/anais/yosys/osu035_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "PADINOUT".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Scl_LibertyReadGenlib() skipped cell "PADFC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADNC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADVDD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADGND" without logic function.
ABC: Library "osu035_stdcells" from "/home/openvlsi/anais/yosys/osu035_stdcells.lib" has 28 cells (11 skipped: 4 seq; 3 tri-state; 4 no func; 0 dont_use).  Time =     0.01 sec
ABC: Memory =    0.38 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/openvlsi/anais/yosys/example.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -D 10000 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10000 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10000 
ABC: Current delay (1218.03 ps) does not exceed the target delay (10000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 10000 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =    117 ( 14.5 %)   Cap = 34.1 ff (  0.0 %)   Area =    15360.00 (100.0 %)   Delay =  1161.22 ps  ( 92.3 %)               
ABC: Path  0 --       1 : 0    3 pi      A =   0.00  Df = 101.9  -18.3 ps  S = 164.6 ps  Cin =  0.0 ff  Cout =  53.6 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --     163 : 1    2 INVX1   A =  64.00  Df = 225.1  -13.1 ps  S = 139.2 ps  Cin = 13.4 ff  Cout =  40.2 ff  Cmax = 411.7 ff  G =  299  
ABC: Path  2 --     173 : 2    1 AND2X2  A = 128.00  Df = 380.4  -49.1 ps  S =  61.3 ps  Cin = 17.9 ff  Cout =  13.4 ff  Cmax = 831.0 ff  G =   74  
ABC: Path  3 --     174 : 1    5 BUFX2   A =  96.00  Df = 584.9  -57.8 ps  S = 157.0 ps  Cin = 13.4 ff  Cout =  94.4 ff  Cmax = 831.2 ff  G =  704  
ABC: Path  4 --     175 : 1   10 BUFX2   A =  96.00  Df = 969.1  -55.6 ps  S = 406.8 ps  Cin = 13.4 ff  Cout = 270.7 ff  Cmax = 831.2 ff  G = 2021  
ABC: Path  5 --     176 : 4    1 AOI22X1 A = 160.00  Df =1133.1 -141.6 ps  S = 157.9 ps  Cin = 26.9 ff  Cout =  18.0 ff  Cmax = 422.4 ff  G =   66  
ABC: Path  6 --     177 : 2    1 NAND2X1 A =  96.00  Df =1161.2   -9.8 ps  S =  68.1 ps  Cin = 17.8 ff  Cout =   0.0 ff  Cmax = 403.1 ff  G =    0  
ABC: Start-point = pi0 (\sel [1]).  End-point = po0 (\dout [0]).
ABC: + write_blif <abc-temp-dir>/output.blif 

16.8.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:        2
ABC RESULTS:           AOI22X1 cells:       64
ABC RESULTS:             BUFX2 cells:       16
ABC RESULTS:             INVX1 cells:        1
ABC RESULTS:           NAND2X1 cells:       32
ABC RESULTS:            NOR2X1 cells:        2
ABC RESULTS:        internal signals:      100
ABC RESULTS:           input signals:      130
ABC RESULTS:          output signals:       32
Removing temp directory.

16.9. Extracting gate netlist of module `\nextPCLogic' to `<abc-temp-dir>/input.blif'..
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 1 outputs.

16.9.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/openvlsi/anais/yosys/osu035_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "PADINOUT".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Scl_LibertyReadGenlib() skipped cell "PADFC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADNC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADVDD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADGND" without logic function.
ABC: Library "osu035_stdcells" from "/home/openvlsi/anais/yosys/osu035_stdcells.lib" has 28 cells (11 skipped: 4 seq; 3 tri-state; 4 no func; 0 dont_use).  Time =     0.01 sec
ABC: Memory =    0.38 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/openvlsi/anais/yosys/example.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -D 10000 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10000 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10000 
ABC: Current delay (173.82 ps) does not exceed the target delay (10000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 10000 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =      2 ( 50.0 %)   Cap = 17.9 ff (  0.0 %)   Area =      192.00 (100.0 %)   Delay =   173.82 ps  (100.0 %)               
ABC: Path  0 --       2 : 0    1 pi      A =   0.00  Df =  50.3   -9.8 ps  S =  83.6 ps  Cin =  0.0 ff  Cout =  26.9 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --       5 : 3    1 AOI21X1 A = 128.00  Df = 138.7   -2.4 ps  S =  96.2 ps  Cin = 25.3 ff  Cout =  13.4 ff  Cmax = 426.2 ff  G =   52  
ABC: Path  2 --       6 : 1    1 INVX1   A =  64.00  Df = 173.8   -9.2 ps  S =  32.2 ps  Cin = 13.4 ff  Cout =   0.0 ff  Cmax = 411.7 ff  G =    0  
ABC: Start-point = pi1 (\branch).  End-point = po0 (\pcen).
ABC: + write_blif <abc-temp-dir>/output.blif 

16.9.2. Re-integrating ABC results.
ABC RESULTS:           AOI21X1 cells:        1
ABC RESULTS:             INVX1 cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        1
Removing temp directory.

16.10. Extracting gate netlist of module `\regfile' to `<abc-temp-dir>/input.blif'..
Extracted 4197 gates and 5270 wires to a netlist network with 1073 inputs and 1088 outputs.

16.10.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/openvlsi/anais/yosys/osu035_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "PADINOUT".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Scl_LibertyReadGenlib() skipped cell "PADFC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADNC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADVDD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADGND" without logic function.
ABC: Library "osu035_stdcells" from "/home/openvlsi/anais/yosys/osu035_stdcells.lib" has 28 cells (11 skipped: 4 seq; 3 tri-state; 4 no func; 0 dont_use).  Time =     0.01 sec
ABC: Memory =    0.38 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/openvlsi/anais/yosys/example.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -D 10000 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10000 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10000 
ABC: Current delay (3263.25 ps) does not exceed the target delay (10000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 10000 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =   5870 ( 17.5 %)   Cap = 49.2 ff (  0.1 %)   Area =   743168.00 ( 99.8 %)   Delay =  2288.43 ps  (  3.1 %)               
ABC: Path  0 --    1035 : 0    1 pi      A =   0.00  Df =  25.3   -5.1 ps  S =  43.6 ps  Cin =  0.0 ff  Cout =  13.4 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --    5494 : 1    7 BUFX2   A =  96.00  Df = 321.6   -4.0 ps  S = 308.7 ps  Cin = 13.4 ff  Cout = 205.0 ff  Cmax = 831.2 ff  G = 1521  
ABC: Path  2 --    5509 : 3    5 NOR3X1  A = 256.00  Df = 721.8  -97.4 ps  S = 399.2 ps  Cin = 31.2 ff  Cout = 116.3 ff  Cmax = 419.3 ff  G =  371  
ABC: Path  3 --    5510 : 2    5 AND2X2  A = 128.00  Df =1076.4 -239.0 ps  S = 178.5 ps  Cin = 17.9 ff  Cout = 102.5 ff  Cmax = 831.0 ff  G =  574  
ABC: Path  4 --    5917 : 2    4 NAND2X1 A =  96.00  Df =1322.6 -294.9 ps  S = 307.8 ps  Cin = 17.8 ff  Cout =  91.0 ff  Cmax = 403.1 ff  G =  509  
ABC: Path  5 --    6096 : 2    1 NOR2X1  A =  96.00  Df =1423.0 -307.4 ps  S = 160.4 ps  Cin = 22.4 ff  Cout =  13.4 ff  Cmax = 427.7 ff  G =   59  
ABC: Path  6 --    6097 : 1    5 BUFX2   A =  96.00  Df =1664.3 -331.3 ps  S = 164.3 ps  Cin = 13.4 ff  Cout =  99.4 ff  Cmax = 831.2 ff  G =  741  
ABC: Path  7 --    6098 : 1   10 BUFX2   A =  96.00  Df =2072.5 -327.2 ps  S = 443.0 ps  Cin = 13.4 ff  Cout = 295.8 ff  Cmax = 831.2 ff  G = 2208  
ABC: Path  8 --    6099 : 3    1 MUX2X1  A = 192.00  Df =2288.4  -49.6 ps  S = 125.0 ps  Cin = 27.5 ff  Cout =   0.0 ff  Cmax = 411.8 ff  G =    0  
ABC: Start-point = pi1034 (\rst).  End-point = po256 ($abc$17565$ys__n2726).
ABC: + write_blif <abc-temp-dir>/output.blif 

16.10.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:       17
ABC RESULTS:           AOI21X1 cells:      602
ABC RESULTS:           AOI22X1 cells:       54
ABC RESULTS:             BUFX2 cells:      739
ABC RESULTS:             INVX1 cells:      273
ABC RESULTS:             INVX2 cells:       13
ABC RESULTS:            MUX2X1 cells:     1598
ABC RESULTS:           NAND2X1 cells:      964
ABC RESULTS:           NAND3X1 cells:      117
ABC RESULTS:            NOR2X1 cells:      342
ABC RESULTS:            NOR3X1 cells:       23
ABC RESULTS:           OAI21X1 cells:     1012
ABC RESULTS:           OAI22X1 cells:       99
ABC RESULTS:             OR2X2 cells:       17
ABC RESULTS:        internal signals:     3109
ABC RESULTS:           input signals:     1073
ABC RESULTS:          output signals:     1088
Removing temp directory.

16.11. Extracting gate netlist of module `\register' to `<abc-temp-dir>/input.blif'..
Extracted 64 gates and 130 wires to a netlist network with 66 inputs and 32 outputs.

16.11.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/openvlsi/anais/yosys/osu035_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.01 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "PADINOUT".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Scl_LibertyReadGenlib() skipped cell "PADFC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADNC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADVDD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADGND" without logic function.
ABC: Library "osu035_stdcells" from "/home/openvlsi/anais/yosys/osu035_stdcells.lib" has 28 cells (11 skipped: 4 seq; 3 tri-state; 4 no func; 0 dont_use).  Time =     0.01 sec
ABC: Memory =    0.38 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/openvlsi/anais/yosys/example.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -D 10000 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10000 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10000 
ABC: Current delay (992.97 ps) does not exceed the target delay (10000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 10000 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =     72 ( 11.1 %)   Cap = 30.3 ff (  0.0 %)   Area =     9984.00 (100.0 %)   Delay =   944.88 ps  ( 88.9 %)               
ABC: Path  0 --       4 : 0    1 pi     A =   0.00  Df =  25.3   -5.1 ps  S =  43.6 ps  Cin =  0.0 ff  Cout =  13.4 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --     101 : 1    5 BUFX2  A =  96.00  Df = 223.7   -1.5 ps  S = 163.9 ps  Cin = 13.4 ff  Cout =  99.4 ff  Cmax = 831.2 ff  G =  741  
ABC: Path  2 --     102 : 1   10 BUFX2  A =  96.00  Df = 634.4   -3.4 ps  S = 443.0 ps  Cin = 13.4 ff  Cout = 295.8 ff  Cmax = 831.2 ff  G = 2208  
ABC: Path  3 --     103 : 3    1 MUX2X1 A = 192.00  Df = 903.7  -50.7 ps  S = 132.1 ps  Cin = 27.5 ff  Cout =  22.8 ff  Cmax = 411.8 ff  G =   82  
ABC: Path  4 --     104 : 2    1 NOR2X1 A =  96.00  Df = 944.9  -38.6 ps  S = 102.8 ps  Cin = 22.4 ff  Cout =   0.0 ff  Cmax = 427.7 ff  G =    0  
ABC: Start-point = pi3 (\en).  End-point = po0 ($0\dout[31:0] [0]).
ABC: + write_blif <abc-temp-dir>/output.blif 

16.11.2. Re-integrating ABC results.
ABC RESULTS:             BUFX2 cells:        8
ABC RESULTS:            MUX2X1 cells:       32
ABC RESULTS:            NOR2X1 cells:       32
ABC RESULTS:        internal signals:       32
ABC RESULTS:           input signals:       66
ABC RESULTS:          output signals:       32
Removing temp directory.

16.12. Extracting gate netlist of module `\shiftLeft2' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

16.13. Extracting gate netlist of module `\signExtend' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux2to1\N=32..
Finding unused cells or wires in module $paramod\mux2to1\N=5..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \aluControl..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \datapath..
Finding unused cells or wires in module \mips..
Finding unused cells or wires in module \mux4to1..
Finding unused cells or wires in module \nextPCLogic..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \register..
Finding unused cells or wires in module \shiftLeft2..
Finding unused cells or wires in module \signExtend..
Removed 126 unused cells and 13605 unused wires.
<suppressed ~9 debug messages>

18. Printing statistics.

=== $paramod\mux2to1\N=32 ===

   Number of wires:                 75
   Number of wire bits:            168
   Number of public wires:           4
   Number of public wire bits:      97
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                103
     BUFX2                           7
     INVX1                          32
     NAND2X1                        32
     OAI21X1                        32

   Chip area for module '$paramod\mux2to1\N=32': 8736.000000

=== $paramod\mux2to1\N=5 ===

   Number of wires:                 15
   Number of wire bits:             27
   Number of public wires:           4
   Number of public wire bits:      16
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 16
     BUFX2                           1
     INVX1                           5
     NAND2X1                         5
     OAI21X1                         5

   Chip area for module '$paramod\mux2to1\N=5': 1356.000000

=== alu ===

   Number of wires:                715
   Number of wire bits:            843
   Number of public wires:           7
   Number of public wire bits:     135
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                742
     AND2X2                         27
     AOI21X1                        80
     BUFX2                          40
     INVX1                          62
     INVX2                           1
     MUX2X1                          7
     NAND2X1                        92
     NAND3X1                        18
     NOR2X1                        119
     NOR3X1                          6
     OAI21X1                       195
     OAI22X1                        21
     OR2X2                          36
     XNOR2X1                        31
     XOR2X1                          7

   Chip area for module '\alu': 81716.000000

=== aluControl ===

   Number of wires:                 15
   Number of wire bits:             24
   Number of public wires:           3
   Number of public wire bits:      12
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 16
     AND2X2                          1
     INVX1                           3
     NAND2X1                         3
     NAND3X1                         1
     NOR2X1                          3
     OAI21X1                         2
     OAI22X1                         1
     OR2X2                           1
     XNOR2X1                         1

   Chip area for module '\aluControl': 1736.000000

=== control ===

   Number of wires:                 77
   Number of wire bits:             91
   Number of public wires:          17
   Number of public wire bits:      28
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 81
     AND2X2                          1
     AOI21X1                         8
     BUFX2                           3
     DFFPOSX1                        4
     INVX1                          12
     NAND2X1                        13
     NAND3X1                         9
     NOR2X1                         19
     OAI21X1                         7
     OAI22X1                         3
     OR2X2                           2

   Chip area for module '\control': 9492.000000

=== datapath ===

   Number of wires:                 36
   Number of wire bits:            634
   Number of public wires:          36
   Number of public wire bits:     634
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 17
     $paramod\mux2to1\N=32           3
     $paramod\mux2to1\N=5            1
     alu                             1
     mux4to1                         2
     nextPCLogic                     1
     regfile                         1
     register                        6
     shiftLeft2                      1
     signExtend                      1

   Area for cell type \nextPCLogic is unknown!
   Area for cell type \register is unknown!
   Area for cell type \regfile is unknown!
   Area for cell type \signExtend is unknown!
   Area for cell type \alu is unknown!
   Area for cell type \shiftLeft2 is unknown!
   Area for cell type \mux4to1 is unknown!
   Area for cell type $paramod\mux2to1\N=32 is unknown!
   Area for cell type $paramod\mux2to1\N=5 is unknown!

=== mips ===

   Number of wires:                 22
   Number of wire bits:            183
   Number of public wires:          22
   Number of public wire bits:     183
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     aluControl                      1
     control                         1
     datapath                        1

   Area for cell type \aluControl is unknown!
   Area for cell type \datapath is unknown!
   Area for cell type \control is unknown!

=== mux4to1 ===

   Number of wires:                 91
   Number of wire bits:            247
   Number of public wires:           6
   Number of public wire bits:     162
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                117
     AND2X2                          2
     AOI22X1                        64
     BUFX2                          16
     INVX1                           1
     NAND2X1                        32
     NOR2X1                          2

   Chip area for module '\mux4to1': 15360.000000

=== nextPCLogic ===

   Number of wires:                  5
   Number of wire bits:              5
   Number of public wires:           4
   Number of public wire bits:       4
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     AOI21X1                         1
     INVX1                           1

   Chip area for module '\nextPCLogic': 192.000000

=== regfile ===

   Number of wires:               5847
   Number of wire bits:           6944
   Number of public wires:          41
   Number of public wire bits:    1138
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               6894
     AND2X2                         17
     AOI21X1                       602
     AOI22X1                        54
     BUFX2                         739
     DFFPOSX1                     1024
     INVX1                         273
     INVX2                          13
     MUX2X1                       1598
     NAND2X1                       964
     NAND3X1                       117
     NOR2X1                        342
     NOR3X1                         23
     OAI21X1                      1012
     OAI22X1                        99
     OR2X2                          17

   Chip area for module '\regfile': 1136384.000000

=== register ===

   Number of wires:                 46
   Number of wire bits:            139
   Number of public wires:           5
   Number of public wire bits:      67
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                104
     BUFX2                           8
     DFFPOSX1                       32
     MUX2X1                         32
     NOR2X1                         32

   Chip area for module '\register': 22272.000000

=== shiftLeft2 ===

   Number of wires:                  2
   Number of wire bits:             64
   Number of public wires:           2
   Number of public wire bits:      64
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

=== signExtend ===

   Number of wires:                  2
   Number of wire bits:             48
   Number of public wires:           2
   Number of public wire bits:      48
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

=== design hierarchy ===

   mips                              1
     aluControl                      1
     control                         1
     datapath                        1
       $paramod\mux2to1\N=32         3
       $paramod\mux2to1\N=5          1
       alu                           1
       mux4to1                       2
       nextPCLogic                   1
       regfile                       1
       register                      6
       shiftLeft2                    1
       signExtend                    1

   Number of wires:               7419
   Number of wire bits:          10695
   Number of public wires:         192
   Number of public wire bits:    3279
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               8918
     AND2X2                         50
     AOI21X1                       691
     AOI22X1                       182
     BUFX2                         884
     DFFPOSX1                     1220
     INVX1                         454
     INVX2                          14
     MUX2X1                       1797
     NAND2X1                      1237
     NAND3X1                       145
     NOR2X1                        679
     NOR3X1                         29
     OAI21X1                      1317
     OAI22X1                       124
     OR2X2                          56
     XNOR2X1                        32
     XOR2X1                          7

   Chip area for top module '\mips': 1421436.000000

19. Executing Verilog backend.
Dumping module `$paramod\mux2to1\N=32'.
Dumping module `$paramod\mux2to1\N=5'.
Dumping module `\alu'.
Dumping module `\aluControl'.
Dumping module `\control'.
Dumping module `\datapath'.
Dumping module `\mips'.
Dumping module `\mux4to1'.
Dumping module `\nextPCLogic'.
Dumping module `\regfile'.
Dumping module `\register'.
Dumping module `\shiftLeft2'.
Dumping module `\signExtend'.

End of script. Logfile hash: bcae6fc951
CPU: user 6.33s system 0.20s, MEM: 67.17 MB total, 38.06 MB resident
Yosys 0.8+369 (git sha1 ea0e0722, gcc 7.3.0-27ubuntu1~18.04 -fPIC -Os)
Time spent: 26% 2x write_verilog (1 sec), 12% 2x abc (0 sec), ...
